*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

/*
! tailwindcss v3.4.17 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: #e5e7eb;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden]:where(:not([hidden="until-found"])) {
  display: none;
}

:where(:root),:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@media (prefers-color-scheme: dark) {
  :root {
    color-scheme: dark;
    --color-base-100: oklch(25.33% 0.016 252.42);
    --color-base-200: oklch(23.26% 0.014 253.1);
    --color-base-300: oklch(21.15% 0.012 254.09);
    --color-base-content: oklch(97.807% 0.029 256.847);
    --color-primary: oklch(58% 0.233 277.117);
    --color-primary-content: oklch(96% 0.018 272.314);
    --color-secondary: oklch(65% 0.241 354.308);
    --color-secondary-content: oklch(94% 0.028 342.258);
    --color-accent: oklch(77% 0.152 181.912);
    --color-accent-content: oklch(38% 0.063 188.416);
    --color-neutral: oklch(14% 0.005 285.823);
    --color-neutral-content: oklch(92% 0.004 286.32);
    --color-info: oklch(74% 0.16 232.661);
    --color-info-content: oklch(29% 0.066 243.157);
    --color-success: oklch(76% 0.177 163.223);
    --color-success-content: oklch(37% 0.077 168.94);
    --color-warning: oklch(82% 0.189 84.429);
    --color-warning-content: oklch(41% 0.112 45.904);
    --color-error: oklch(71% 0.194 13.428);
    --color-error-content: oklch(27% 0.105 12.094);
    --radius-selector: 0.5rem;
    --radius-field: 0.25rem;
    --radius-box: 0.5rem;
    --size-selector: 0.25rem;
    --size-field: 0.25rem;
    --border: 1px;
    --depth: 1;
    --noise: 0;
  }
}

:root:has(input.theme-controller[value=light]:checked),[data-theme=light] {
  color-scheme: light;
  --color-base-100: oklch(100% 0 0);
  --color-base-200: oklch(98% 0 0);
  --color-base-300: oklch(95% 0 0);
  --color-base-content: oklch(21% 0.006 285.885);
  --color-primary: oklch(45% 0.24 277.023);
  --color-primary-content: oklch(93% 0.034 272.788);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

:root:has(input.theme-controller[value=dark]:checked),[data-theme=dark] {
  color-scheme: dark;
  --color-base-100: oklch(25.33% 0.016 252.42);
  --color-base-200: oklch(23.26% 0.014 253.1);
  --color-base-300: oklch(21.15% 0.012 254.09);
  --color-base-content: oklch(97.807% 0.029 256.847);
  --color-primary: oklch(58% 0.233 277.117);
  --color-primary-content: oklch(96% 0.018 272.314);
  --color-secondary: oklch(65% 0.241 354.308);
  --color-secondary-content: oklch(94% 0.028 342.258);
  --color-accent: oklch(77% 0.152 181.912);
  --color-accent-content: oklch(38% 0.063 188.416);
  --color-neutral: oklch(14% 0.005 285.823);
  --color-neutral-content: oklch(92% 0.004 286.32);
  --color-info: oklch(74% 0.16 232.661);
  --color-info-content: oklch(29% 0.066 243.157);
  --color-success: oklch(76% 0.177 163.223);
  --color-success-content: oklch(37% 0.077 168.94);
  --color-warning: oklch(82% 0.189 84.429);
  --color-warning-content: oklch(41% 0.112 45.904);
  --color-error: oklch(71% 0.194 13.428);
  --color-error-content: oklch(27% 0.105 12.094);
  --radius-selector: 0.5rem;
  --radius-field: 0.25rem;
  --radius-box: 0.5rem;
  --size-selector: 0.25rem;
  --size-field: 0.25rem;
  --border: 1px;
  --depth: 1;
  --noise: 0;
}

@property --radialprogress {
  syntax: "<percentage>";

  inherits: true;

  initial-value: 0%;
}

:root {
  scrollbar-color: color-mix(in oklch, currentColor 35%, #0000) #0000;
}

:root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not([class*="drawer-open"]) > .drawer-toggle:checked ) {
  overflow: hidden;
}

:root, [data-theme] {
  background-color: var(--root-bg, var(--color-base-100));
  color: var(--color-base-content);
}

:root {
  --fx-noise: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='a'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='1.34' numOctaves='4' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23a)' opacity='0.2'%3E%3C/rect%3E%3C/svg%3E");
}

.chat {
  --mask-chat: url("data:image/svg+xml,%3csvg width='13' height='13' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M0 11.5004C0 13.0004 2 13.0004 2 13.0004H12H13V0.00036329L12.5 0C12.5 0 11.977 2.09572 11.8581 2.50033C11.6075 3.35237 10.9149 4.22374 9 5.50036C6 7.50036 0 10.0004 0 11.5004Z'/%3e%3c/svg%3e");
}

:where( :root:has( .modal-open, .modal[open], .modal:target, .modal-toggle:checked, .drawer:not(.drawer-open) > .drawer-toggle:checked ) ) {
  scrollbar-gutter: stable;
  background-image: linear-gradient(var(--color-base-100), var(--color-base-100));
  --root-bg: color-mix(in srgb, var(--color-base-100), oklch(0% 0 0) 40%);
}

.container {
  width: 100%;
}

@media (min-width: 640px) {
  .container {
    max-width: 640px;
  }
}

@media (min-width: 768px) {
  .container {
    max-width: 768px;
  }
}

@media (min-width: 1024px) {
  .container {
    max-width: 1024px;
  }
}

@media (min-width: 1280px) {
  .container {
    max-width: 1280px;
  }
}

@media (min-width: 1536px) {
  .container {
    max-width: 1536px;
  }
}

.footer {
  display: grid;
  width: 100%;
  grid-auto-flow: row;
  place-items: start;
  -moz-column-gap: calc(0.25rem * 4);
       column-gap: calc(0.25rem * 4);
  row-gap: calc(0.25rem * 10);
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.footer > * {
  display: grid;
  place-items: start;
  gap: calc(0.25rem * 2);
}

.footer.footer-center {
  grid-auto-flow: column dense;
  place-items: center;
  text-align: center;
}

.footer.footer-center > * {
  place-items: center;
}

.footer-title {
  margin-bottom: calc(0.25rem * 2);
  text-transform: uppercase;
  opacity: 60%;
  font-weight: 600;
}

.footer-horizontal {
  grid-auto-flow: column;
}

.footer-horizontal.footer-center {
  grid-auto-flow: row dense;
}

.footer-vertical {
  grid-auto-flow: row;
}

.footer-vertical.footer-center {
  grid-auto-flow: column dense;
}

.skeleton {
  border-radius: var(--radius-box);
  background-color: var(--color-base-300);
}

@media (prefers-reduced-motion: reduce) {
  .skeleton {
    transition-duration: 15s;
  }
}

.skeleton {
  will-change: background-position;
  animation: skeleton 1.8s ease-in-out infinite;
  background-image: linear-gradient( 105deg, #0000 0% 40%, var(--color-base-100) 50%, #0000 60% 100% );
  background-size: 200% auto;
  background-repeat: no-repeat;
  background-position-x: -50%;
}

@keyframes skeleton {
  0% {
    background-position: 150%;
  }

  100% {
    background-position: -50%;
  }
}

.loading {
  pointer-events: none;
  display: inline-block;
  aspect-ratio: 1 / 1;
  background-color: currentColor;
  vertical-align: middle;
  width: calc(var(--size-selector, 0.25rem) * 6);
  -webkit-mask-size: 100%;
          mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}

.loading-spinner {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' stroke='black' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cg transform-origin='center'%3E%3Ccircle cx='12' cy='12' r='9.5' fill='none' stroke-width='3' stroke-linecap='round'%3E%3CanimateTransform attributeName='transform' type='rotate' from='0 12 12' to='360 12 12' dur='2s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dasharray' values='0,150;42,150;42,150' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-dashoffset' values='0;-16;-59' keyTimes='0;0.475;1' dur='1.5s' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}

.loading-dots {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='4' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3C/circle%3E%3Ccircle cx='12' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.1s'/%3E%3C/circle%3E%3Ccircle cx='20' cy='12' r='3'%3E%3Canimate attributeName='cy' values='12;6;12;12' keyTimes='0;0.286;0.571;1' dur='1.05s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1' begin='0.2s'/%3E%3C/circle%3E%3C/svg%3E");
}

.loading-ring {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='44' height='44' viewBox='0 0 44 44' xmlns='http://www.w3.org/2000/svg' stroke='white'%3E%3Cg fill='none' fill-rule='evenodd' stroke-width='2'%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='0s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='0s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3Ccircle cx='22' cy='22' r='1'%3E%3Canimate attributeName='r' begin='-0.9s' dur='1.8s' values='1;20' calcMode='spline' keyTimes='0;1' keySplines='0.165,0.84,0.44,1' repeatCount='indefinite'/%3E%3Canimate attributeName='stroke-opacity' begin='-0.9s' dur='1.8s' values='1;0' calcMode='spline' keyTimes='0;1' keySplines='0.3,0.61,0.355,1' repeatCount='indefinite'/%3E%3C/circle%3E%3C/g%3E%3C/svg%3E");
}

.loading-ball {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cellipse cx='12' cy='5' rx='4' ry='4'%3E%3Canimate attributeName='cy' values='5;20;20.5;20;5' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3Canimate attributeName='rx' values='4;4;4.8;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='ry' values='4;4;3;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3C/ellipse%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Cellipse cx='12' cy='5' rx='4' ry='4'%3E%3Canimate attributeName='cy' values='5;20;20.5;20;5' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite' keySplines='.33,0,.66,.33;.33,.66,.66,1'/%3E%3Canimate attributeName='rx' values='4;4;4.8;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='ry' values='4;4;3;4;4' keyTimes='0;0.469;0.5;0.531;1' dur='.8s' repeatCount='indefinite'/%3E%3C/ellipse%3E%3C/svg%3E");
}

.loading-bars {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg width='24' height='24' viewBox='0 0 24 24' xmlns='http://www.w3.org/2000/svg'%3E%3Crect x='1' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite'/%3E%3C/rect%3E%3Crect x='9' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.65s'/%3E%3C/rect%3E%3Crect x='17' y='1' width='6' height='22'%3E%3Canimate attributeName='y' values='1;5;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='height' values='22;14;22' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3Canimate attributeName='opacity' values='1;0.2;1' keyTimes='0;0.938;1' dur='.8s' repeatCount='indefinite' begin='-0.5s'/%3E%3C/rect%3E%3C/svg%3E");
}

.loading-infinity {
  -webkit-mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
          mask-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' style='shape-rendering:auto;' width='200px' height='200px' viewBox='0 0 100 100' preserveAspectRatio='xMidYMid'%3E%3Cpath fill='none' stroke='black' stroke-width='10' stroke-dasharray='205.271 51.318' d='M24.3 30C11.4 30 5 43.3 5 50s6.4 20 19.3 20c19.3 0 32.1-40 51.4-40C88.6 30 95 43.3 95 50s-6.4 20-19.3 20C56.4 70 43.6 30 24.3 30z' stroke-linecap='round' style='transform:scale(0.8);transform-origin:50px 50px'%3E%3Canimate attributeName='stroke-dashoffset' repeatCount='indefinite' dur='2s' keyTimes='0;1' values='0;256.589'/%3E%3C/path%3E%3C/svg%3E");
}

.loading-xs {
  width: calc(var(--size-selector, 0.25rem) * 4);
}

.loading-sm {
  width: calc(var(--size-selector, 0.25rem) * 5);
}

.loading-md {
  width: calc(var(--size-selector, 0.25rem) * 6);
}

.loading-lg {
  width: calc(var(--size-selector, 0.25rem) * 7);
}

.loading-xl {
  width: calc(var(--size-selector, 0.25rem) * 8);
}

.\!validator:user-valid, .\!validator:user-valid:focus, .\!validator:user-valid:checked, .\!validator:user-valid[aria-checked="true"], .\!validator:user-valid:focus-within, .\!validator:has(:user-valid), .\!validator:has(:user-valid):focus, .\!validator:has(:user-valid):checked, .\!validator:has(:user-valid)[aria-checked="true"], .\!validator:has(:user-valid):focus-within {
  --input-color: var(--color-success) !important;
}

.validator:user-valid, .validator:user-valid:focus, .validator:user-valid:checked, .validator:user-valid[aria-checked="true"], .validator:user-valid:focus-within, .validator:has(:user-valid), .validator:has(:user-valid):focus, .validator:has(:user-valid):checked, .validator:has(:user-valid)[aria-checked="true"], .validator:has(:user-valid):focus-within {
  --input-color: var(--color-success);
}

.\!validator:user-valid, .\!validator:user-valid:focus, .\!validator:user-valid:checked, .\!validator:user-valid[aria-checked="true"], .\!validator:user-valid:focus-within, .\!validator:has(:user-valid), .\!validator:has(:user-valid):focus, .\!validator:has(:user-valid):checked, .\!validator:has(:user-valid)[aria-checked="true"], .\!validator:has(:user-valid):focus-within {
  --input-color: var(--color-success) !important;
}

.\!validator:user-invalid, .\!validator:user-invalid:focus, .\!validator:user-invalid:checked, .\!validator:user-invalid[aria-checked="true"], .\!validator:user-invalid:focus-within, .\!validator:has(:user-invalid), .\!validator:has(:user-invalid):focus, .\!validator:has(:user-invalid):checked, .\!validator:has(:user-invalid)[aria-checked="true"], .\!validator:has(:user-invalid):focus-within {
  --input-color: var(--color-error) !important;
}

.validator:user-invalid, .validator:user-invalid:focus, .validator:user-invalid:checked, .validator:user-invalid[aria-checked="true"], .validator:user-invalid:focus-within, .validator:has(:user-invalid), .validator:has(:user-invalid):focus, .validator:has(:user-invalid):checked, .validator:has(:user-invalid)[aria-checked="true"], .validator:has(:user-invalid):focus-within {
  --input-color: var(--color-error);
}

.\!validator:user-invalid, .\!validator:user-invalid:focus, .\!validator:user-invalid:checked, .\!validator:user-invalid[aria-checked="true"], .\!validator:user-invalid:focus-within, .\!validator:has(:user-invalid), .\!validator:has(:user-invalid):focus, .\!validator:has(:user-invalid):checked, .\!validator:has(:user-invalid)[aria-checked="true"], .\!validator:has(:user-invalid):focus-within {
  --input-color: var(--color-error) !important;
}

.\!validator:user-invalid ~ .validator-hint, .\!validator:has(:user-invalid) ~ .validator-hint {
  visibility: visible !important;
  display: block !important;
  color: var(--color-error) !important;
}

.validator:user-invalid ~ .validator-hint, .validator:has(:user-invalid) ~ .validator-hint {
  visibility: visible;
  display: block;
  color: var(--color-error);
}

.\!validator:user-invalid ~ .validator-hint, .\!validator:has(:user-invalid) ~ .validator-hint {
  visibility: visible !important;
  display: block !important;
  color: var(--color-error) !important;
}

.\!validator ~ .validator-hint {
  visibility: hidden !important;
}

.validator ~ .validator-hint {
  visibility: hidden;
}

.validator-hint {
  margin-top: calc(0.25rem * 2);
  font-size: var(--text-xs);
  line-height: var(--tw-leading, var(--text-xs--line-height));
}

.progress {
  position: relative;
  height: calc(0.25rem * 2);
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  overflow: hidden;
  border-radius: var(--radius-box);
  background-color: color-mix(in oklab, currentColor 20%, transparent);
  color: var(--color-base-content);
}

.progress:indeterminate {
  background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
  background-size: 200%;
  background-position-x: 15%;
  animation: progress 5s ease-in-out infinite;
}

@supports (-moz-appearance: none) {
  .progress:indeterminate::-moz-progress-bar {
    background-color: transparent;
    background-image: repeating-linear-gradient( 90deg, currentColor -1%, currentColor 10%, #0000 10%, #0000 90% );
    background-size: 200%;
    background-position-x: 15%;
    animation: progress 5s ease-in-out infinite;
  }

  .progress::-moz-progress-bar {
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
}

@supports (-webkit-appearance: none) {
  .progress::-webkit-progress-bar {
    border-radius: var(--radius-box);
    background-color: transparent;
  }

  .progress::-webkit-progress-value {
    border-radius: var(--radius-box);
    background-color: currentColor;
  }
}

.progress-primary {
  color: var(--color-primary);
}

.progress-secondary {
  color: var(--color-secondary);
}

.progress-accent {
  color: var(--color-accent);
}

.progress-neutral {
  color: var(--color-neutral);
}

.progress-info {
  color: var(--color-info);
}

.progress-success {
  color: var(--color-success);
}

.progress-warning {
  color: var(--color-warning);
}

.progress-error {
  color: var(--color-error);
}

@keyframes progress {
  50% {
    background-position-x: -115%;
  }
}

.swap {
  position: relative;
  display: inline-grid;
  cursor: pointer;
  place-content: center;
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.swap input {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border: none;
}

.swap > * {
  grid-column-start: 1;
  grid-row-start: 1;
  transition-property: transform, rotate, opacity;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.swap .swap-on, .swap .swap-indeterminate, .swap input:indeterminate ~ .swap-on {
  opacity: 0%;
}

.swap input:is(:checked, :indeterminate) ~ .swap-off {
  opacity: 0%;
}

.swap input:checked ~ .swap-on, .swap input:indeterminate ~ .swap-indeterminate {
  opacity: 100%;
}

.swap-active .swap-off {
  opacity: 0%;
}

.swap-active .swap-on {
  opacity: 100%;
}

.swap-rotate .swap-on, .swap-rotate input:indeterminate ~ .swap-on {
  rotate: 45deg;
}

.swap-rotate input:is(:checked, :indeterminate) ~ .swap-on, .swap-rotate.swap-active .swap-on {
  rotate: 0deg;
}

.swap-rotate input:is(:checked, :indeterminate) ~ .swap-off, .swap-rotate.swap-active .swap-off {
  rotate: calc(45deg * -1);
}

.swap-flip {
  transform-style: preserve-3d;
  perspective: 20rem;
}

.swap-flip .swap-on, .swap-flip .swap-indeterminate, .swap-flip input:indeterminate ~ .swap-on {
  transform: rotateY(180deg);
  backface-visibility: hidden;
  opacity: 100%;
}

.swap-flip input:is(:checked, :indeterminate) ~ .swap-on, .swap-flip.swap-active .swap-on {
  transform: rotateY(0deg);
}

.swap-flip input:is(:checked, :indeterminate) ~ .swap-off, .swap-flip.swap-active .swap-off {
  transform: rotateY(-180deg);
  backface-visibility: hidden;
  opacity: 100%;
}

.\!diff {
  position: relative !important;
  display: grid !important;
  width: 100% !important;
  overflow: hidden !important;
  webkit-user-select: none !important;
  -webkit-user-select: none !important;
     -moz-user-select: none !important;
          user-select: none !important;
  direction: ltr !important;
  container-type: inline-size !important;
  grid-template-columns: auto 1fr !important;
}

.diff {
  position: relative;
  display: grid;
  width: 100%;
  overflow: hidden;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  direction: ltr;
  container-type: inline-size;
  grid-template-columns: auto 1fr;
}

.\!diff:focus-visible, .\!diff:has(.diff-item-1:focus) {
  outline-style: var(--tw-outline-style) !important;
  outline-width: 2px !important;
  outline-offset: 1px !important;
  outline-color: var(--color-base-content) !important;
}

.diff:focus-visible, .diff:has(.diff-item-1:focus) {
  outline-style: var(--tw-outline-style);
  outline-width: 2px;
  outline-offset: 1px;
  outline-color: var(--color-base-content);
}

.\!diff:focus-visible, .\!diff:has(.diff-item-1:focus) {
  outline-style: var(--tw-outline-style) !important;
  outline-width: 2px !important;
  outline-offset: 1px !important;
  outline-color: var(--color-base-content) !important;
}

.\!diff:focus-visible {
  outline-style: var(--tw-outline-style) !important;
  outline-width: 2px !important;
  outline-offset: 1px !important;
  outline-color: var(--color-base-content) !important;
}

.diff:focus-visible {
  outline-style: var(--tw-outline-style);
  outline-width: 2px;
  outline-offset: 1px;
  outline-color: var(--color-base-content);
}

.\!diff:focus-visible .diff-resizer {
  min-width: 90cqi !important;
  max-width: 90cqi !important;
}

.diff:focus-visible .diff-resizer {
  min-width: 90cqi;
  max-width: 90cqi;
}

.\!diff:has(.diff-item-2:focus-visible) {
  outline-style: var(--tw-outline-style) !important;
  outline-width: 2px !important;
  outline-offset: 1px !important;
}

.diff:has(.diff-item-2:focus-visible) {
  outline-style: var(--tw-outline-style);
  outline-width: 2px;
  outline-offset: 1px;
}

.\!diff:has(.diff-item-2:focus-visible) .diff-resizer {
  min-width: 10cqi !important;
  max-width: 10cqi !important;
}

.diff:has(.diff-item-2:focus-visible) .diff-resizer {
  min-width: 10cqi;
  max-width: 10cqi;
}

@supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
  .\!diff:focus .diff-resizer {
    min-width: 10cqi !important;
    max-width: 10cqi !important;
  }

  .\!diff:has(.diff-item-1:focus) .diff-resizer {
    min-width: 90cqi !important;
    max-width: 90cqi !important;
  }

  .diff:focus .diff-resizer {
    min-width: 10cqi;
    max-width: 10cqi;
  }

  .diff:has(.diff-item-1:focus) .diff-resizer {
    min-width: 90cqi;
    max-width: 90cqi;
  }

  .\!diff:focus .diff-resizer {
    min-width: 10cqi !important;
    max-width: 10cqi !important;
  }

  .\!diff:has(.diff-item-1:focus) .diff-resizer {
    min-width: 90cqi !important;
    max-width: 90cqi !important;
  }
}

.diff-resizer {
  position: relative;
  top: calc(1/2 * 100%);
  z-index: 1;
  grid-column-start: 1;
  grid-row-start: 1;
  height: calc(0.25rem * 2);
  width: 50cqi;
  max-width: calc(100cqi - 1rem);
  min-width: 1rem;
  resize: horizontal;
  overflow: hidden;
  opacity: 0%;
  transform: scaleY(3) translate(0.35rem, 0.08rem);
  cursor: ew-resize;
  transform-origin: 100% 100%;
  clip-path: inset(calc(100% - 0.75rem) 0 0 calc(100% - 0.75rem));
  transition: min-width 0.3s ease-out, max-width 0.3s ease-out;
}

.diff-item-2 {
  position: relative;
  grid-column-start: 1;
  grid-row-start: 1;
}

.diff-item-2:after {
  pointer-events: none;
  position: absolute;
  top: calc(1/2 * 100%);
  right: 1px;
  bottom: calc(0.25rem * 0);
  z-index: 2;
  border-radius: calc(infinity * 1px);
  background-color: color-mix(in oklab, var(--color-base-100) 50%, transparent);
  width: 1.2rem;
  height: 1.8rem;
  border: 2px solid var(--color-base-100);
  content: "";
  outline: 1px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
  outline-offset: -3px;
  -webkit-backdrop-filter: blur(8px);
          backdrop-filter: blur(8px);
  box-shadow: 0 1px 2px 0 oklch(0% 0 0 / 0.1);
  translate: 50% -50%;
}

.diff-item-2 > * {
  pointer-events: none;
  position: absolute;
  top: calc(0.25rem * 0);
  bottom: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  height: 100%;
  width: 100cqi;
  max-width: none;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
}

@supports (-webkit-overflow-scrolling: touch) and (overflow: -webkit-paged-x) {
  .diff-item-2:after {
    content: none;
  }
}

.diff-item-1 {
  position: relative;
  z-index: 1;
  grid-column-start: 1;
  grid-row-start: 1;
  overflow: hidden;
  border-right: 2px solid var(--color-base-100);
}

.diff-item-1 > * {
  pointer-events: none;
  position: absolute;
  top: calc(0.25rem * 0);
  bottom: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  height: 100%;
  width: 100cqi;
  max-width: none;
  -o-object-fit: cover;
     object-fit: cover;
  -o-object-position: center;
     object-position: center;
}

:where(.btn) {
  width: unset;
}

.btn {
  display: inline-flex;
  flex-shrink: 0;
  cursor: pointer;
  flex-wrap: nowrap;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 1.5);
  text-align: center;
  vertical-align: middle;
  outline-offset: 2px;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  padding-inline: var(--btn-p);
  color: var(--btn-fg);
  --tw-prose-links: var(--btn-fg);
  height: var(--size);
  font-size: var(--fontsize, 0.875rem);
  font-weight: 600;
  outline-color: var(--btn-color, var(--color-base-content));
  transition-property: color, background-color, border-color, box-shadow;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  transition-duration: 0.2s;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-color: var(--btn-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--btn-noise);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  text-shadow: 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 0.15));
  box-shadow: 0 0.5px 0 0.5px oklch(100% 0 0 / calc(var(--depth) * 6%)) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-p: 1rem;
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 calc(var(--depth) * 5%));
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000),
    0 4px 3px -2px color-mix(in oklab, var(--btn-bg) calc(var(--depth) * 30%), #0000);
  --btn-noise: var(--fx-noise);
}

.prose .btn {
  text-decoration-line: none;
}

@media (hover: hover) {
  .btn:hover {
    --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  }
}

.btn:focus-visible {
  outline-width: 2px;
  outline-style: solid;
}

.btn:active:not(.btn-active) {
  translate: 0 0.5px;
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 5%);
  --btn-border: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
}

.btn:is(:disabled, [disabled], .btn-disabled):not(.btn-link, .btn-ghost) {
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  box-shadow: none;
}

.btn:is(:disabled, [disabled], .btn-disabled) {
  pointer-events: none;
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

@media (hover: hover) {
  .btn:is(:disabled, [disabled], .btn-disabled):hover {
    pointer-events: none;
    background-color: color-mix(in oklab, var(--color-neutral) 20%, transparent);
    --btn-border: #0000;
    --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
  }
}

.btn:is(input[type="checkbox"], input[type="radio"]) {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.btn:is(input[type="checkbox"], input[type="radio"])::after {
  content: attr(aria-label);
}

.btn:where(input:checked:not(.filter .btn)) {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
  isolation: isolate;
}

.btn-active {
  --btn-bg: color-mix(in oklab, var(--btn-color, var(--color-base-200)), #000 7%);
  --btn-shadow: 0 0 0 0 oklch(0% 0 0/0), 0 0 0 0 oklch(0% 0 0/0);
  isolation: isolate;
}

.btn-primary {
  --btn-color: var(--color-primary);
  --btn-fg: var(--color-primary-content);
}

.btn-secondary {
  --btn-color: var(--color-secondary);
  --btn-fg: var(--color-secondary-content);
}

.btn-accent {
  --btn-color: var(--color-accent);
  --btn-fg: var(--color-accent-content);
}

.btn-neutral {
  --btn-color: var(--color-neutral);
  --btn-fg: var(--color-neutral-content);
}

.btn-info {
  --btn-color: var(--color-info);
  --btn-fg: var(--color-info-content);
}

.btn-success {
  --btn-color: var(--color-success);
  --btn-fg: var(--color-success-content);
}

.btn-warning {
  --btn-color: var(--color-warning);
  --btn-fg: var(--color-warning-content);
}

.btn-error {
  --btn-color: var(--color-error);
  --btn-fg: var(--color-error-content);
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-border: #0000;
  --btn-noise: none;
}

.btn-ghost:not(.btn-active, :hover, :active:focus, :focus-visible):not(:disabled, [disabled], .btn-disabled) {
  outline-color: currentColor;
  --btn-fg: currentColor;
}

.btn-link {
  text-decoration-line: underline;
  outline-color: currentColor;
  --btn-border: #0000;
  --btn-bg: #0000;
  --btn-fg: var(--color-primary);
  --btn-noise: none;
  --btn-shadow: "";
}

.btn-link:is(.btn-active, :hover, :active:focus, :focus-visible) {
  text-decoration-line: underline;
  --btn-border: #0000;
  --btn-bg: #0000;
}

.btn-outline:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
  --btn-shadow: "";
  --btn-bg: #0000;
  --btn-fg: var(--btn-color);
  --btn-border: var(--btn-color);
  --btn-noise: none;
}

.btn-dash:not( .btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled, :checked ) {
  --btn-shadow: "";
  border-style: dashed;
  --btn-bg: #0000;
  --btn-fg: var(--btn-color);
  --btn-border: var(--btn-color);
  --btn-noise: none;
}

.btn-soft:not(.btn-active, :hover, :active:focus, :focus-visible, :disabled, [disabled], .btn-disabled) {
  --btn-shadow: "";
  --btn-fg: var(--btn-color, var(--color-base-content));
  --btn-bg: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 8%,
      var(--color-base-100)
    );
  --btn-border: color-mix(
      in oklab,
      var(--btn-color, var(--color-base-content)) 10%,
      var(--color-base-100)
    );
  --btn-noise: none;
}

.btn-xs {
  --fontsize: 0.6875rem;
  --btn-p: 0.5rem;
  --size: calc(var(--size-field, 0.25rem) * 6);
}

.btn-sm {
  --fontsize: 0.75rem;
  --btn-p: 0.75rem;
  --size: calc(var(--size-field, 0.25rem) * 8);
}

.btn-md {
  --fontsize: 0.875rem;
  --btn-p: 1rem;
  --size: calc(var(--size-field, 0.25rem) * 10);
}

.btn-lg {
  --fontsize: 1.125rem;
  --btn-p: 1.25rem;
  --size: calc(var(--size-field, 0.25rem) * 12);
}

.btn-xl {
  --fontsize: 1.375rem;
  --btn-p: 1.5rem;
  --size: calc(var(--size-field, 0.25rem) * 14);
}

.btn-square {
  padding-inline: calc(0.25rem * 0);
  width: var(--size);
  height: var(--size);
}

.btn-circle {
  border-radius: calc(infinity * 1px);
  padding-inline: calc(0.25rem * 0);
  width: var(--size);
  height: var(--size);
}

.btn-wide {
  width: 100%;
  max-width: calc(0.25rem * 64);
}

.btn-block {
  width: 100%;
}

.\!filter {
  display: flex !important;
  flex-wrap: wrap !important;
}

.filter {
  display: flex;
  flex-wrap: wrap;
}

.\!filter input[type="radio"] {
  width: auto !important;
}

.filter input[type="radio"] {
  width: auto;
}

.\!filter input {
  overflow: hidden !important;
  opacity: 100% !important;
  scale: 1 !important;
  transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s !important;
}

.filter input {
  overflow: hidden;
  opacity: 100%;
  scale: 1;
  transition: margin 0.1s, opacity 0.3s, padding 0.3s, border-width 0.1s;
}

.\!filter input:not(:last-child) {
  margin-inline-end: calc(0.25rem * 1) !important;
}

.filter input:not(:last-child) {
  margin-inline-end: calc(0.25rem * 1);
}

.\!filter input.filter-reset {
  aspect-ratio: 1 / 1 !important;
}

.filter input.filter-reset {
  aspect-ratio: 1 / 1;
}

.\!filter input.filter-reset::after {
  content: "×" !important;
}

.filter input.filter-reset::after {
  content: "×";
}

.\!filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .\!filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
  scale: 0 !important;
  border-width: 0 !important;
  margin-inline: calc(0.25rem * 0) !important;
  width: calc(0.25rem * 0) !important;
  padding-inline: calc(0.25rem * 0) !important;
  opacity: 0% !important;
}

.filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
  scale: 0;
  border-width: 0;
  margin-inline: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  padding-inline: calc(0.25rem * 0);
  opacity: 0%;
}

.\!filter:not(:has(input:checked:not(.filter-reset))) .filter-reset, .\!filter:not(:has(input:checked:not(.filter-reset))) input[type="reset"] {
  scale: 0 !important;
  border-width: 0 !important;
  margin-inline: calc(0.25rem * 0) !important;
  width: calc(0.25rem * 0) !important;
  padding-inline: calc(0.25rem * 0) !important;
  opacity: 0% !important;
}

.\!filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
  scale: 0 !important;
  border-width: 0 !important;
  margin-inline: calc(0.25rem * 0) !important;
  width: calc(0.25rem * 0) !important;
  padding-inline: calc(0.25rem * 0) !important;
  opacity: 0% !important;
}

.filter:has(input:checked:not(.filter-reset)) input:not(:checked, .filter-reset, input[type="reset"]) {
  scale: 0;
  border-width: 0;
  margin-inline: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  padding-inline: calc(0.25rem * 0);
  opacity: 0%;
}

.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-selector);
  vertical-align: middle;
  color: var(--badge-fg);
  border: var(--border) solid var(--badge-color, var(--color-base-200));
  font-size: 0.875rem;
  width: -moz-fit-content;
  width: fit-content;
  padding-inline: calc(0.25rem * 3 - var(--border));
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  background-color: var(--badge-bg);
  --badge-bg: var(--badge-color, var(--color-base-100));
  --badge-fg: var(--color-base-content);
  --size: calc(var(--size-selector, 0.25rem) * 6);
  height: var(--size);
}

.badge.badge-outline {
  --badge-fg: var(--badge-color);
  --badge-bg: #0000;
  background-image: none;
}

.badge.badge-dash {
  --badge-fg: var(--badge-color);
  --badge-bg: #0000;
  border-style: dashed;
  background-image: none;
}

.badge.badge-soft {
  color: var(--badge-color, var(--color-base-content));
  background-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 8%, var(--color-base-100) );
  border-color: color-mix( in oklab, var(--badge-color, var(--color-base-content)) 10%, var(--color-base-100) );
  background-image: none;
}

.badge-primary {
  --badge-color: var(--color-primary);
  --badge-fg: var(--color-primary-content);
}

.badge-secondary {
  --badge-color: var(--color-secondary);
  --badge-fg: var(--color-secondary-content);
}

.badge-accent {
  --badge-color: var(--color-accent);
  --badge-fg: var(--color-accent-content);
}

.badge-neutral {
  --badge-color: var(--color-neutral);
  --badge-fg: var(--color-neutral-content);
}

.badge-info {
  --badge-color: var(--color-info);
  --badge-fg: var(--color-info-content);
}

.badge-success {
  --badge-color: var(--color-success);
  --badge-fg: var(--color-success-content);
}

.badge-warning {
  --badge-color: var(--color-warning);
  --badge-fg: var(--color-warning-content);
}

.badge-error {
  --badge-color: var(--color-error);
  --badge-fg: var(--color-error-content);
}

.badge-ghost {
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: var(--color-base-content);
  background-image: none;
}

.badge-xs {
  --size: calc(var(--size-selector, 0.25rem) * 4);
  font-size: 0.625rem;
  padding-inline: calc(0.25rem * 2 - var(--border));
}

.badge-sm {
  --size: calc(var(--size-selector, 0.25rem) * 5);
  font-size: 0.75rem;
  padding-inline: calc(0.25rem * 2.5 - var(--border));
}

.badge-md {
  --size: calc(var(--size-selector, 0.25rem) * 6);
  font-size: 0.875rem;
  padding-inline: calc(0.25rem * 3 - var(--border));
}

.badge-lg {
  --size: calc(var(--size-selector, 0.25rem) * 7);
  font-size: 1rem;
  padding-inline: calc(0.25rem * 3.5 - var(--border));
}

.badge-xl {
  --size: calc(var(--size-selector, 0.25rem) * 8);
  font-size: 1.125rem;
  padding-inline: calc(0.25rem * 4 - var(--border));
}

.\!input {
  cursor: text !important;
  border: var(--border) solid #0000 !important;
  position: relative !important;
  display: inline-flex !important;
  flex-shrink: 1 !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  align-items: center !important;
  gap: calc(0.25rem * 2) !important;
  background-color: var(--color-base-100) !important;
  padding-inline: calc(0.25rem * 3) !important;
  vertical-align: middle !important;
  white-space: nowrap !important;
  width: clamp(3rem, 20rem, 100%) !important;
  height: var(--size) !important;
  font-size: 0.875rem !important;
  border-start-start-radius: var(--join-ss, var(--radius-field)) !important;
  border-start-end-radius: var(--join-se, var(--radius-field)) !important;
  border-end-start-radius: var(--join-es, var(--radius-field)) !important;
  border-end-end-radius: var(--join-ee, var(--radius-field)) !important;
  border-color: var(--input-color) !important;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset !important;
  --size: calc(var(--size-field, 0.25rem) * 10) !important;
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000) !important;
}

.input {
  cursor: text;
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 2);
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 3);
  vertical-align: middle;
  white-space: nowrap;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-field, 0.25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}

.\!input:where(input) {
  display: inline-flex !important;
}

.input:where(input) {
  display: inline-flex;
}

.\!input :where(input) {
  display: inline-flex !important;
  height: 100% !important;
  width: 100% !important;
  -webkit-appearance: none !important;
     -moz-appearance: none !important;
          appearance: none !important;
  background-color: transparent !important;
  border: none !important;
}

.input :where(input) {
  display: inline-flex;
  height: 100%;
  width: 100%;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}

.\!input :where(input):focus, .\!input :where(input):focus-within {
  --tw-outline-style: none !important;
  outline-style: none !important;
}

.input :where(input):focus, .input :where(input):focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

.\!input :where(input):focus, .\!input :where(input):focus-within {
  --tw-outline-style: none !important;
  outline-style: none !important;
}

@media (forced-colors: active) {
  .\!input :where(input):focus, .\!input :where(input):focus-within {
    outline: 2px solid transparent !important;
    outline-offset: 2px !important;
  }

  .input :where(input):focus, .input :where(input):focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }

  .\!input :where(input):focus, .\!input :where(input):focus-within {
    outline: 2px solid transparent !important;
    outline-offset: 2px !important;
  }
}

.\!input :where(input[type="date"]) {
  display: inline-block !important;
}

.input :where(input[type="date"]) {
  display: inline-block;
}

.\!input:focus, .\!input:focus-within {
  --input-color: var(--color-base-content) !important;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) !important;
  outline: 2px solid var(--input-color) !important;
  outline-offset: 2px !important;
  isolation: isolate !important;
}

.input:focus, .input:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}

.\!input:focus, .\!input:focus-within {
  --input-color: var(--color-base-content) !important;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) !important;
  outline: 2px solid var(--input-color) !important;
  outline-offset: 2px !important;
  isolation: isolate !important;
}

.\!input:has(> input[disabled]), .\!input:is(:disabled, [disabled]) {
  cursor: not-allowed !important;
  border-color: var(--color-base-200) !important;
  background-color: var(--color-base-200) !important;
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.\!input:has(> input[disabled]), .\!input:is(:disabled, [disabled]) {
  cursor: not-allowed !important;
  border-color: var(--color-base-200) !important;
  background-color: var(--color-base-200) !important;
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent) !important;
}

.\!input:has(> input[disabled])::-moz-placeholder, .\!input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
}

.\!input:has(> input[disabled])::placeholder, .\!input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
}

.input:has(> input[disabled])::-moz-placeholder, .input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.input:has(> input[disabled])::placeholder, .input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.\!input:has(> input[disabled])::-moz-placeholder, .\!input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
}

.\!input:has(> input[disabled])::placeholder, .\!input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
}

.\!input:has(> input[disabled]), .\!input:is(:disabled, [disabled]) {
  box-shadow: none !important;
}

.input:has(> input[disabled]), .input:is(:disabled, [disabled]) {
  box-shadow: none;
}

.\!input:has(> input[disabled]), .\!input:is(:disabled, [disabled]) {
  box-shadow: none !important;
}

.\!input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed !important;
}

.input:has(> input[disabled]) > input[disabled] {
  cursor: not-allowed;
}

.\!input::-webkit-date-and-time-value {
  text-align: inherit !important;
}

.input::-webkit-date-and-time-value {
  text-align: inherit;
}

.\!input[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3) !important;
  margin-inline-end: calc(0.25rem * -3) !important;
}

.input[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}

.\!input::-webkit-calendar-picker-indicator {
  position: absolute !important;
  inset-inline-end: 0.75em !important;
}

.input::-webkit-calendar-picker-indicator {
  position: absolute;
  inset-inline-end: 0.75em;
}

.input-ghost {
  background-color: transparent;
  box-shadow: none;
  border-color: #0000;
}

.input-ghost:focus, .input-ghost:focus-within {
  background-color: var(--color-base-100);
  color: var(--color-base-content);
  border-color: #0000;
  box-shadow: none;
}

.input-neutral, .input-neutral:focus, .input-neutral:focus-within {
  --input-color: var(--color-neutral);
}

.input-primary, .input-primary:focus, .input-primary:focus-within {
  --input-color: var(--color-primary);
}

.input-secondary, .input-secondary:focus, .input-secondary:focus-within {
  --input-color: var(--color-secondary);
}

.input-accent, .input-accent:focus, .input-accent:focus-within {
  --input-color: var(--color-accent);
}

.input-info, .input-info:focus, .input-info:focus-within {
  --input-color: var(--color-info);
}

.input-success, .input-success:focus, .input-success:focus-within {
  --input-color: var(--color-success);
}

.input-warning, .input-warning:focus, .input-warning:focus-within {
  --input-color: var(--color-warning);
}

.input-error, .input-error:focus, .input-error:focus-within {
  --input-color: var(--color-error);
}

.input-xs {
  --size: calc(var(--size-field, 0.25rem) * 6);
  font-size: 0.6875rem;
}

.input-xs[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -1);
  margin-inline-end: calc(0.25rem * -3);
}

.input-sm {
  --size: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.75rem;
}

.input-sm[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -2);
  margin-inline-end: calc(0.25rem * -3);
}

.input-md {
  --size: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
}

.input-md[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}

.input-lg {
  --size: calc(var(--size-field, 0.25rem) * 12);
  font-size: 1.125rem;
}

.input-lg[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * -3);
}

.input-xl {
  --size: calc(var(--size-field, 0.25rem) * 14);
  font-size: 1.375rem;
}

.input-xl[type="number"]::-webkit-inner-spin-button {
  margin-block: calc(0.25rem * -4);
  margin-inline-end: calc(0.25rem * -3);
}

.drawer {
  position: relative;
  display: grid;
  width: 100%;
  grid-auto-columns: max-content auto;
}

.drawer-content {
  grid-column-start: 2;
  grid-row-start: 1;
  min-width: calc(0.25rem * 0);
}

.drawer-side {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 0);
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  width: 100%;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-rows: repeat(1, minmax(0, 1fr));
  align-items: flex-start;
  justify-items: start;
  overflow-x: hidden;
  overflow-y: hidden;
  overscroll-behavior: contain;
  opacity: 0%;
  transition: opacity 0.2s ease-out 0.1s allow-discrete, visibility 0.3s ease-out 0.1s allow-discrete;
  height: 100vh;
  height: 100dvh;
}

.drawer-side > .drawer-overlay {
  position: sticky;
  top: calc(0.25rem * 0);
  cursor: pointer;
  place-self: stretch;
  background-color: oklch(0% 0 0 / 40%);
}

.drawer-side > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.drawer-side > *:not(.drawer-overlay) {
  will-change: transform;
  transition: translate 0.3s ease-out;
  translate: -100%;
}

[dir="rtl"] .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}

.drawer-toggle {
  position: fixed;
  height: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}

.drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  overflow-y: auto;
  opacity: 100%;
}

.drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-toggle:focus-visible ~ .drawer-content label.drawer-button {
  outline: 2px solid;
  outline-offset: 2px;
}

.drawer-end {
  grid-auto-columns: auto max-content;
}

.drawer-end > .drawer-toggle ~ .drawer-content {
  grid-column-start: 1;
}

.drawer-end > .drawer-toggle ~ .drawer-side {
  grid-column-start: 2;
  justify-items: end;
}

.drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 100%;
}

[dir="rtl"] .drawer-end > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: -100%;
}

.drawer-end > .drawer-toggle:checked ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-open > .drawer-side {
  overflow-y: auto;
}

.drawer-open > .drawer-toggle {
  display: none;
}

.drawer-open > .drawer-toggle ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
  position: sticky;
  display: block;
  width: auto;
  overscroll-behavior: auto;
  opacity: 100%;
}

.drawer-open > .drawer-toggle ~ .drawer-side > .drawer-overlay {
  cursor: default;
  background-color: transparent;
}

.drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

[dir="rtl"] .drawer-open > .drawer-toggle ~ .drawer-side > *:not(.drawer-overlay) {
  translate: 0%;
}

.drawer-open > .drawer-toggle:checked ~ .drawer-side {
  pointer-events: auto;
  visibility: visible;
}

.avatar-group {
  display: flex;
  overflow: hidden;
}

.avatar-group :where(.avatar) {
  overflow: hidden;
  border-radius: calc(infinity * 1px);
  border: 4px solid var(--color-base-100);
}

.avatar {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}

.avatar > div {
  display: block;
  aspect-ratio: 1 / 1;
  overflow: hidden;
}

.avatar img {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.avatar-placeholder > div {
  display: flex;
  align-items: center;
  justify-content: center;
}

.avatar-online:before {
  content: "";
  position: absolute;
  z-index: 1;
  display: block;
  border-radius: calc(infinity * 1px);
  background-color: var(--color-success);
  outline: 2px solid var(--color-base-100);
  width: 15%;
  height: 15%;
  top: 7%;
  right: 7%;
}

.avatar-offline:before {
  content: "";
  position: absolute;
  z-index: 1;
  display: block;
  border-radius: calc(infinity * 1px);
  background-color: var(--color-base-300);
  outline: 2px solid var(--color-base-100);
  width: 15%;
  height: 15%;
  top: 7%;
  right: 7%;
}

.\!stats {
  position: relative !important;
  display: inline-grid !important;
  grid-auto-flow: column !important;
  overflow-x: auto !important;
  border-radius: var(--radius-box) !important;
}

.stats {
  position: relative;
  display: inline-grid;
  grid-auto-flow: column;
  overflow-x: auto;
  border-radius: var(--radius-box);
}

.\!stat {
  display: inline-grid !important;
  width: 100% !important;
  -moz-column-gap: calc(0.25rem * 4) !important;
       column-gap: calc(0.25rem * 4) !important;
  padding-inline: calc(0.25rem * 6) !important;
  padding-block: calc(0.25rem * 4) !important;
  grid-template-columns: repeat(1, 1fr) !important;
}

.stat {
  display: inline-grid;
  width: 100%;
  -moz-column-gap: calc(0.25rem * 4);
       column-gap: calc(0.25rem * 4);
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 4);
  grid-template-columns: repeat(1, 1fr);
}

.\!stat:not(:last-child) {
  border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000) !important;
  border-block-end: none !important;
}

.stat:not(:last-child) {
  border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
  border-block-end: none;
}

.stat-figure {
  grid-column-start: 2;
  grid-row: span 3 / span 3;
  grid-row-start: 1;
  place-self: center;
  justify-self: flex-end;
}

.stat-title {
  grid-column-start: 1;
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.75rem;
}

.stat-value {
  grid-column-start: 1;
  white-space: nowrap;
  font-size: 2rem;
  font-weight: 800;
}

.stat-desc {
  grid-column-start: 1;
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.75rem;
}

.stat-actions {
  grid-column-start: 1;
  white-space: nowrap;
}

.stats-horizontal {
  grid-auto-flow: column;
  overflow-x: auto;
}

.stats-horizontal .stat:not(:last-child) {
  border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
  border-block-end: none;
}

.stats-horizontal .\!stat:not(:last-child) {
  border-inline-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000) !important;
  border-block-end: none !important;
}

.stats-vertical {
  grid-auto-flow: row;
  overflow-y: auto;
}

.stats-vertical .stat:not(:last-child) {
  border-inline-end: none;
  border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000);
}

.stats-vertical .\!stat:not(:last-child) {
  border-inline-end: none !important;
  border-block-end: var(--border) dashed color-mix(in oklab, currentColor 10%, #0000) !important;
}

.radio {
  position: relative;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: calc(infinity * 1px);
  padding: calc(0.25rem * 1);
  vertical-align: middle;
  border: var(--border) solid var(--input-color, color-mix(in srgb, currentColor 20%, #0000));
  box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  color: var(--input-color, currentColor);
}

.radio:before {
  display: block;
  width: 100%;
  height: 100%;
  border-radius: calc(infinity * 1px);
  --tw-content: "";
  content: var(--tw-content);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.radio:focus-visible {
  outline: 2px solid currentColor;
}

.radio:checked, .radio[aria-checked="true"] {
  animation: radio 0.2s ease-out;
  border-color: currentColor;
  background-color: var(--color-base-100);
}

.radio:checked:before, .radio[aria-checked="true"]:before {
  background-color: currentColor;
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}

@media (forced-colors: active) {
  .radio:checked:before, .radio[aria-checked="true"]:before {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: calc(1px * -1);
  }
}

@media print {
  .radio:checked:before, .radio[aria-checked="true"]:before {
    outline: 0.25rem solid;
    outline-offset: -1rem;
  }
}

.radio-primary {
  --input-color: var(--color-primary);
}

.radio-secondary {
  --input-color: var(--color-secondary);
}

.radio-accent {
  --input-color: var(--color-accent);
}

.radio-neutral {
  --input-color: var(--color-neutral);
}

.radio-info {
  --input-color: var(--color-info);
}

.radio-success {
  --input-color: var(--color-success);
}

.radio-warning {
  --input-color: var(--color-warning);
}

.radio-error {
  --input-color: var(--color-error);
}

.radio:disabled {
  cursor: not-allowed;
  opacity: 20%;
}

.radio-xs {
  padding: 0.125rem;
}

.radio-xs:is([type="radio"]) {
  --size: calc(var(--size-selector, 0.25rem) * 4);
}

.radio-sm {
  padding: 0.1875rem;
}

.radio-sm:is([type="radio"]) {
  --size: calc(var(--size-selector, 0.25rem) * 5);
}

.radio-md {
  padding: 0.25rem;
}

.radio-md:is([type="radio"]) {
  --size: calc(var(--size-selector, 0.25rem) * 6);
}

.radio-lg {
  padding: 0.3125rem;
}

.radio-lg:is([type="radio"]) {
  --size: calc(var(--size-selector, 0.25rem) * 7);
}

.radio-xl {
  padding: 0.375rem;
}

.radio-xl:is([type="radio"]) {
  --size: calc(var(--size-selector, 0.25rem) * 8);
}

@keyframes radio {
  0% {
    padding: 5px;
  }

  50% {
    padding: 3px;
  }
}

.breadcrumbs {
  max-width: 100%;
  overflow-x: auto;
  padding-block: calc(0.25rem * 2);
}

.breadcrumbs > menu, .breadcrumbs > ul, .breadcrumbs > ol {
  display: flex;
  min-height: -moz-min-content;
  min-height: min-content;
  align-items: center;
  white-space: nowrap;
}

.breadcrumbs > menu > li, .breadcrumbs > ul > li, .breadcrumbs > ol > li {
  display: flex;
  align-items: center;
}

.breadcrumbs > menu > li > *, .breadcrumbs > ul > li > *, .breadcrumbs > ol > li > * {
  display: flex;
  cursor: pointer;
  align-items: center;
  gap: calc(0.25rem * 2);
}

@media (hover: hover) {
  .breadcrumbs > menu > li > *:hover, .breadcrumbs > ul > li > *:hover, .breadcrumbs > ol > li > *:hover {
    text-decoration-line: underline;
  }
}

.breadcrumbs > menu > li > *:focus, .breadcrumbs > ul > li > *:focus, .breadcrumbs > ol > li > *:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .breadcrumbs > menu > li > *:focus, .breadcrumbs > ul > li > *:focus, .breadcrumbs > ol > li > *:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.breadcrumbs > menu > li > *:focus-visible, .breadcrumbs > ul > li > *:focus-visible, .breadcrumbs > ol > li > *:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.breadcrumbs > menu > li + *:before, .breadcrumbs > ul > li + *:before, .breadcrumbs > ol > li + *:before {
  content: "";
  margin-right: calc(0.25rem * 3);
  margin-left: calc(0.25rem * 2);
  display: block;
  height: calc(0.25rem * 1.5);
  width: calc(0.25rem * 1.5);
  opacity: 40%;
  rotate: 45deg;
  border-top: 1px solid;
  border-right: 1px solid;
  background-color: #0000;
}

[dir="rtl"] .breadcrumbs > menu > li + *:before, [dir="rtl"] .breadcrumbs > ul > li + *:before, [dir="rtl"] .breadcrumbs > ol > li + *:before {
  rotate: -135deg;
}

.label {
  display: inline-flex;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  white-space: nowrap;
  color: color-mix(in oklab, currentColor 60%, transparent);
}

.label:has(input) {
  cursor: pointer;
}

.label:is(.input > *, .select > *) {
  display: flex;
  height: calc(100% - 0.5rem);
  align-items: center;
  padding-inline: calc(0.25rem * 3);
  white-space: nowrap;
  font-size: inherit;
}

.label:is(.\!input > *, .select > *) {
  display: flex !important;
  height: calc(100% - 0.5rem) !important;
  align-items: center !important;
  padding-inline: calc(0.25rem * 3) !important;
  white-space: nowrap !important;
  font-size: inherit !important;
}

.label:is(.input > *, .select > *):first-child {
  margin-inline-start: calc(0.25rem * -3);
  margin-inline-end: calc(0.25rem * 3);
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.label:is(.\!input > *, .select > *):first-child {
  margin-inline-start: calc(0.25rem * -3) !important;
  margin-inline-end: calc(0.25rem * 3) !important;
  border-inline-end: var(--border) solid color-mix(in oklab, currentColor 10%, #0000) !important;
}

.label:is(.input > *, .select > *):last-child {
  margin-inline-start: calc(0.25rem * 3);
  margin-inline-end: calc(0.25rem * -3);
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000);
}

.label:is(.\!input > *, .select > *):last-child {
  margin-inline-start: calc(0.25rem * 3) !important;
  margin-inline-end: calc(0.25rem * -3) !important;
  border-inline-start: var(--border) solid color-mix(in oklab, currentColor 10%, #0000) !important;
}

.floating-label {
  position: relative;
  display: block;
}

.floating-label input {
  display: block;
}

.floating-label input::-moz-placeholder {
  -moz-transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
}

.floating-label input::placeholder {
  transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
}

.floating-label textarea::-moz-placeholder {
  -moz-transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
  transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
}

.floating-label textarea::placeholder {
  transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
}

.floating-label > span {
  position: absolute;
  inset-inline-start: calc(0.25rem * 3);
  z-index: 1;
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 1);
  opacity: 0%;
  font-size: 0.875rem;
  top: calc(var(--size-field, 0.25rem) * 10 / 2);
  line-height: 1;
  border-radius: 2px;
  pointer-events: none;
  translate: 0 -50%;
  transition: top 0.1s ease-out, translate 0.1s ease-out, scale 0.1s ease-out, opacity 0.1s ease-out;
}

.floating-label:focus-within ::-moz-placeholder, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) ::-moz-placeholder {
  opacity: 0%;
  top: 0;
  translate: -12.5% calc(-50% - 0.125em);
  scale: 0.75;
  pointer-events: auto;
}

.floating-label:not(:has(input:-moz-placeholder-shown, textarea:-moz-placeholder-shown)) ::placeholder {
  opacity: 0%;
  top: 0;
  translate: -12.5% calc(-50% - 0.125em);
  scale: 0.75;
  pointer-events: auto;
}

.floating-label:focus-within ::placeholder, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) ::placeholder {
  opacity: 0%;
  top: 0;
  translate: -12.5% calc(-50% - 0.125em);
  scale: 0.75;
  pointer-events: auto;
}

.floating-label:not(:has(input:-moz-placeholder-shown, textarea:-moz-placeholder-shown)) > span {
  opacity: 100%;
  top: 0;
  translate: -12.5% calc(-50% - 0.125em);
  scale: 0.75;
  pointer-events: auto;
}

.floating-label:focus-within > span, .floating-label:not(:has(input:placeholder-shown, textarea:placeholder-shown)) > span {
  opacity: 100%;
  top: 0;
  translate: -12.5% calc(-50% - 0.125em);
  scale: 0.75;
  pointer-events: auto;
}

.floating-label:has(:disabled, [disabled]) > span {
  opacity: 0%;
}

.floating-label:has(.input-xs, .select-xs, .textarea-xs) span {
  font-size: 0.6875rem;
  top: calc(var(--size-field, 0.25rem) * 6 / 2);
}

.floating-label:has(.input-sm, .select-sm, .textarea-sm) span {
  font-size: 0.75rem;
  top: calc(var(--size-field, 0.25rem) * 8 / 2);
}

.floating-label:has(.input-md, .select-md, .textarea-md) span {
  font-size: 0.875rem;
  top: calc(var(--size-field, 0.25rem) * 10 / 2);
}

.floating-label:has(.input-lg, .select-lg, .textarea-lg) span {
  font-size: 1.125rem;
  top: calc(var(--size-field, 0.25rem) * 12 / 2);
}

.floating-label:has(.input-xl, .select-xl, .textarea-xl) span {
  font-size: 1.375rem;
  top: calc(var(--size-field, 0.25rem) * 14 / 2);
}

.link {
  cursor: pointer;
  text-decoration-line: underline;
}

.link:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .link:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.link:focus-visible {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.link-hover {
  text-decoration-line: none;
}

@media (hover: hover) {
  .link-hover:hover {
    text-decoration-line: underline;
  }
}

.link-primary {
  color: var(--color-primary);
}

@media (hover: hover) {
  .link-primary:hover {
    color: color-mix(in oklab, var(--color-primary) 80%, #000);
  }
}

.link-secondary {
  color: var(--color-secondary);
}

@media (hover: hover) {
  .link-secondary:hover {
    color: color-mix(in oklab, var(--color-secondary) 80%, #000);
  }
}

.link-accent {
  color: var(--color-accent);
}

@media (hover: hover) {
  .link-accent:hover {
    color: color-mix(in oklab, var(--color-accent) 80%, #000);
  }
}

.link-neutral {
  color: var(--color-neutral);
}

@media (hover: hover) {
  .link-neutral:hover {
    color: color-mix(in oklab, var(--color-neutral) 80%, #000);
  }
}

.link-success {
  color: var(--color-success);
}

@media (hover: hover) {
  .link-success:hover {
    color: color-mix(in oklab, var(--color-success) 80%, #000);
  }
}

.link-info {
  color: var(--color-info);
}

@media (hover: hover) {
  .link-info:hover {
    color: color-mix(in oklab, var(--color-info) 80%, #000);
  }
}

.link-warning {
  color: var(--color-warning);
}

@media (hover: hover) {
  .link-warning:hover {
    color: color-mix(in oklab, var(--color-warning) 80%, #000);
  }
}

.link-error {
  color: var(--color-error);
}

@media (hover: hover) {
  .link-error:hover {
    color: color-mix(in oklab, var(--color-error) 80%, #000);
  }
}

.card {
  position: relative;
  display: flex;
  flex-direction: column;
  border-radius: var(--radius-box);
  outline-width: 2px;
  transition: outline 0.2s ease-in-out;
  outline: 0 solid #0000;
  outline-offset: 2px;
}

.card:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .card:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.card:focus-visible {
  outline-color: currentColor;
}

.card :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: unset;
}

.card :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: inherit;
}

.card:where(.card-border) {
  border: var(--border) solid var(--color-base-200);
}

.card:where(.card-dash) {
  border: var(--border) dashed var(--color-base-200);
}

.card.image-full {
  display: grid;
}

.card.image-full > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.card.image-full > .card-body {
  position: relative;
  color: var(--color-neutral-content);
}

.card.image-full :where(figure) {
  overflow: hidden;
  border-radius: inherit;
}

.card.image-full > figure img {
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
  filter: brightness(28%);
}

.card figure {
  display: flex;
  align-items: center;
  justify-content: center;
}

.card:has(> input:is(input[type="checkbox"], input[type="radio"])) {
  cursor: pointer;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.card:has(> :checked) {
  outline: 2px solid currentColor;
}

.card-title {
  display: flex;
  align-items: center;
  gap: calc(0.25rem * 2);
  font-size: var(--cardtitle-fs, 1.125rem);
  font-weight: 600;
}

.card-body {
  display: flex;
  flex: auto;
  flex-direction: column;
  gap: calc(0.25rem * 2);
  padding: var(--card-p, 1.5rem);
  font-size: var(--card-fs, 0.875rem);
}

.card-body :where(p) {
  flex-grow: 1;
}

.card-actions {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  gap: calc(0.25rem * 2);
}

.card-xs .card-body {
  --card-p: 0.5rem;
  --card-fs: 0.6875rem;
}

.card-xs .card-title {
  --cardtitle-fs: 0.875rem;
}

.card-sm .card-body {
  --card-p: 1rem;
  --card-fs: 0.75rem;
}

.card-sm .card-title {
  --cardtitle-fs: 1rem;
}

.card-md .card-body {
  --card-p: 1.5rem;
  --card-fs: 0.875rem;
}

.card-md .card-title {
  --cardtitle-fs: 1.125rem;
}

.card-lg .card-body {
  --card-p: 2rem;
  --card-fs: 1rem;
}

.card-lg .card-title {
  --cardtitle-fs: 1.25rem;
}

.card-xl .card-body {
  --card-p: 2.5rem;
  --card-fs: 1.125rem;
}

.card-xl .card-title {
  --cardtitle-fs: 1.375rem;
}

.card-side {
  align-items: stretch;
  flex-direction: row;
}

.card-side :where(figure:first-child) {
  overflow: hidden;
  border-start-start-radius: inherit;
  border-start-end-radius: unset;
  border-end-start-radius: inherit;
  border-end-end-radius: unset;
}

.card-side :where(figure:last-child) {
  overflow: hidden;
  border-start-start-radius: unset;
  border-start-end-radius: inherit;
  border-end-start-radius: unset;
  border-end-end-radius: inherit;
}

.card-side figure > * {
  max-width: unset;
}

.card-side :where(figure > *) {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.\!status {
  display: inline-block !important;
  aspect-ratio: 1 / 1 !important;
  width: calc(0.25rem * 2) !important;
  height: calc(0.25rem * 2) !important;
  border-radius: var(--radius-selector) !important;
  background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent) !important;
  background-position: center !important;
  background-repeat: no-repeat !important;
  vertical-align: middle !important;
  color: color-mix(in srgb, #000 30%, transparent) !important;
}

.status {
  display: inline-block;
  aspect-ratio: 1 / 1;
  width: calc(0.25rem * 2);
  height: calc(0.25rem * 2);
  border-radius: var(--radius-selector);
  background-color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
  background-position: center;
  background-repeat: no-repeat;
  vertical-align: middle;
  color: color-mix(in srgb, #000 30%, transparent);
}

@supports (color: color-mix(in lab, red, red)) {
  .\!status {
    color: color-mix(in oklab, var(--color-black) 30%, transparent) !important;
  }

  .status {
    color: color-mix(in oklab, var(--color-black) 30%, transparent);
  }
}

.\!status {
  background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 ) !important;
  box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000) !important;
}

.status {
  background-image: radial-gradient( circle at 35% 30%, oklch(1 0 0 / calc(var(--depth) * 0.5)), #0000 );
  box-shadow: 0 2px 3px -1px color-mix(in oklab, currentColor calc(var(--depth) * 100%), #0000);
}

.status-primary {
  background-color: var(--color-primary);
  color: var(--color-primary);
}

.status-secondary {
  background-color: var(--color-secondary);
  color: var(--color-secondary);
}

.status-accent {
  background-color: var(--color-accent);
  color: var(--color-accent);
}

.status-neutral {
  background-color: var(--color-neutral);
  color: var(--color-neutral);
}

.status-info {
  background-color: var(--color-info);
  color: var(--color-info);
}

.status-success {
  background-color: var(--color-success);
  color: var(--color-success);
}

.status-warning {
  background-color: var(--color-warning);
  color: var(--color-warning);
}

.status-error {
  background-color: var(--color-error);
  color: var(--color-error);
}

.status-xs {
  width: calc(0.25rem * 0.5);
  height: calc(0.25rem * 0.5);
}

.status-sm {
  width: calc(0.25rem * 1);
  height: calc(0.25rem * 1);
}

.status-md {
  width: calc(0.25rem * 2);
  height: calc(0.25rem * 2);
}

.status-lg {
  width: calc(0.25rem * 3);
  height: calc(0.25rem * 3);
}

.status-xl {
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
}

.steps {
  display: inline-grid;
  grid-auto-flow: column;
  overflow: hidden;
  overflow-x: auto;
  counter-reset: step;
  grid-auto-columns: 1fr;
}

.steps .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-columns: auto;
  grid-template-rows: repeat(2, minmax(0, 1fr));
  grid-template-rows: 40px 1fr;
  place-items: center;
  text-align: center;
  min-width: 4rem;
  --step-bg: var(--color-base-300);
  --step-fg: var(--color-base-content);
}

.steps .step:before {
  top: calc(0.25rem * 0);
  grid-column-start: 1;
  grid-row-start: 1;
  height: calc(0.25rem * 2);
  width: 100%;
  border: 1px solid;
  color: var(--step-bg);
  background-color: var(--step-bg);
  --tw-content: "";
  content: var(--tw-content);
  margin-inline-start: -100%;
}

.steps .step > .step-icon, .steps .step:not(:has(.step-icon)):after {
  content: counter(step);
  counter-increment: step;
  z-index: 1;
  color: var(--step-fg);
  background-color: var(--step-bg);
  border: 1px solid var(--step-bg);
  position: relative;
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  height: calc(0.25rem * 8);
  width: calc(0.25rem * 8);
  place-items: center;
  place-self: center;
  border-radius: calc(infinity * 1px);
}

.steps .step:first-child:before {
  content: none;
}

.steps .step[data-content]:after {
  content: attr(data-content);
}

.steps .step-neutral + .step-neutral:before, .steps .step-neutral:after, .steps .step-neutral > .step-icon {
  --step-bg: var(--color-neutral);
  --step-fg: var(--color-neutral-content);
}

.steps .step-primary + .step-primary:before, .steps .step-primary:after, .steps .step-primary > .step-icon {
  --step-bg: var(--color-primary);
  --step-fg: var(--color-primary-content);
}

.steps .step-secondary + .step-secondary:before, .steps .step-secondary:after, .steps .step-secondary > .step-icon {
  --step-bg: var(--color-secondary);
  --step-fg: var(--color-secondary-content);
}

.steps .step-accent + .step-accent:before, .steps .step-accent:after, .steps .step-accent > .step-icon {
  --step-bg: var(--color-accent);
  --step-fg: var(--color-accent-content);
}

.steps .step-info + .step-info:before, .steps .step-info:after, .steps .step-info > .step-icon {
  --step-bg: var(--color-info);
  --step-fg: var(--color-info-content);
}

.steps .step-success + .step-success:before, .steps .step-success:after, .steps .step-success > .step-icon {
  --step-bg: var(--color-success);
  --step-fg: var(--color-success-content);
}

.steps .step-warning + .step-warning:before, .steps .step-warning:after, .steps .step-warning > .step-icon {
  --step-bg: var(--color-warning);
  --step-fg: var(--color-warning-content);
}

.steps .step-error + .step-error:before, .steps .step-error:after, .steps .step-error > .step-icon {
  --step-bg: var(--color-error);
  --step-fg: var(--color-error-content);
}

.steps-horizontal {
  grid-auto-columns: 1fr;
  display: inline-grid;
  grid-auto-flow: column;
  overflow: hidden;
  overflow-x: auto;
}

.steps-horizontal .step {
  display: grid;
  grid-template-columns: repeat(1, minmax(0, 1fr));
  grid-template-columns: auto;
  grid-template-rows: repeat(2, minmax(0, 1fr));
  grid-template-rows: 40px 1fr;
  place-items: center;
  text-align: center;
  min-width: 4rem;
}

.steps-horizontal .step:before {
  height: calc(0.25rem * 2);
  width: 100%;
  translate: 0;
  content: "";
  margin-inline-start: -100%;
}

[dir="rtl"] .steps-horizontal .step:before {
  translate: 0;
}

.steps-vertical {
  grid-auto-rows: 1fr;
  grid-auto-flow: row;
}

.steps-vertical .step {
  display: grid;
  grid-template-columns: repeat(2, minmax(0, 1fr));
  grid-template-columns: 40px 1fr;
  grid-template-rows: repeat(1, minmax(0, 1fr));
  grid-template-rows: auto;
  gap: 0.5rem;
  min-height: 4rem;
  justify-items: start;
}

.steps-vertical .step:before {
  height: 100%;
  width: calc(0.25rem * 2);
  translate: -50% -50%;
  margin-inline-start: 50%;
}

[dir="rtl"] .steps-vertical .step:before {
  translate: 50% -50%;
}

.tabs {
  display: flex;
  flex-wrap: wrap;
  --tabs-height: auto;
  --tabs-direction: row;
  height: var(--tabs-height);
  flex-direction: var(--tabs-direction);
}

.tab {
  position: relative;
  display: inline-flex;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  text-align: center;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

@media (hover: hover) {
  .tab:hover {
    color: var(--color-base-content);
  }
}

.tab {
  --tab-p: 1rem;
  --tab-bg: var(--color-base-100);
  --tab-border-color: var(--color-base-300);
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-order: 0;
  --tab-radius-min: calc(0.75rem - var(--border));
  border-color: #0000;
  order: var(--tab-order);
  height: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  padding-inline-start: var(--tab-p);
  padding-inline-end: var(--tab-p);
}

.tab:is(input[type="radio"]) {
  min-width: -moz-fit-content;
  min-width: fit-content;
}

.tab:is(input[type="radio"]):after {
  content: attr(aria-label);
}

.tab:is(label) {
  position: relative;
}

.tab:is(label) input {
  position: absolute;
  inset: calc(0.25rem * 0);
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}

.tab:checked + .tab-content, .tab:is(label:has(:checked)) + .tab-content, .tab:is(.tab-active, [aria-selected="true"]) + .tab-content {
  display: block;
  height: 100%;
}

.tab:not(:checked, label:has(:checked), :hover, .tab-active, [aria-selected="true"]) {
  color: color-mix(in oklab, var(--color-base-content) 50%, transparent);
}

.tab:not(input):empty {
  flex-grow: 1;
  cursor: default;
}

.tab:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .tab:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.tab:focus-visible, .tab:is(label:has(:checked:focus-visible)) {
  outline: 2px solid currentColor;
  outline-offset: -5px;
}

.tab[disabled] {
  pointer-events: none;
  opacity: 40%;
}

.tab-disabled {
  pointer-events: none;
  opacity: 40%;
}

.tabs-border .tab {
  --tab-border-color: #0000 #0000 var(--tab-border-color) #0000;
  position: relative;
  border-radius: var(--radius-field);
}

.tabs-border .tab:before {
  --tw-content: "";
  content: var(--tw-content);
  background-color: var(--tab-border-color);
  transition: background-color 0.2s ease;
  width: 80%;
  height: 3px;
  border-radius: var(--radius-field);
  bottom: 0;
  left: 10%;
  position: absolute;
}

.tabs-border .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-border .tab:is(input:checked):before, .tabs-border .tab:is(label:has(:checked)):before {
  --tab-border-color: currentColor;
  border-top: 3px solid;
}

.tabs-lift {
  --tabs-height: auto;
  --tabs-direction: row;
}

.tabs-lift > .tab {
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
  border-width: var(--tab-border);
  border-start-start-radius: var(--tab-radius-ss);
  border-start-end-radius: var(--tab-radius-se);
  border-end-start-radius: var(--tab-radius-es);
  border-end-end-radius: var(--tab-radius-ee);
  padding: var(--tab-paddings);
  border-color: var(--tab-border-colors);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-lift > .tab:is(input:checked, label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
  --tab-inset: auto auto 0 auto;
  --tab-grad: calc(69% - var(--border));
  --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  background-color: var(--tab-bg);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):before {
  z-index: 1;
  content: "";
  display: block;
  position: absolute;
  width: var(--tab-corner-width);
  height: var(--tab-corner-height);
  background-position: var(--tab-corner-position);
  background-image: var(--radius-start), var(--radius-end);
  background-size: min(var(--radius-field), var(--tab-radius-min)) min(var(--radius-field), var(--tab-radius-min));
  background-repeat: no-repeat;
  inset: var(--tab-inset);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  --radius-start: none;
}

[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):first-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):first-child:before {
  transform: rotateY(180deg);
}

.tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  --radius-end: none;
}

[dir="rtl"] .tabs-lift > .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]):last-child:before, [dir="rtl"] .tabs-lift > .tab:is(input:checked, label:has(:checked)):last-child:before {
  transform: rotateY(180deg);
}

.tabs-lift:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}

.tabs-lift .tab-content {
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-lift :checked + .tab-content:nth-child(1), .tabs-lift :checked + .tab-content:nth-child(n + 3), .tabs-lift label:has(:checked) + .tab-content:nth-child(1), .tabs-lift label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-lift :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}

.tabs-top {
  --tabs-height: auto;
  --tabs-direction: row;
}

.tabs-top .tab {
  --tab-order: 0;
  --tab-border: 0 0 var(--border) 0;
  --tab-radius-ss: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-se: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-es: 0;
  --tab-radius-ee: 0;
  --tab-paddings: var(--border) var(--tab-p) 0 var(--tab-p);
  --tab-border-colors: #0000 #0000 var(--tab-border-color) #0000;
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}

.tabs-top .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-top .tab:is(input:checked), .tabs-top .tab:is(label:has(:checked)) {
  --tab-border: var(--border) var(--border) 0 var(--border);
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
        var(--tab-border-color);
  --tab-paddings: 0 calc(var(--tab-p) - var(--border)) var(--border)
        calc(var(--tab-p) - var(--border));
  --tab-inset: auto auto 0 auto;
  --radius-start: radial-gradient(
        circle at top left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at top right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
}

.tabs-top:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: var(--tab-border-color) var(--tab-border-color) #0000
          var(--tab-border-color);
}

.tabs-top .tab-content {
  --tabcontent-order: 1;
  --tabcontent-margin: calc(-1 * var(--border)) 0 0 0;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: var(--radius-box);
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-top :checked + .tab-content:nth-child(1), .tabs-top :checked + .tab-content:nth-child(n + 3), .tabs-top label:has(:checked) + .tab-content:nth-child(1), .tabs-top label:has(:checked) + .tab-content:nth-child(n + 3), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(1), .tabs-top :is(.tab-active, [aria-selected="true"]) + .tab-content:nth-child(n + 3) {
  --tabcontent-radius-ss: var(--radius-box);
}

.tabs-bottom {
  --tabs-height: auto;
  --tabs-direction: row;
}

.tabs-bottom .tab {
  --tab-order: 1;
  --tab-border: var(--border) 0 0 0;
  --tab-radius-ss: 0;
  --tab-radius-se: 0;
  --tab-radius-es: min(var(--radius-field), var(--tab-radius-min));
  --tab-radius-ee: min(var(--radius-field), var(--tab-radius-min));
  --tab-border-colors: var(--tab-border-color) #0000 #0000 #0000;
  --tab-paddings: 0 var(--tab-p) var(--border) var(--tab-p);
  --tab-corner-width: calc(100% + min(var(--radius-field), var(--tab-radius-min)) * 2);
  --tab-corner-height: min(var(--radius-field), var(--tab-radius-min));
  --tab-corner-position: top left, top right;
}

.tabs-bottom .tab:is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-bottom .tab:is(input:checked), .tabs-bottom .tab:is(label:has(:checked)) {
  --tab-border: 0 var(--border) var(--border) var(--border);
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
        var(--tab-border-color);
  --tab-paddings: var(--border) calc(var(--tab-p) - var(--border)) 0
        calc(var(--tab-p) - var(--border));
  --tab-inset: 0 auto auto auto;
  --radius-start: radial-gradient(
        circle at bottom left,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
  --radius-end: radial-gradient(
        circle at bottom right,
        #0000 var(--tab-grad),
        var(--tab-border-color) calc(var(--tab-grad) + 0.25px),
        var(--tab-border-color) calc(var(--tab-grad) + var(--border)),
        var(--tab-bg) calc(var(--tab-grad) + var(--border) + 0.25px)
      );
}

.tabs-bottom:has(.tab-content) > .tab:first-child:not(.tab-active, [aria-selected="true"]) {
  --tab-border-colors: #0000 var(--tab-border-color) var(--tab-border-color)
          var(--tab-border-color);
}

.tabs-bottom .tab-content {
  --tabcontent-order: 0;
  --tabcontent-margin: 0 0 calc(-1 * var(--border)) 0;
  --tabcontent-radius-ss: var(--radius-box);
  --tabcontent-radius-se: var(--radius-box);
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: var(--radius-box);
}

.tabs-bottom :checked + .tab-content:not(:nth-child(2)), .tabs-bottom :is(label:has(:checked)) + .tab-content:not(:nth-child(2)), .tabs-bottom :is(.tab-active, [aria-selected="true"]) + .tab-content:not(:nth-child(2)) {
  --tabcontent-radius-es: var(--radius-box);
}

.tabs-box {
  background-color: var(--color-base-200);
  padding: calc(0.25rem * 1);
  border-radius: calc( var(--radius-field) + min(0.25rem, calc(var(--radius-field) + var(--radius-field) + var(--radius-field))) );
  box-shadow: 0 -0.5px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0.5px oklch(0% 0 0 / calc(var(--depth) * 0.05)) inset;
}

.tabs-box .tab {
  border-radius: var(--radius-field);
  border-style: none;
}

.tabs-box .tab:focus-visible, .tabs-box .tab:is(label:has(:checked:focus-visible)) {
  outline-offset: 2px;
}

.tabs-box :is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-box :is(input:checked), .tabs-box :is(label:has(:checked)) {
  background-color: var(--tab-bg, var(--color-base-100));
  box-shadow: 0 1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px 1px -1px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 50%), #0000), 0 1px 6px -4px color-mix(in oklab, var(--color-neutral) calc(var(--depth) * 100%), #0000);
}

@media (forced-colors: active) {
  .tabs-box :is(.tab-active, [aria-selected="true"]):not(.tab-disabled, [disabled]), .tabs-box :is(input:checked), .tabs-box :is(label:has(:checked)) {
    border: 1px solid;
  }
}

.tab-content {
  order: 1;
  order: var(--tabcontent-order);
  display: none;
  border-color: transparent;
  --tabcontent-radius-ss: 0;
  --tabcontent-radius-se: 0;
  --tabcontent-radius-es: 0;
  --tabcontent-radius-ee: 0;
  --tabcontent-order: 1;
  width: 100%;
  margin: var(--tabcontent-margin);
  border-width: var(--border);
  border-start-start-radius: var(--tabcontent-radius-ss);
  border-start-end-radius: var(--tabcontent-radius-se);
  border-end-start-radius: var(--tabcontent-radius-es);
  border-end-end-radius: var(--tabcontent-radius-ee);
}

.tabs-xs :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 6);
  font-size: 0.75rem;
  --tab-p: 0.375rem;
  --tab-radius-min: calc(0.5rem - var(--border));
}

.tabs-sm :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.875rem;
  --tab-p: 0.5rem;
  --tab-radius-min: calc(0.5rem - var(--border));
}

.tabs-md :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  --tab-p: 0.75rem;
  --tab-radius-min: calc(0.75rem - var(--border));
}

.tabs-lg :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 12);
  font-size: 1.125rem;
  --tab-p: 1rem;
  --tab-radius-min: calc(1.5rem - var(--border));
}

.tabs-xl :where(.tab) {
  height: calc(var(--size-field, 0.25rem) * 14);
  font-size: 1.125rem;
  --tab-p: 1.25rem;
  --tab-radius-min: calc(2rem - var(--border));
}

.dropdown {
  position: relative;
  display: inline-block;
  position-area: var(--anchor-v, bottom) var(--anchor-h, span-right);
}

.dropdown > *:not(summary):focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .dropdown > *:not(summary):focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.dropdown .dropdown-content {
  position: absolute;
}

.dropdown:not(details, .dropdown-open, .dropdown-hover:hover, :focus-within) .dropdown-content {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

.dropdown[popover], .dropdown .dropdown-content {
  z-index: 999;
  animation: dropdown 0.2s;
  transition-property: opacity, scale, display;
  transition-behavior: allow-discrete;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@starting-style {
  .dropdown[popover], .dropdown .dropdown-content {
    scale: 95%;
    opacity: 0;
  }
}

.dropdown.dropdown-open > [tabindex]:first-child, .dropdown:not(.dropdown-hover):focus > [tabindex]:first-child, .dropdown:focus-within > [tabindex]:first-child {
  pointer-events: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:not(.dropdown-hover):focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  opacity: 100%;
}

.dropdown.dropdown-hover:hover .dropdown-content {
  opacity: 100%;
  scale: 100%;
}

.dropdown:is(details) summary::-webkit-details-marker {
  display: none;
}

.dropdown.dropdown-open .dropdown-content, .dropdown:focus .dropdown-content, .dropdown:focus-within .dropdown-content {
  scale: 100%;
}

.dropdown:where([popover]) {
  background: #0000;
}

.dropdown[popover] {
  position: fixed;
  color: inherit;
}

@supports not (position-area: bottom) {
  .dropdown[popover] {
    margin: auto;
  }

  .dropdown[popover].dropdown-open:not(:popover-open) {
    display: none;
    transform-origin: top;
    opacity: 0%;
    scale: 95%;
  }

  .dropdown[popover]::backdrop {
    background-color: color-mix(in oklab, #000 30%, #0000);
  }
}

.dropdown[popover]:not(.dropdown-open, :popover-open) {
  display: none;
  transform-origin: top;
  opacity: 0%;
  scale: 95%;
}

.dropdown-start {
  --anchor-h: span-right;
}

.dropdown-start :where(.dropdown-content) {
  inset-inline-end: auto;
}

.dropdown-start.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-bottom;
}

.dropdown-start.dropdown-left .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-start.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-bottom;
}

.dropdown-start.dropdown-right .dropdown-content {
  top: calc(0.25rem * 0);
  bottom: auto;
}

.dropdown-center {
  --anchor-h: center;
}

.dropdown-center :where(.dropdown-content) {
  inset-inline-end: calc(1/2 * 100%);
  translate: 50% 0;
}

.dropdown-center.dropdown-left {
  --anchor-h: left;
  --anchor-v: center;
}

.dropdown-center.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-center.dropdown-right {
  --anchor-h: right;
  --anchor-v: center;
}

.dropdown-center.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(1/2 * 100%);
  translate: 0 50%;
}

.dropdown-end {
  --anchor-h: span-left;
}

.dropdown-end :where(.dropdown-content) {
  inset-inline-end: calc(0.25rem * 0);
  translate: 0 0;
}

.dropdown-end.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-top;
}

.dropdown-end.dropdown-left .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-end.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-top;
}

.dropdown-end.dropdown-right .dropdown-content {
  top: auto;
  bottom: calc(0.25rem * 0);
}

.dropdown-left {
  --anchor-h: left;
  --anchor-v: span-bottom;
}

.dropdown-left .dropdown-content {
  inset-inline-end: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: right;
}

.dropdown-right {
  --anchor-h: right;
  --anchor-v: span-bottom;
}

.dropdown-right .dropdown-content {
  inset-inline-start: 100%;
  top: calc(0.25rem * 0);
  bottom: auto;
  transform-origin: left;
}

.dropdown-bottom {
  --anchor-v: bottom;
}

.dropdown-bottom .dropdown-content {
  top: 100%;
  bottom: auto;
  transform-origin: top;
}

.dropdown-top {
  --anchor-v: top;
}

.dropdown-top .dropdown-content {
  top: auto;
  bottom: 100%;
  transform-origin: bottom;
}

@keyframes dropdown {
  0% {
    opacity: 0;
  }
}

.\!list {
  display: flex !important;
  flex-direction: column !important;
  font-size: 0.875rem !important;
}

.list {
  display: flex;
  flex-direction: column;
  font-size: 0.875rem;
}

.\!list :where(.list-row) {
  --list-grid-cols: minmax(0, auto) 1fr !important;
  position: relative !important;
  display: grid !important;
  grid-auto-flow: column !important;
  gap: calc(0.25rem * 4) !important;
  border-radius: var(--radius-box) !important;
  padding: calc(0.25rem * 4) !important;
  word-break: break-word !important;
  grid-template-columns: var(--list-grid-cols) !important;
}

.list :where(.list-row) {
  --list-grid-cols: minmax(0, auto) 1fr;
  position: relative;
  display: grid;
  grid-auto-flow: column;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding: calc(0.25rem * 4);
  word-break: break-word;
  grid-template-columns: var(--list-grid-cols);
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(1)) {
  --list-grid-cols: 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(1)) {
  --list-grid-cols: 1fr;
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(2)) {
  --list-grid-cols: minmax(0, auto) 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(2)) {
  --list-grid-cols: minmax(0, auto) 1fr;
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(3)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(3)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) 1fr;
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(4)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(4)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(5)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(5)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto) 1fr;
}

.\!list :where(.list-row):has(.list-col-grow:nth-child(6)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr !important;
}

.list :where(.list-row):has(.list-col-grow:nth-child(6)) {
  --list-grid-cols: minmax(0, auto) minmax(0, auto) minmax(0, auto) minmax(0, auto)
        minmax(0, auto) 1fr;
}

.\!list :where(.list-row) :not(.list-col-wrap) {
  grid-row-start: 1 !important;
}

.list :where(.list-row) :not(.list-col-wrap) {
  grid-row-start: 1;
}

.\!list > :not(:last-child).list-row:after, .\!list > :not(:last-child) .list-row:after {
  content: "" !important;
  border-bottom: var(--border) solid !important;
  inset-inline: var(--radius-box) !important;
  position: absolute !important;
  bottom: calc(0.25rem * 0) !important;
  border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent) !important;
}

.list > :not(:last-child).list-row:after, .list > :not(:last-child) .list-row:after {
  content: "";
  border-bottom: var(--border) solid;
  inset-inline: var(--radius-box);
  position: absolute;
  bottom: calc(0.25rem * 0);
  border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent);
}

.\!list > :not(:last-child).list-row:after, .\!list > :not(:last-child) .list-row:after {
  content: "" !important;
  border-bottom: var(--border) solid !important;
  inset-inline: var(--radius-box) !important;
  position: absolute !important;
  bottom: calc(0.25rem * 0) !important;
  border-color: color-mix(in oklab, var(--color-base-content) 5%, transparent) !important;
}

.list-col-wrap {
  grid-row-start: 2;
}

.table {
  font-size: 0.875rem;
  position: relative;
  width: 100%;
  border-radius: var(--radius-box);
  text-align: left;
}

.table:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  text-align: right;
}

@media (hover: hover) {
  .table tr.row-hover:hover, .table tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-200);
  }
}

.table :where(th, td) {
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  vertical-align: middle;
}

.table :where(thead, tfoot) {
  white-space: nowrap;
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}

.table :where(tfoot) {
  border-top: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.table :where(.table-pin-rows thead tr) {
  position: sticky;
  top: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-rows tfoot tr) {
  position: sticky;
  bottom: calc(0.25rem * 0);
  z-index: 1;
  background-color: var(--color-base-100);
}

.table :where(.table-pin-cols tr th) {
  position: sticky;
  right: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  background-color: var(--color-base-100);
}

.table :where(thead tr, tbody tr:not(:last-child)) {
  border-bottom: var(--border) solid color-mix(in oklch, var(--color-base-content) 5%, #0000);
}

.table-zebra tbody tr:nth-child(even) {
  background-color: var(--color-base-200);
}

.table-zebra tbody tr:nth-child(even) :where(.table-pin-cols tr th) {
  background-color: var(--color-base-200);
}

@media (hover: hover) {
  .table-zebra tbody tr.row-hover:hover, .table-zebra tbody tr.row-hover:nth-child(even):hover {
    background-color: var(--color-base-300);
  }
}

.table-xs :not(thead, tfoot) tr {
  font-size: 0.6875rem;
}

.table-xs :where(th, td) {
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
}

.table-sm :not(thead, tfoot) tr {
  font-size: 0.75rem;
}

.table-sm :where(th, td) {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}

.table-md :not(thead, tfoot) tr {
  font-size: 0.875rem;
}

.table-md :where(th, td) {
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
}

.table-lg :not(thead, tfoot) tr {
  font-size: 1.125rem;
}

.table-lg :where(th, td) {
  padding-inline: calc(0.25rem * 5);
  padding-block: calc(0.25rem * 4);
}

.table-xl :not(thead, tfoot) tr {
  font-size: 1.375rem;
}

.table-xl :where(th, td) {
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 5);
}

.stack {
  display: inline-grid;
  grid-template-columns: 3px 4px 1fr 4px 3px;
  grid-template-rows: 3px 4px 1fr 4px 3px;
}

.stack > * {
  height: 100%;
  width: 100%;
}

.stack > *:nth-child(n + 2) {
  width: 100%;
  opacity: 70%;
}

.stack > *:nth-child(2) {
  z-index: 2;
  opacity: 90%;
}

.stack > *:nth-child(1) {
  z-index: 3;
  width: 100%;
}

.stack > *, .stack.stack-bottom > * {
  grid-column: 3 / 4;
  grid-row: 3 / 6;
}

.stack > *:nth-child(2), .stack.stack-bottom > *:nth-child(2) {
  grid-column: 2 / 5;
  grid-row: 2 / 5;
}

.stack > *:nth-child(1), .stack.stack-bottom > *:nth-child(1) {
  grid-column: 1 / 6;
  grid-row: 1 / 4;
}

.stack.stack-top > * {
  grid-column: 3 / 4;
  grid-row: 1 / 4;
}

.stack.stack-top > *:nth-child(2) {
  grid-column: 2 / 5;
  grid-row: 2 / 5;
}

.stack.stack-top > *:nth-child(1) {
  grid-column: 1 / 6;
  grid-row: 3 / 6;
}

.stack.stack-start > * {
  grid-column: 1 / 4;
  grid-row: 3 / 4;
}

.stack.stack-start > *:nth-child(2) {
  grid-column: 2 / 5;
  grid-row: 2 / 5;
}

.stack.stack-start > *:nth-child(1) {
  grid-column: 3 / 6;
  grid-row: 1 / 6;
}

.stack.stack-end > * {
  grid-column: 3 / 6;
  grid-row: 3 / 4;
}

.stack.stack-end > *:nth-child(2) {
  grid-column: 2 / 5;
  grid-row: 2 / 5;
}

.stack.stack-end > *:nth-child(1) {
  grid-column: 1 / 4;
  grid-row: 1 / 6;
}

.collapse:not(td, tr, colgroup) {
  visibility: visible;
}

.collapse {
  position: relative;
  display: grid;
  overflow: hidden;
  border-radius: var(--radius-box, 1rem);
  width: 100%;
  grid-template-rows: max-content 0fr;
  transition: grid-template-rows 0.2s;
}

.collapse > input:is([type="checkbox"], [type="radio"]) {
  grid-column-start: 1;
  grid-row-start: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0;
  z-index: 1;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}

.collapse:is([open], :focus:not(.collapse-close)), .collapse:not(.collapse-close):has(> input:is([type="checkbox"], [type="radio"]):checked) {
  grid-template-rows: max-content 1fr;
}

.collapse:is([open], :focus:not(.collapse-close)) > .collapse-content, .collapse:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content;
}

.collapse:focus-visible, .collapse:has(> input:is([type="checkbox"], [type="radio"]):focus-visible) {
  outline-color: var(--color-base-content);
  outline-style: solid;
  outline-width: 2px;
  outline-offset: 2px;
}

.collapse:not(.collapse-close) > input[type="checkbox"], .collapse:not(.collapse-close) > input[type="radio"]:not(:checked), .collapse:not(.collapse-close) > .collapse-title {
  cursor: pointer;
}

.collapse:focus:not(.collapse-close, .collapse[open]) > .collapse-title {
  cursor: unset;
}

.collapse:is([open], :focus:not(.collapse-close)) > :where(.collapse-content), .collapse:not(.collapse-close) > :where(input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-content) {
  padding-bottom: 1rem;
  transition: padding 0.2s ease-out, background-color 0.2s ease-out;
}

.collapse:is([open]).collapse-arrow > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse.collapse-open.collapse-arrow > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse.collapse-open.collapse-plus > .collapse-title:after {
  content: "−";
}

.collapse.collapse-arrow:focus:not(.collapse-close) > .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse.collapse-arrow:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  transform: translateY(-50%) rotate(225deg);
}

.collapse[open].collapse-plus > .collapse-title:after {
  content: "−";
}

.collapse.collapse-plus:focus:not(.collapse-close) > .collapse-title:after {
  content: "−";
}

.collapse.collapse-plus:not(.collapse-close) > input:is([type="checkbox"], [type="radio"]):checked ~ .collapse-title:after {
  content: "−";
}

.collapse-title, .collapse-content {
  grid-column-start: 1;
  grid-row-start: 1;
}

.collapse-content {
  visibility: hidden;
  grid-column-start: 1;
  grid-row-start: 2;
  min-height: 0;
  transition: visibility 0.2s;
  transition: padding 0.2s ease-out, background-color 0.2s ease-out;
  padding-left: 1rem;
  padding-right: 1rem;
  cursor: unset;
}

.collapse:is(details) {
  width: 100%;
}

.collapse:is(details) summary {
  position: relative;
  display: block;
}

.collapse:is(details) summary::-webkit-details-marker {
  display: none;
}

.collapse:is(details) summary {
  outline: none;
}

.collapse-arrow > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transform: translateY(-100%) rotate(45deg);
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.2s;
  top: 1.9rem;
  inset-inline-end: 1.4rem;
  content: "";
  transform-origin: 75% 75%;
  box-shadow: 2px 2px;
  pointer-events: none;
}

.collapse-plus > .collapse-title:after {
  position: absolute;
  display: block;
  height: 0.5rem;
  width: 0.5rem;
  transition-property: all;
  transition-duration: 300ms;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  top: 0.9rem;
  inset-inline-end: 1.4rem;
  content: "+";
  pointer-events: none;
}

.collapse-title {
  position: relative;
  width: 100%;
  padding: 1rem;
  padding-inline-end: 3rem;
  min-height: 3.75rem;
  transition: background-color 0.2s ease-out;
}

.collapse-open {
  grid-template-rows: max-content 1fr;
}

.collapse-open > .collapse-content {
  visibility: visible;
  min-height: -moz-fit-content;
  min-height: fit-content;
  padding-bottom: 1rem;
  transition: padding 0.2sease-out, background-color 0.2sease-out;
}

.divider {
  display: flex;
  height: calc(0.25rem * 4);
  flex-direction: row;
  align-items: center;
  align-self: stretch;
  white-space: nowrap;
  margin: var(--divider-m, 1rem 0);
}

.divider:before, .divider:after {
  content: "";
  height: calc(0.25rem * 0.5);
  width: 100%;
  flex-grow: 1;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
}

@media print {
  .divider:before, .divider:after {
    border: 0.5px solid;
  }
}

.divider:not(:empty) {
  gap: calc(0.25rem * 4);
}

.divider-horizontal {
  --divider-m: 0 1rem;
}

.divider-horizontal.divider {
  height: auto;
  width: calc(0.25rem * 4);
  flex-direction: column;
}

.divider-horizontal.divider:before {
  height: 100%;
  width: calc(0.25rem * 0.5);
}

.divider-horizontal.divider:after {
  height: 100%;
  width: calc(0.25rem * 0.5);
}

.divider-vertical {
  --divider-m: 1rem 0;
}

.divider-vertical.divider {
  height: calc(0.25rem * 4);
  width: auto;
  flex-direction: row;
}

.divider-vertical.divider:before {
  height: calc(0.25rem * 0.5);
  width: 100%;
}

.divider-vertical.divider:after {
  height: calc(0.25rem * 0.5);
  width: 100%;
}

.divider-neutral:before, .divider-neutral:after {
  background-color: var(--color-neutral);
}

.divider-primary:before, .divider-primary:after {
  background-color: var(--color-primary);
}

.divider-secondary:before, .divider-secondary:after {
  background-color: var(--color-secondary);
}

.divider-accent:before, .divider-accent:after {
  background-color: var(--color-accent);
}

.divider-success:before, .divider-success:after {
  background-color: var(--color-success);
}

.divider-warning:before, .divider-warning:after {
  background-color: var(--color-warning);
}

.divider-info:before, .divider-info:after {
  background-color: var(--color-info);
}

.divider-error:before, .divider-error:after {
  background-color: var(--color-error);
}

.checkbox {
  border: var(--border) solid var(--input-color, color-mix(in oklab, var(--color-base-content) 20%, #0000));
  position: relative;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--radius-selector);
  padding: calc(0.25rem * 1);
  vertical-align: middle;
  color: var(--color-base-content);
  box-shadow: 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 0 #0000 inset, 0 0 #0000;
  transition: background-color 0.2s, box-shadow 0.2s;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: var(--size);
  height: var(--size);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.checkbox:before {
  --tw-content: "";
  content: var(--tw-content);
  display: block;
  width: 100%;
  height: 100%;
  rotate: 45deg;
  background-color: currentColor;
  opacity: 0%;
  transition: clip-path 0.3s, opacity 0.1s, rotate 0.3s, translate 0.3s;
  transition-delay: 0.1s;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 70% 80%, 70% 100%);
  box-shadow: 0px 3px 0 0px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  font-size: 1rem;
  line-height: 0.75;
}

.checkbox:focus-visible {
  outline: 2px solid var(--input-color, currentColor);
  outline-offset: 2px;
}

.checkbox:checked, .checkbox[aria-checked="true"] {
  background-color: var(--input-color, #0000);
  box-shadow: 0 0 #0000 inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px oklch(0% 0 0 / calc(var(--depth) * 0.1));
}

.checkbox:checked:before, .checkbox[aria-checked="true"]:before {
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 0%, 70% 0%, 70% 100%);
  opacity: 100%;
}

@media (forced-colors: active) {
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}

@media print {
  .checkbox:checked:before, .checkbox[aria-checked="true"]:before {
    rotate: 0deg;
    background-color: transparent;
    --tw-content: "✔︎";
    clip-path: none;
  }
}

.checkbox:indeterminate:before {
  rotate: 0deg;
  opacity: 100%;
  translate: 0 -35%;
  clip-path: polygon(20% 100%, 20% 80%, 50% 80%, 50% 80%, 80% 80%, 80% 100%);
}

.checkbox-primary {
  color: var(--color-primary-content);
  --input-color: var(--color-primary);
}

.checkbox-secondary {
  color: var(--color-secondary-content);
  --input-color: var(--color-secondary);
}

.checkbox-accent {
  color: var(--color-accent-content);
  --input-color: var(--color-accent);
}

.checkbox-neutral {
  color: var(--color-neutral-content);
  --input-color: var(--color-neutral);
}

.checkbox-info {
  color: var(--color-info-content);
  --input-color: var(--color-info);
}

.checkbox-success {
  color: var(--color-success-content);
  --input-color: var(--color-success);
}

.checkbox-warning {
  color: var(--color-warning-content);
  --input-color: var(--color-warning);
}

.checkbox-error {
  color: var(--color-error-content);
  --input-color: var(--color-error);
}

.checkbox:disabled {
  cursor: not-allowed;
  opacity: 20%;
}

.checkbox-xs {
  padding: 0.125rem;
  --size: calc(var(--size-selector, 0.25rem) * 4);
}

.checkbox-sm {
  padding: 0.1875rem;
  --size: calc(var(--size-selector, 0.25rem) * 5);
}

.checkbox-md {
  padding: 0.25rem;
  --size: calc(var(--size-selector, 0.25rem) * 6);
}

.checkbox-lg {
  padding: 0.3125rem;
  --size: calc(var(--size-selector, 0.25rem) * 7);
}

.checkbox-xl {
  padding: 0.375rem;
  --size: calc(var(--size-selector, 0.25rem) * 8);
}

.rating {
  position: relative;
  display: inline-flex;
  vertical-align: middle;
}

.rating input {
  border: none;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.rating :where(*) {
  animation: rating 0.25s ease-out;
  height: calc(0.25rem * 6);
  width: calc(0.25rem * 6);
  border-radius: 0;
  background-color: var(--color-base-content);
  opacity: 20%;
}

.rating :where(*):is(input) {
  cursor: pointer;
}

.rating .rating-hidden {
  width: calc(0.25rem * 2);
  background-color: transparent;
}

.rating input[type="radio"]:checked {
  background-image: none;
}

.rating *:checked, .rating *[aria-checked="true"], .rating *[aria-current="true"], .rating *:has(~ *:checked, ~ *[aria-checked="true"], ~ *[aria-current="true"]) {
  opacity: 100%;
}

.rating *:focus-visible {
  transition: scale 0.2s ease-out;
  scale: 1.1;
}

.rating *:active:focus {
  animation: none;
  scale: 1.1;
}

.rating.rating-xs :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
}

.rating.rating-sm :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 5);
  height: calc(0.25rem * 5);
}

.rating.rating-md :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 6);
  height: calc(0.25rem * 6);
}

.rating.rating-lg :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 7);
  height: calc(0.25rem * 7);
}

.rating.rating-xl :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 8);
  height: calc(0.25rem * 8);
}

.rating-half :where(*:not(.rating-hidden)) {
  width: calc(0.25rem * 3);
}

.rating-half.rating-xs *:not(.rating-hidden) {
  width: calc(0.25rem * 2);
}

.rating-half.rating-sm *:not(.rating-hidden) {
  width: calc(0.25rem * 2.5);
}

.rating-half.rating-md *:not(.rating-hidden) {
  width: calc(0.25rem * 3);
}

.rating-half.rating-lg *:not(.rating-hidden) {
  width: .875rem;
}

.rating-half.rating-xl *:not(.rating-hidden) {
  width: calc(0.25rem * 4);
}

@keyframes rating {
  0%, 40% {
    scale: 1.1;
    filter: brightness(1.05) contrast(1.05);
  }
}

.file-input {
  cursor: pointer;
  border: var(--border) solid #0000;
  display: inline-flex;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  background-color: var(--color-base-100);
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  padding-inline-end: 0.75rem;
  font-size: 0.875rem;
  line-height: 2;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --size: calc(var(--size-field, 0.25rem) * 10);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}

.file-input::file-selector-button {
  margin-inline-end: calc(0.25rem * 4);
  cursor: pointer;
  padding-inline: calc(0.25rem * 4);
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  height: calc(100% + var(--border) * 2);
  margin-block: calc(var(--border) * -1);
  margin-inline-start: calc(var(--border) * -1);
  font-size: 0.875rem;
  color: var(--btn-fg);
  border-width: var(--border);
  border-style: solid;
  border-color: var(--btn-border);
  border-start-start-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
  border-end-start-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
  font-weight: 600;
  background-color: var(--btn-bg);
  background-size: calc(var(--noise) * 100%);
  background-image: var(--btn-noise);
  text-shadow: 0 0.5px oklch(1 0 0 / calc(var(--depth) * 0.15));
  box-shadow: 0 0.5px 0 0.5px color-mix( in oklab, color-mix(in oklab, white 30%, var(--btn-bg)) calc(var(--depth) * 20%), #0000 ) inset, var(--btn-shadow);
  --size: calc(var(--size-field, 0.25rem) * 10);
  --btn-bg: var(--btn-color, var(--color-base-200));
  --btn-fg: var(--color-base-content);
  --btn-border: color-mix(in oklab, var(--btn-bg), #000 5%);
  --btn-shadow: 0 3px 2px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000),
      0 4px 3px -2px color-mix(in oklab, var(--btn-bg) 30%, #0000);
  --btn-noise: var(--fx-noise);
}

.file-input:focus {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) 10%, #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}

.file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
}

.file-input:has(> input[disabled])::-moz-placeholder, .file-input:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.file-input:has(> input[disabled])::placeholder, .file-input:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.file-input:has(> input[disabled]), .file-input:is(:disabled, [disabled]) {
  box-shadow: none;
  color: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

.file-input:has(> input[disabled])::file-selector-button, .file-input:is(:disabled, [disabled])::file-selector-button {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  --btn-border: #0000;
  --btn-noise: none;
  --btn-fg: color-mix(in oklch, var(--color-base-content) 20%, #0000);
}

.file-input-ghost {
  background-color: transparent;
  transition: background-color 0.2s;
  box-shadow: none;
  border-color: #0000;
}

.file-input-ghost::file-selector-button {
  margin-inline-start: calc(0.25rem * 0);
  margin-inline-end: calc(0.25rem * 4);
  height: 100%;
  cursor: pointer;
  padding-inline: calc(0.25rem * 4);
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  margin-block: 0;
  border-start-end-radius: calc(var(--join-ss, var(--radius-field) - var(--border)));
  border-end-end-radius: calc(var(--join-es, var(--radius-field) - var(--border)));
}

.file-input-ghost:focus, .file-input-ghost:focus-within {
  background-color: var(--color-base-100);
  color: var(--color-base-content);
  border-color: #0000;
  box-shadow: none;
}

.file-input-neutral {
  --btn-color: var(--color-neutral);
}

.file-input-neutral::file-selector-button {
  color: var(--color-neutral-content);
}

.file-input-neutral, .file-input-neutral:focus, .file-input-neutral:focus-within {
  --input-color: var(--color-neutral);
}

.file-input-primary {
  --btn-color: var(--color-primary);
}

.file-input-primary::file-selector-button {
  color: var(--color-primary-content);
}

.file-input-primary, .file-input-primary:focus, .file-input-primary:focus-within {
  --input-color: var(--color-primary);
}

.file-input-secondary {
  --btn-color: var(--color-secondary);
}

.file-input-secondary::file-selector-button {
  color: var(--color-secondary-content);
}

.file-input-secondary, .file-input-secondary:focus, .file-input-secondary:focus-within {
  --input-color: var(--color-secondary);
}

.file-input-accent {
  --btn-color: var(--color-accent);
}

.file-input-accent::file-selector-button {
  color: var(--color-accent-content);
}

.file-input-accent, .file-input-accent:focus, .file-input-accent:focus-within {
  --input-color: var(--color-accent);
}

.file-input-info {
  --btn-color: var(--color-info);
}

.file-input-info::file-selector-button {
  color: var(--color-info-content);
}

.file-input-info, .file-input-info:focus, .file-input-info:focus-within {
  --input-color: var(--color-info);
}

.file-input-success {
  --btn-color: var(--color-success);
}

.file-input-success::file-selector-button {
  color: var(--color-success-content);
}

.file-input-success, .file-input-success:focus, .file-input-success:focus-within {
  --input-color: var(--color-success);
}

.file-input-warning {
  --btn-color: var(--color-warning);
}

.file-input-warning::file-selector-button {
  color: var(--color-warning-content);
}

.file-input-warning, .file-input-warning:focus, .file-input-warning:focus-within {
  --input-color: var(--color-warning);
}

.file-input-error {
  --btn-color: var(--color-error);
}

.file-input-error::file-selector-button {
  color: var(--color-error-content);
}

.file-input-error, .file-input-error:focus, .file-input-error:focus-within {
  --input-color: var(--color-error);
}

.file-input-xs {
  --size: calc(var(--size-field, 0.25rem) * 6);
  font-size: 0.6875rem;
  line-height: 1rem;
}

.file-input-xs::file-selector-button {
  font-size: 0.6875rem;
}

.file-input-sm {
  --size: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.75rem;
  line-height: 1.5rem;
}

.file-input-sm::file-selector-button {
  font-size: 0.75rem;
}

.file-input-md {
  --size: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
  line-height: 2;
}

.file-input-md::file-selector-button {
  font-size: 0.875rem;
}

.file-input-lg {
  --size: calc(var(--size-field, 0.25rem) * 12);
  font-size: 1.125rem;
  line-height: 2.5rem;
}

.file-input-lg::file-selector-button {
  font-size: 1.125rem;
}

.file-input-xl {
  padding-inline-end: calc(0.25rem * 6);
  --size: calc(var(--size-field, 0.25rem) * 14);
  font-size: 1.125rem;
  line-height: 3rem;
}

.file-input-xl::file-selector-button {
  font-size: 1.375rem;
}

.toggle {
  border: var(--border) solid currentColor;
  color: var(--input-color);
  position: relative;
  display: inline-grid;
  flex-shrink: 0;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  place-content: center;
  vertical-align: middle;
  webkit-user-select: none;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  grid-template-columns: 0fr 1fr 1fr;
  --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
  border-radius: calc( var(--radius-selector) + min(var(--toggle-p), var(--radius-selector-max)) + min(var(--border), var(--radius-selector-max)) );
  padding: var(--toggle-p);
  box-shadow: 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000) inset;
  transition: color 0.3s, grid-template-columns 0.2s;
  --input-color: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --toggle-p: 0.1875rem;
  --size: calc(var(--size-selector, 0.25rem) * 6);
  width: calc((var(--size) * 2) - (var(--border) + var(--toggle-p)) * 2);
  height: var(--size);
}

.toggle > * {
  z-index: 1;
  grid-column: span 1 / span 1;
  grid-column-start: 2;
  grid-row-start: 1;
  height: 100%;
  cursor: pointer;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  padding: calc(0.25rem * 0.5);
  transition: opacity 0.2s, rotate 0.4s;
  border: none;
}

.toggle > *:focus {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .toggle > *:focus {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.toggle > *:nth-child(2) {
  color: var(--color-base-100);
  rotate: 0deg;
}

.toggle > *:nth-child(3) {
  color: var(--color-base-100);
  opacity: 0%;
  rotate: -15deg;
}

.toggle:has(:checked) > :nth-child(2) {
  opacity: 0%;
  rotate: 15deg;
}

.toggle:has(:checked) > :nth-child(3) {
  opacity: 100%;
  rotate: 0deg;
}

.toggle:before {
  position: relative;
  inset-inline-start: calc(0.25rem * 0);
  grid-column-start: 2;
  grid-row-start: 1;
  aspect-ratio: 1 / 1;
  height: 100%;
  border-radius: var(--radius-selector);
  background-color: currentColor;
  translate: 0;
  --tw-content: "";
  content: var(--tw-content);
  transition: background-color 0.1s, translate 0.2s, inset-inline-start 0.2s;
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

@media (forced-colors: active) {
  .toggle:before {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
    outline-offset: calc(1px * -1);
  }
}

@media print {
  .toggle:before {
    outline: 0.25rem solid;
    outline-offset: -1rem;
  }
}

.toggle:focus-visible, .toggle:has(:focus-visible) {
  outline: 2px solid currentColor;
  outline-offset: 2px;
}

.toggle:checked, .toggle[aria-checked="true"], .toggle:has(> input:checked) {
  grid-template-columns: 1fr 1fr 0fr;
  background-color: var(--color-base-100);
  --input-color: var(--color-base-content);
}

.toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
  background-color: currentColor;
}

@starting-style {
  .toggle:checked:before, .toggle[aria-checked="true"]:before, .toggle:has(> input:checked):before {
    opacity: 0;
  }
}

.toggle:indeterminate {
  grid-template-columns: 0.5fr 1fr 0.5fr;
}

.toggle:disabled {
  cursor: not-allowed;
  opacity: 30%;
}

.toggle:disabled:before {
  background-color: transparent;
  border: var(--border) solid currentColor;
}

.toggle-primary:checked, .toggle-primary[aria-checked="true"] {
  --input-color: var(--color-primary);
}

.toggle-secondary:checked, .toggle-secondary[aria-checked="true"] {
  --input-color: var(--color-secondary);
}

.toggle-accent:checked, .toggle-accent[aria-checked="true"] {
  --input-color: var(--color-accent);
}

.toggle-neutral:checked, .toggle-neutral[aria-checked="true"] {
  --input-color: var(--color-neutral);
}

.toggle-success:checked, .toggle-success[aria-checked="true"] {
  --input-color: var(--color-success);
}

.toggle-warning:checked, .toggle-warning[aria-checked="true"] {
  --input-color: var(--color-warning);
}

.toggle-info:checked, .toggle-info[aria-checked="true"] {
  --input-color: var(--color-info);
}

.toggle-error:checked, .toggle-error[aria-checked="true"] {
  --input-color: var(--color-error);
}

.toggle-xs:is([type="checkbox"]), .toggle-xs:has([type="checkbox"]) {
  --toggle-p: 0.0625rem;
  --size: calc(var(--size-selector, 0.25rem) * 4);
}

.toggle-sm:is([type="checkbox"]), .toggle-sm:has([type="checkbox"]) {
  --toggle-p: 0.125rem;
  --size: calc(var(--size-selector, 0.25rem) * 5);
}

.toggle-md:is([type="checkbox"]), .toggle-md:has([type="checkbox"]) {
  --toggle-p: 0.1875rem;
  --size: calc(var(--size-selector, 0.25rem) * 6);
}

.toggle-lg:is([type="checkbox"]), .toggle-lg:has([type="checkbox"]) {
  --toggle-p: 0.25rem;
  --size: calc(var(--size-selector, 0.25rem) * 7);
}

.toggle-xl:is([type="checkbox"]), .toggle-xl:has([type="checkbox"]) {
  --toggle-p: 0.3125rem;
  --size: calc(var(--size-selector, 0.25rem) * 8);
}

.textarea {
  border: var(--border) solid #0000;
  min-height: calc(0.25rem * 20);
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: var(--radius-field);
  background-color: var(--color-base-100);
  padding-block: calc(0.25rem * 2);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  padding-inline-start: 0.75rem;
  padding-inline-end: 0.75rem;
  font-size: 0.875rem;
  border-color: var(--input-color);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
}

.textarea textarea {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  background-color: transparent;
  border: none;
}

.textarea textarea:focus, .textarea textarea:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .textarea textarea:focus, .textarea textarea:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.textarea:focus, .textarea:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
  isolation: isolate;
}

.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.textarea:has(> textarea[disabled])::-moz-placeholder, .textarea:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.textarea:has(> textarea[disabled])::placeholder, .textarea:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.textarea:has(> textarea[disabled]), .textarea:is(:disabled, [disabled]) {
  box-shadow: none;
}

.textarea:has(> textarea[disabled]) > textarea[disabled] {
  cursor: not-allowed;
}

.textarea-ghost {
  background-color: transparent;
  box-shadow: none;
  border-color: #0000;
}

.textarea-ghost:focus, .textarea-ghost:focus-within {
  background-color: var(--color-base-100);
  color: var(--color-base-content);
  border-color: #0000;
  box-shadow: none;
}

.textarea-neutral, .textarea-neutral:focus, .textarea-neutral:focus-within {
  --input-color: var(--color-neutral);
}

.textarea-primary, .textarea-primary:focus, .textarea-primary:focus-within {
  --input-color: var(--color-primary);
}

.textarea-secondary, .textarea-secondary:focus, .textarea-secondary:focus-within {
  --input-color: var(--color-secondary);
}

.textarea-accent, .textarea-accent:focus, .textarea-accent:focus-within {
  --input-color: var(--color-accent);
}

.textarea-info, .textarea-info:focus, .textarea-info:focus-within {
  --input-color: var(--color-info);
}

.textarea-success, .textarea-success:focus, .textarea-success:focus-within {
  --input-color: var(--color-success);
}

.textarea-warning, .textarea-warning:focus, .textarea-warning:focus-within {
  --input-color: var(--color-warning);
}

.textarea-error, .textarea-error:focus, .textarea-error:focus-within {
  --input-color: var(--color-error);
}

.textarea-xs {
  font-size: 0.6875rem;
}

.textarea-sm {
  font-size: 0.75rem;
}

.textarea-md {
  font-size: 0.875rem;
}

.textarea-lg {
  font-size: 1.125rem;
}

.textarea-xl {
  font-size: 1.375rem;
}

.dock {
  position: fixed;
  right: calc(0.25rem * 0);
  bottom: calc(0.25rem * 0);
  left: calc(0.25rem * 0);
  z-index: 1;
  display: flex;
  width: 100%;
  flex-direction: row;
  align-items: center;
  justify-content: space-around;
  background-color: var(--color-base-100);
  padding: calc(0.25rem * 2);
  color: currentColor;
  border-top: 0.5px solid color-mix(in oklab, var(--color-base-content) 5%, #0000);
  height: 4rem;
  height: calc(4rem + env(safe-area-inset-bottom));
  padding-bottom: env(safe-area-inset-bottom);
}

.dock > * {
  position: relative;
  margin-bottom: calc(0.25rem * 2);
  display: flex;
  height: 100%;
  max-width: calc(0.25rem * 32);
  flex-shrink: 1;
  flex-basis: 100%;
  cursor: pointer;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  gap: 1px;
  border-radius: var(--radius-box);
  background-color: transparent;
  transition: opacity 0.2s ease-out;
}

.dock > *:where(.dock-active):after {
  content: "";
  position: absolute;
  height: calc(0.25rem * 1);
  width: calc(0.25rem * 10);
  border-radius: calc(infinity * 1px);
  background-color: currentColor;
  bottom: 0.2rem;
  border-top: 3px solid;
}

@media (hover: hover) {
  .dock > *:hover {
    opacity: 80%;
  }
}

.dock > *[aria-disabled="true"], .dock > *[aria-disabled="true"]:hover, .dock > *[disabled], .dock > *[disabled]:hover {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  opacity: 100%;
}

.dock > * .dock-label {
  font-size: 0.6875rem;
}

.dock-xs {
  height: 3rem;
  height: calc(3rem + env(safe-area-inset-bottom));
}

.dock-xs .dock-active:after {
  bottom: -0.1rem;
}

.dock-xs .dock-label {
  font-size: 0.625rem;
}

.dock-sm {
  height: calc(0.25rem * 14);
  height: 3.5rem;
  height: calc(3.5rem + env(safe-area-inset-bottom));
}

.dock-sm .dock-active:after {
  bottom: -0.1rem;
}

.dock-sm .dock-label {
  font-size: 0.625rem;
}

.dock-md {
  height: 4rem;
  height: calc(4rem + env(safe-area-inset-bottom));
}

.dock-md .dock-label {
  font-size: 0.6875rem;
}

.dock-lg {
  height: 4.5rem;
  height: calc(4.5rem + env(safe-area-inset-bottom));
}

.dock-lg .dock-active:after {
  bottom: 0.4rem;
}

.dock-lg .dock-label {
  font-size: 0.6875rem;
}

.dock-xl {
  height: 5rem;
  height: calc(5rem + env(safe-area-inset-bottom));
}

.dock-xl .dock-active:after {
  bottom: 0.4rem;
}

.dock-xl .dock-label {
  font-size: 0.75rem;
}

.indicator {
  position: relative;
  display: inline-flex;
  width: -moz-max-content;
  width: max-content;
}

.indicator :where(.indicator-item) {
  z-index: 1;
  position: absolute;
  white-space: nowrap;
  top: var(--inidicator-t, 0);
  bottom: var(--inidicator-b, auto);
  left: var(--inidicator-s, auto);
  right: var(--inidicator-e, 0);
  translate: var(--inidicator-x, 50%) var(--indicator-y, -50%);
}

.indicator-start {
  --inidicator-s: 0;
  --inidicator-e: auto;
  --inidicator-x: -50%;
}

.indicator-center {
  --inidicator-s: 50%;
  --inidicator-e: 50%;
  --inidicator-x: -50%;
}

[dir="rtl"] .indicator-center {
  --inidicator-x: 50%;
}

.indicator-end {
  --inidicator-s: auto;
  --inidicator-e: 0;
  --inidicator-x: 50%;
}

.indicator-bottom {
  --inidicator-t: auto;
  --inidicator-b: 0;
  --indicator-y: 50%;
}

.indicator-middle {
  --inidicator-t: 50%;
  --inidicator-b: 50%;
  --indicator-y: -50%;
}

.indicator-top {
  --inidicator-t: 0;
  --inidicator-b: auto;
  --indicator-y: -50%;
}

.mockup-code {
  position: relative;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
  background-color: var(--color-neutral);
  padding-block: calc(0.25rem * 5);
  color: var(--color-neutral-content);
  font-size: 0.875rem;
  direction: ltr;
}

.mockup-code:before {
  content: "";
  margin-bottom: calc(0.25rem * 4);
  display: block;
  height: calc(0.25rem * 3);
  width: calc(0.25rem * 3);
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}

.mockup-code pre {
  padding-right: calc(0.25rem * 5);
}

.mockup-code pre:before {
  content: "";
  margin-right: 2ch;
}

.mockup-code pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  width: calc(0.25rem * 8);
  text-align: right;
  opacity: 50%;
}

.mockup-window {
  position: relative;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
  padding-top: calc(0.25rem * 5);
}

.mockup-window:before {
  content: "";
  margin-bottom: calc(0.25rem * 4);
  display: block;
  aspect-ratio: 1 / 1;
  height: calc(0.25rem * 3);
  flex-shrink: 0;
  align-self: flex-start;
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}

[dir="rtl"] .mockup-window:before {
  align-self: flex-end;
}

.mockup-window pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}

.mockup-browser {
  position: relative;
  overflow: hidden;
  overflow-x: auto;
  border-radius: var(--radius-box);
}

.mockup-browser pre[data-prefix]:before {
  content: attr(data-prefix);
  display: inline-block;
  text-align: right;
}

.mockup-browser .mockup-browser-toolbar {
  margin-block: calc(0.25rem * 3);
  display: inline-flex;
  width: 100%;
  align-items: center;
  padding-right: 1.4em;
}

.mockup-browser .mockup-browser-toolbar:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  flex-direction: row-reverse;
}

.mockup-browser .mockup-browser-toolbar:before {
  content: "";
  margin-right: 4.8rem;
  display: inline-block;
  aspect-ratio: 1 / 1;
  height: calc(0.25rem * 3);
  border-radius: calc(infinity * 1px);
  opacity: 30%;
  box-shadow: 1.4em 0, 2.8em 0, 4.2em 0;
}

.mockup-browser .mockup-browser-toolbar .input {
  margin-inline: auto;
  display: flex;
  height: 100%;
  align-items: center;
  gap: calc(0.25rem * 2);
  overflow: hidden;
  background-color: var(--color-base-200);
  text-overflow: ellipsis;
  white-space: nowrap;
  font-size: 0.75rem;
  direction: ltr;
}

.mockup-browser .mockup-browser-toolbar .\!input {
  margin-inline: auto !important;
  display: flex !important;
  height: 100% !important;
  align-items: center !important;
  gap: calc(0.25rem * 2) !important;
  overflow: hidden !important;
  background-color: var(--color-base-200) !important;
  text-overflow: ellipsis !important;
  white-space: nowrap !important;
  font-size: 0.75rem !important;
  direction: ltr !important;
}

.mockup-browser .mockup-browser-toolbar .input:before {
  content: "";
  width: calc(0.25rem * 4);
  height: calc(0.25rem * 4);
  opacity: 30%;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A");
}

.mockup-browser .mockup-browser-toolbar .\!input:before {
  content: "" !important;
  width: calc(0.25rem * 4) !important;
  height: calc(0.25rem * 4) !important;
  opacity: 30% !important;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' class='size-4'%3E%3Cpath fill-rule='evenodd' d='M9.965 11.026a5 5 0 1 1 1.06-1.06l2.755 2.754a.75.75 0 1 1-1.06 1.06l-2.755-2.754ZM10.5 7a3.5 3.5 0 1 1-7 0 3.5 3.5 0 0 1 7 0Z' clip-rule='evenodd' /%3E%3C/svg%3E%0A") !important;
}

.mockup-phone {
  display: inline-grid;
  justify-items: center;
  border: 6px solid #6b6b6b;
  border-radius: 65px;
  background-color: #000;
  padding: 11px;
  overflow: hidden;
}

.mockup-phone-camera {
  grid-column: 1/1;
  grid-row: 1/1;
  background: #000;
  height: 32px;
  width: 126px;
  border-radius: 17px;
  z-index: 1;
  margin-top: 6px;
}

.mockup-phone-display {
  grid-column: 1/1;
  grid-row: 1/1;
  overflow: hidden;
  border-radius: 49px;
  width: 390px;
  height: 845px;
}

.kbd {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: var(--radius-field);
  background-color: var(--color-base-200);
  vertical-align: middle;
  padding-left: 0.5em;
  padding-right: 0.5em;
  border: var(--border) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
  border-bottom: calc(var(--border) + 1px) solid color-mix(in srgb, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-selector, 0.25rem) * 6);
  font-size: 0.875rem;
  height: var(--size);
  min-width: var(--size);
}

.kbd-xs {
  --size: calc(var(--size-selector, 0.25rem) * 4);
  font-size: 0.625rem;
}

.kbd-sm {
  --size: calc(var(--size-selector, 0.25rem) * 5);
  font-size: 0.75rem;
}

.kbd-md {
  --size: calc(var(--size-selector, 0.25rem) * 6);
  font-size: 0.875rem;
}

.kbd-lg {
  --size: calc(var(--size-selector, 0.25rem) * 7);
  font-size: 1rem;
}

.kbd-xl {
  --size: calc(var(--size-selector, 0.25rem) * 8);
  font-size: 1.125rem;
}

.radial-progress {
  position: relative;
  display: inline-grid;
  height: var(--size);
  width: var(--size);
  place-content: center;
  border-radius: calc(infinity * 1px);
  background-color: transparent;
  vertical-align: middle;
  box-sizing: content-box;
  --value: 0;
  --size: 5rem;
  --thickness: calc(var(--size) / 10);
  --radialprogress: calc(var(--value) * 1%);
  transition: --radialprogress 0.3s linear;
}

.radial-progress:before {
  position: absolute;
  inset: calc(0.25rem * 0);
  border-radius: calc(infinity * 1px);
  content: "";
  background: radial-gradient(farthest-side, currentColor 98%, #0000) top/var(--thickness) var(--thickness) no-repeat, conic-gradient(currentColor var(--radialprogress), #0000 0);
  webkit-mask: radial-gradient( farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)) );
  -webkit-mask: radial-gradient( farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)) );
          mask: radial-gradient( farthest-side, #0000 calc(100% - var(--thickness)), #000 calc(100% + 0.5px - var(--thickness)) );
}

.radial-progress:after {
  position: absolute;
  border-radius: calc(infinity * 1px);
  background-color: currentColor;
  transition: transform 0.3s linear;
  content: "";
  inset: calc(50% - var(--thickness) / 2);
  transform: rotate(calc(var(--value) * 3.6deg - 90deg)) translate(calc(var(--size) / 2 - 50%));
}

.toast {
  position: fixed;
  inset-inline-start: auto;
  inset-inline-end: calc(0.25rem * 0);
  top: auto;
  bottom: calc(0.25rem * 0);
  margin: calc(0.25rem * 4);
  display: flex;
  min-width: -moz-fit-content;
  min-width: fit-content;
  flex-direction: column;
  gap: calc(0.25rem * 2);
  background-color: transparent;
  white-space: nowrap;
  translate: var(--toast-x, 0) var(--toast-y, 0);
}

.toast > * {
  animation: toast 0.25s ease-out;
}

.toast:where(.toast-start) {
  inset-inline-start: calc(0.25rem * 0);
  inset-inline-end: auto;
  --toast-x: 0;
}

.toast:where(.toast-center) {
  inset-inline-start: calc(1/2 * 100%);
  inset-inline-end: calc(1/2 * 100%);
  --toast-x: -50%;
}

.toast:where(.toast-end) {
  inset-inline-start: auto;
  inset-inline-end: calc(0.25rem * 0);
  --toast-x: 0;
}

.toast:where(.toast-bottom) {
  top: auto;
  bottom: calc(0.25rem * 0);
  --toast-y: 0;
}

.toast:where(.toast-middle) {
  top: calc(1/2 * 100%);
  bottom: auto;
  --toast-y: -50%;
}

.toast:where(.toast-top) {
  top: calc(0.25rem * 0);
  bottom: auto;
  --toast-y: 0;
}

@keyframes toast {
  0% {
    scale: 0.9;
    opacity: 0;
  }

  100% {
    scale: 1;
    opacity: 1;
  }
}

.menu {
  display: flex;
  width: -moz-fit-content;
  width: fit-content;
  flex-direction: column;
  flex-wrap: wrap;
  padding: calc(0.25rem * 2);
  --menu-active-fg: var(--color-neutral-content);
  --menu-active-bg: var(--color-neutral);
  font-size: 0.875rem;
}

.menu :where(li ul) {
  position: relative;
  margin-inline-start: calc(0.25rem * 4);
  padding-inline-start: calc(0.25rem * 2);
  white-space: nowrap;
}

.menu :where(li ul):before {
  position: absolute;
  inset-inline-start: calc(0.25rem * 0);
  top: calc(0.25rem * 3);
  bottom: calc(0.25rem * 3);
  background-color: var(--color-base-content);
  opacity: 10%;
  width: var(--border);
  content: "";
}

.menu :where(li > .menu-dropdown:not(.menu-dropdown-show)) {
  display: none;
}

.menu :where(li:not(.menu-title) > *:not(ul, details, .menu-title, .btn)), .menu :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  display: grid;
  grid-auto-flow: column;
  align-content: flex-start;
  align-items: center;
  gap: calc(0.25rem * 2);
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  text-align: start;
  transition-property: color, background-color, box-shadow;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
  grid-auto-columns: minmax(auto, max-content) auto max-content;
  text-wrap: balance;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.menu :where(li > details > summary) {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li > details > summary) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li > details > summary)::-webkit-details-marker {
  display: none;
}

.menu :where(li > details > summary):after, .menu :where(li > .menu-dropdown-toggle):after {
  justify-self: flex-end;
  display: block;
  height: 0.375rem;
  width: 0.375rem;
  rotate: -135deg;
  translate: 0 -1px;
  transition-property: rotate, translate;
  transition-duration: 0.2s;
  content: "";
  transform-origin: 50% 50%;
  box-shadow: 2px 2px inset;
  pointer-events: none;
}

.menu :where(li > details[open] > summary):after, .menu :where(li > .menu-dropdown-toggle.menu-dropdown-show):after {
  rotate: 45deg;
  translate: 0 1px;
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  color: var(--color-base-content);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn).menu-focus, .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title), li:not(.menu-title, .disabled) > details > summary:not(.menu-title) ):not(.menu-active, :active, .btn):focus-visible {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  cursor: pointer;
  background-color: color-mix(in oklab, var(--color-base-content) 10%, transparent);
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where( li:not(.menu-title, .disabled) > *:not(ul, details, .menu-title):not(.menu-active, :active, .btn):hover, li:not(.menu-title, .disabled) > details > summary:not(.menu-title):not(.menu-active, :active, .btn):hover ) {
  box-shadow: 0 1px oklch(0% 0 0 / 0.01) inset, 0 -1px oklch(100% 0 0 / 0.01) inset;
}

.menu :where(li:empty) {
  background-color: var(--color-base-content);
  opacity: 10%;
  margin: 0.5rem 1rem;
  height: 1px;
}

.menu :where(li) {
  position: relative;
  display: flex;
  flex-shrink: 0;
  flex-direction: column;
  flex-wrap: wrap;
  align-items: stretch;
}

.menu :where(li) .badge {
  justify-self: flex-end;
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active, .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active, .menu :where(li) > details > summary:active {
  color: var(--menu-active-fg);
  background-color: var(--menu-active-bg);
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
}

.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn):active:active), .menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:not(.menu :where(li) > *:not(ul, .menu-title, details, .btn).menu-active:active), .menu :where(li) > details > summary:active:not(.menu :where(li) > details > summary:active:active) {
  box-shadow: 0 2px calc(var(--depth) * 3px) -2px var(--menu-active-bg);
}

.menu :where(li).menu-disabled {
  pointer-events: none;
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.menu .dropdown:focus-within .menu-dropdown-toggle:after {
  rotate: 45deg;
  translate: 0 1px;
}

.menu .dropdown-content {
  margin-top: calc(0.25rem * 2);
  padding: calc(0.25rem * 2);
}

.menu .dropdown-content:before {
  display: none;
}

.menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
  font-size: 0.875rem;
  font-weight: 600;
}

.menu-horizontal {
  display: inline-flex;
  flex-direction: row;
}

.menu-horizontal > li:not(.menu-title) > details > ul {
  position: absolute;
  margin-inline-start: calc(0.25rem * 0);
  margin-top: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 2);
  padding-inline-end: calc(0.25rem * 2);
}

.menu-horizontal > li > details > ul:before {
  content: none;
}

:where(.menu-horizontal > li:not(.menu-title) > details > ul) {
  border-radius: var(--radius-box);
  background-color: var(--color-base-100);
  box-shadow: 0 1px 3px 0 oklch(0% 0 0/0.1), 0 1px 2px -1px oklch(0% 0 0/0.1);
}

.menu-vertical {
  display: inline-flex;
  flex-direction: column;
}

.menu-vertical > li:not(.menu-title) > details > ul {
  position: relative;
  margin-inline-start: calc(0.25rem * 4);
  margin-top: calc(0.25rem * 0);
  padding-block: calc(0.25rem * 0);
  padding-inline-end: calc(0.25rem * 0);
}

.menu-xs :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-xs :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
  font-size: 0.6875rem;
}

.menu-xs .menu-title {
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
}

.menu-sm :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-sm :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2.5);
  padding-block: calc(0.25rem * 1);
  font-size: 0.75rem;
}

.menu-sm .menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}

.menu-md :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-md :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1.5);
  font-size: 0.875rem;
}

.menu-md .menu-title {
  padding-inline: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 2);
}

.menu-lg :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-lg :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 1.5);
  font-size: 1.125rem;
}

.menu-lg .menu-title {
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 3);
}

.menu-xl :where(li:not(.menu-title) > *:not(ul, details, .menu-title)), .menu-xl :where(li:not(.menu-title) > details > summary:not(.menu-title)) {
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 5);
  padding-block: calc(0.25rem * 1.5);
  font-size: 1.375rem;
}

.menu-xl .menu-title {
  padding-inline: calc(0.25rem * 6);
  padding-block: calc(0.25rem * 3);
}

.hero {
  display: grid;
  width: 100%;
  place-items: center;
  background-size: cover;
  background-position: center;
}

.hero > * {
  grid-column-start: 1;
  grid-row-start: 1;
}

.hero-overlay {
  grid-column-start: 1;
  grid-row-start: 1;
  height: 100%;
  width: 100%;
  background-color: color-mix(in oklab, var(--color-neutral) 50%, transparent);
}

.hero-content {
  isolation: isolate;
  display: flex;
  max-width: 80rem;
  align-items: center;
  justify-content: center;
  gap: calc(0.25rem * 4);
  padding: calc(0.25rem * 4);
}

.select {
  border: var(--border) solid #0000;
  position: relative;
  display: inline-flex;
  flex-shrink: 1;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  background-color: var(--color-base-100);
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  height: var(--size);
  font-size: 0.875rem;
  border-start-start-radius: var(--join-ss, var(--radius-field));
  border-start-end-radius: var(--join-se, var(--radius-field));
  border-end-start-radius: var(--join-es, var(--radius-field));
  border-end-end-radius: var(--join-ee, var(--radius-field));
  background-image: linear-gradient(45deg, #0000 50%, currentColor 50%), linear-gradient(135deg, currentColor 50%, #0000 50%);
  background-position: calc(100% - 20px) calc(1px + 50%), calc(100% - 16.1px) calc(1px + 50%);
  background-size: 4px 4px, 4px 4px;
  background-repeat: no-repeat;
  text-overflow: ellipsis;
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000) inset, 0 -1px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset;
  border-color: var(--input-color);
  --input-color: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --size: calc(var(--size-field, 0.25rem) * 10);
}

[dir="rtl"] .select {
  background-position: calc(0% + 12px) calc(1px + 50%), calc(0% + 16px) calc(1px + 50%);
}

.select select {
  margin-inline-start: calc(0.25rem * -4);
  margin-inline-end: calc(0.25rem * -7);
  width: calc(100% + 2.75rem);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  padding-inline-start: calc(0.25rem * 4);
  padding-inline-end: calc(0.25rem * 7);
  height: calc(100% - 2px);
  background: inherit;
  border-radius: inherit;
  border-style: none;
}

.select select:focus, .select select:focus-within {
  --tw-outline-style: none;
  outline-style: none;
}

@media (forced-colors: active) {
  .select select:focus, .select select:focus-within {
    outline: 2px solid transparent;
    outline-offset: 2px;
  }
}

.select select:not(:last-child) {
  margin-inline-end: calc(0.25rem * -5.5);
  background-image: none;
}

.select:focus, .select:focus-within {
  --input-color: var(--color-base-content);
  box-shadow: 0 1px color-mix(in oklab, var(--input-color) calc(var(--depth) * 10%), #0000);
  outline: 2px solid var(--input-color);
  outline-offset: 2px;
}

.select:has(> select[disabled]), .select:is(:disabled, [disabled]) {
  cursor: not-allowed;
  border-color: var(--color-base-200);
  background-color: var(--color-base-200);
  color: color-mix(in oklab, var(--color-base-content) 40%, transparent);
}

.select:has(> select[disabled])::-moz-placeholder, .select:is(:disabled, [disabled])::-moz-placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has(> select[disabled])::placeholder, .select:is(:disabled, [disabled])::placeholder {
  color: color-mix(in oklab, var(--color-base-content) 20%, transparent);
}

.select:has(> select[disabled]) > select[disabled] {
  cursor: not-allowed;
}

.select-ghost {
  background-color: transparent;
  transition: background-color 0.2s;
  box-shadow: none;
  border-color: #0000;
}

.select-ghost:focus, .select-ghost:focus-within {
  background-color: var(--color-base-100);
  color: var(--color-base-content);
  border-color: #0000;
  box-shadow: none;
}

.select-neutral, .select-neutral:focus, .select-neutral:focus-within {
  --input-color: var(--color-neutral);
}

.select-primary, .select-primary:focus, .select-primary:focus-within {
  --input-color: var(--color-primary);
}

.select-secondary, .select-secondary:focus, .select-secondary:focus-within {
  --input-color: var(--color-secondary);
}

.select-accent, .select-accent:focus, .select-accent:focus-within {
  --input-color: var(--color-accent);
}

.select-info, .select-info:focus, .select-info:focus-within {
  --input-color: var(--color-info);
}

.select-success, .select-success:focus, .select-success:focus-within {
  --input-color: var(--color-success);
}

.select-warning, .select-warning:focus, .select-warning:focus-within {
  --input-color: var(--color-warning);
}

.select-error, .select-error:focus, .select-error:focus-within {
  --input-color: var(--color-error);
}

.select-xs {
  --size: calc(var(--size-field, 0.25rem) * 6);
  font-size: 0.6875rem;
}

.select-sm {
  --size: calc(var(--size-field, 0.25rem) * 8);
  font-size: 0.75rem;
}

.select-md {
  --size: calc(var(--size-field, 0.25rem) * 10);
  font-size: 0.875rem;
}

.select-lg {
  --size: calc(var(--size-field, 0.25rem) * 12);
  font-size: 1.125rem;
}

.select-xl {
  --size: calc(var(--size-field, 0.25rem) * 14);
  font-size: 1.375rem;
}

.cally {
  font-size: 0.7rem;
}

.cally::part(container) {
  padding: 0.5rem 1rem;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.cally ::part(th) {
  font-weight: normal;
  block-size: auto;
}

.cally::part(header) {
  direction: ltr;
}

.cally ::part(head) {
  opacity: 0.5;
  font-size: 0.7rem;
}

.cally::part(button) {
  border-radius: var(--radius-field);
  border: none;
  padding: 0.5rem;
  background: #0000;
}

.cally::part(button):hover {
  background: var(--color-base-200);
}

.cally ::part(day) {
  border-radius: var(--radius-field);
  font-size: 0.7rem;
}

.cally ::part(button day today) {
  background: var(--color-primary);
  color: var(--color-primary-content);
}

.cally ::part(selected) {
  color: var(--color-base-100);
  background: var(--color-base-content);
  border-radius: var(--radius-field);
}

.cally ::part(range-inner) {
  border-radius: 0;
}

.cally ::part(range-start) {
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.cally ::part(range-end) {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
}

.cally ::part(range-start range-end) {
  border-radius: var(--radius-field);
}

.cally calendar-month {
  width: 100%;
}

.react-day-picker {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  background-color: var(--color-base-100);
  border-radius: var(--radius-box);
  border: var(--border) solid var(--color-base-200);
  font-size: 0.75rem;
  display: inline-block;
  position: relative;
  overflow: clip;
}

.react-day-picker[dir="rtl"] .rdp-nav .rdp-chevron {
  transform-origin: 50%;
  transform: rotate(180deg);
}

.react-day-picker * {
  box-sizing: border-box;
}

.react-day-picker .rdp-day {
  width: 2.25rem;
  height: 2.25rem;
  text-align: center;
}

.react-day-picker .rdp-day_button {
  cursor: pointer;
  font: inherit;
  color: inherit;
  width: 2.25rem;
  height: 2.25rem;
  border: 2px solid #0000;
  border-radius: var(--radius-field);
  background: 0 0;
  justify-content: center;
  align-items: center;
  margin: 0;
  padding: 0;
  display: flex;
}

.react-day-picker .rdp-day_button:disabled {
  cursor: revert;
}

.react-day-picker .rdp-day_button:hover {
  background-color: var(--color-base-200);
}

.react-day-picker .rdp-caption_label {
  z-index: 1;
  white-space: nowrap;
  border: 0;
  align-items: center;
  display: inline-flex;
  position: relative;
}

.react-day-picker .rdp-button_next {
  border-radius: var(--radius-field);
}

.react-day-picker .rdp-button_next:hover {
  background-color: var(--color-base-200);
}

.react-day-picker .rdp-button_previous {
  border-radius: var(--radius-field);
}

.react-day-picker .rdp-button_previous:hover {
  background-color: var(--color-base-200);
}

.react-day-picker .rdp-button_next, .react-day-picker .rdp-button_previous {
  cursor: pointer;
  font: inherit;
  color: inherit;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  width: 2.25rem;
  height: 2.25rem;
  background: 0 0;
  border: none;
  justify-content: center;
  align-items: center;
  margin: 0;
  padding: 0;
  display: inline-flex;
  position: relative;
}

.react-day-picker .rdp-button_next:disabled, .react-day-picker .rdp-button_previous:disabled {
  cursor: revert;
  opacity: 0.5;
}

.react-day-picker .rdp-chevron {
  fill: var(--color-base-content);
  width: 1rem;
  height: 1rem;
  display: inline-block;
}

.react-day-picker .rdp-dropdowns {
  align-items: center;
  gap: 0.5rem;
  display: inline-flex;
  position: relative;
}

.react-day-picker .rdp-dropdown {
  z-index: 2;
  opacity: 0;
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  cursor: inherit;
  line-height: inherit;
  border: none;
  width: 100%;
  margin: 0;
  padding: 0;
  position: absolute;
  inset-block: 0;
  inset-inline-start: 0;
}

.react-day-picker .rdp-dropdown:focus-visible ~ .rdp-caption_label {
  outline: 5px auto highlight;
  outline: 5px auto -webkit-focus-ring-color;
}

.react-day-picker .rdp-dropdown_root {
  align-items: center;
  display: inline-flex;
  position: relative;
}

.react-day-picker .rdp-dropdown_root[data-disabled="true"] .rdp-chevron {
  opacity: 0.5;
}

.react-day-picker .rdp-month_caption {
  height: 2.75rem;
  font-size: 0.75rem;
  font-weight: inherit;
  place-content: center;
  display: flex;
}

.react-day-picker .rdp-months {
  gap: 2rem;
  flex-wrap: wrap;
  max-width: -moz-fit-content;
  max-width: fit-content;
  padding: 0.5rem;
  display: flex;
  position: relative;
}

.react-day-picker .rdp-month_grid {
  border-collapse: collapse;
}

.react-day-picker .rdp-nav {
  height: 2.75rem;
  inset-block-start: 0;
  inset-inline-end: 0;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  padding-inline: 0.5rem;
  display: flex;
  position: absolute;
  top: 0.25rem;
}

.react-day-picker .rdp-weekday {
  opacity: 0.6;
  padding: 0.5rem 0rem;
  text-align: center;
  font-size: smaller;
  font-weight: 500;
}

.react-day-picker .rdp-week_number {
  opacity: 0.6;
  height: 2.25rem;
  width: 2.25rem;
  border: none;
  border-radius: 100%;
  text-align: center;
  font-size: small;
  font-weight: 400;
}

.react-day-picker .rdp-today:not(.rdp-outside) .rdp-day_button {
  background: var(--color-primary);
  color: var(--color-primary-content);
}

.react-day-picker .rdp-selected {
  font-weight: inherit;
  font-size: 0.75rem;
}

.react-day-picker .rdp-selected .rdp-day_button {
  color: var(--color-base-100);
  background-color: var(--color-base-content);
  border-radius: var(--radius-field);
  border: none;
}

.react-day-picker .rdp-selected .rdp-day_button:hover {
  background-color: var(--color-base-content);
}

.react-day-picker .rdp-outside {
  opacity: 0.75;
}

.react-day-picker .rdp-disabled {
  opacity: 0.5;
}

.react-day-picker .rdp-hidden {
  visibility: hidden;
  color: var(--color-base-content);
}

.react-day-picker .rdp-range_start .rdp-day_button {
  border-radius: var(--radius-field) 0 0 var(--radius-field);
  background-color: var(--color-base-content);
  color: var(--color-base-content);
}

.react-day-picker .rdp-range_middle {
  background-color: var(--color-base-200);
}

.react-day-picker .rdp-range_middle .rdp-day_button {
  border: unset;
  border-radius: unset;
  color: inherit;
}

.react-day-picker .rdp-range_end {
  color: var(--color-base-content);
}

.react-day-picker .rdp-range_end .rdp-day_button {
  border-radius: 0 var(--radius-field) var(--radius-field) 0;
  color: var(--color-base-content);
  background-color: var(--color-base-content);
}

.react-day-picker .rdp-range_start.rdp-range_end {
  background: revert;
}

.react-day-picker .rdp-focusable {
  cursor: pointer;
}

.react-day-picker .rdp-footer {
  border-top: var(--border) solid var(--color-base-200);
  padding: 0.5rem;
}

.pika-single:is(div) {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
  font-size: 0.75rem;
  z-index: 999;
  display: inline-block;
  position: relative;
  color: var(--color-base-content);
  background-color: var(--color-base-100);
  border-radius: var(--radius-box);
  border: var(--border) solid var(--color-base-200);
  padding: 0.5rem;
}

.pika-single:is(div):before, .pika-single:is(div):after {
  content: "";
  display: table;
}

.pika-single:is(div):after {
  clear: both;
}

.pika-single:is(div).is-hidden {
  display: none;
}

.pika-single:is(div).is-bound {
  position: absolute;
}

.pika-single:is(div) .pika-lendar {
  float: left;
}

.pika-single:is(div) .pika-title {
  position: relative;
  text-align: center;
}

.pika-single:is(div) .pika-title select {
  cursor: pointer;
  position: absolute;
  z-index: 999;
  margin: 0;
  left: 0;
  top: 5px;
  opacity: 0;
}

.pika-single:is(div) .pika-label {
  display: inline-block;
  position: relative;
  z-index: 999;
  overflow: hidden;
  margin: 0;
  padding: 5px 3px;
  background-color: var(--color-base-100);
}

.pika-single:is(div) .pika-prev, .pika-single:is(div) .pika-next {
  display: block;
  cursor: pointer;
  position: absolute;
  top: 0;
  outline: none;
  border: 0;
  width: 2.25rem;
  height: 2.25rem;
  color: #0000;
  font-size: 1.2em;
  border-radius: var(--radius-field);
}

.pika-single:is(div) .pika-prev:hover, .pika-single:is(div) .pika-next:hover {
  background-color: var(--color-base-200);
}

.pika-single:is(div) .pika-prev.is-disabled, .pika-single:is(div) .pika-next.is-disabled {
  cursor: default;
  opacity: 0.2;
}

.pika-single:is(div) .pika-prev:before, .pika-single:is(div) .pika-next:before {
  display: inline-block;
  width: 2.25rem;
  height: 2.25rem;
  line-height: 2.25;
  color: var(--color-base-content);
}

.pika-single:is(div) .pika-prev {
  left: 0;
}

.pika-single:is(div) .pika-prev:before {
  content: "‹";
}

.pika-single:is(div) .pika-next {
  right: 0;
}

.pika-single:is(div) .pika-next:before {
  content: "›";
}

.pika-single:is(div) .pika-select {
  display: inline-block;
}

.pika-single:is(div) .pika-table {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  border: 0;
}

.pika-single:is(div) .pika-table th, .pika-single:is(div) .pika-table td {
  padding: 0;
}

.pika-single:is(div) .pika-table th {
  opacity: 0.6;
  text-align: center;
  width: 2.25rem;
  height: 2.25rem;
}

.pika-single:is(div) .pika-button {
  cursor: pointer;
  display: block;
  outline: none;
  border: 0;
  margin: 0;
  width: 2.25rem;
  height: 2.25rem;
  padding: 5px;
  text-align: right;
  text-align: center;
}

.pika-single:is(div) .pika-week {
  color: var(--color-base-content);
}

.pika-single:is(div) .is-today .pika-button {
  background: var(--color-primary);
  color: var(--color-primary-content);
}

.pika-single:is(div) .is-selected .pika-button, .pika-single:is(div) .is-selected .pika-button:hover, .pika-single:is(div) .has-event .pika-button, .pika-single:is(div) .has-event .pika-button:hover {
  color: var(--color-base-100);
  background-color: var(--color-base-content);
  border-radius: var(--radius-field);
}

.pika-single:is(div) .has-event .pika-button {
  background: var(--color-base-primary);
}

.pika-single:is(div) .is-disabled .pika-button, .pika-single:is(div) .is-inrange .pika-button {
  background: var(--color-base-primary);
}

.pika-single:is(div) .is-startrange .pika-button {
  color: var(--color-base-100);
  background: var(--color-base-content);
  border-radius: var(--radius-field);
}

.pika-single:is(div) .is-endrange .pika-button {
  color: var(--color-base-100);
  background: var(--color-base-content);
  border-radius: var(--radius-field);
}

.pika-single:is(div) .is-disabled .pika-button {
  pointer-events: none;
  cursor: default;
  color: var(--color-base-content);
  opacity: 0.3;
}

.pika-single:is(div) .is-outside-current-month .pika-button {
  color: var(--color-base-content);
  opacity: 0.3;
}

.pika-single:is(div) .is-selection-disabled {
  pointer-events: none;
  cursor: default;
}

.pika-single:is(div) .pika-button:hover, .pika-single:is(div) .pika-row.pick-whole-week:hover .pika-button {
  color: var(--color-base-content);
  background-color: var(--color-base-200);
  border-radius: var(--radius-field);
}

.pika-single:is(div) .pika-table abbr {
  text-decoration: none;
  font-weight: normal;
}

.range {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  webkit-appearance: none;
  --range-thumb: var(--color-base-100);
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
  --range-progress: currentColor;
  --range-fill: 1;
  --range-p: 0.25rem;
  --range-bg: color-mix(in oklab, currentColor 10%, #0000);
  cursor: pointer;
  overflow: hidden;
  background-color: transparent;
  vertical-align: middle;
  width: clamp(3rem, 20rem, 100%);
  --radius-selector-max: calc(
    var(--radius-selector) + var(--radius-selector) + var(--radius-selector)
  );
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  border: none;
  height: var(--range-thumb-size);
}

[dir="rtl"] .range {
  --range-dir: -1;
}

.range:focus {
  outline: none;
}

.range:focus-visible {
  outline: 2px solid;
  outline-offset: 2px;
}

.range::-webkit-slider-runnable-track {
  width: 100%;
  background-color: var(--range-bg);
  border-radius: var(--radius-selector);
  height: calc(var(--range-thumb-size) * 0.5);
}

@media (forced-colors: active) {
  .range::-webkit-slider-runnable-track {
    border: 1px solid;
  }

  .range::-moz-range-track {
    border: 1px solid;
  }
}

.range::-webkit-slider-thumb {
  position: relative;
  box-sizing: border-box;
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  background-color: currentColor;
  height: var(--range-thumb-size);
  width: var(--range-thumb-size);
  border: var(--range-p) solid;
  -webkit-appearance: none;
          appearance: none;
  webkit-appearance: none;
  top: 50%;
  color: var(--range-progress);
  transform: translateY(-50%);
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
}

.range::-moz-range-track {
  width: 100%;
  background-color: var(--range-bg);
  border-radius: var(--radius-selector);
  height: calc(var(--range-thumb-size) * 0.5);
}

.range::-moz-range-thumb {
  position: relative;
  box-sizing: border-box;
  border-radius: calc(var(--radius-selector) + min(var(--range-p), var(--radius-selector-max)));
  background-color: currentColor;
  height: var(--range-thumb-size);
  width: var(--range-thumb-size);
  border: var(--range-p) solid;
  top: 50%;
  color: var(--range-progress);
  box-shadow: 0 -1px oklch(0% 0 0 / calc(var(--depth) * 0.1)) inset, 0 8px 0 -4px oklch(100% 0 0 / calc(var(--depth) * 0.1)) inset, 0 1px color-mix(in oklab, currentColor calc(var(--depth) * 10%), #0000), 0 0 0 2rem var(--range-thumb) inset, calc((var(--range-dir, 1) * -100rem) - (var(--range-dir, 1) * var(--range-thumb-size) / 2)) 0 0 calc(100rem * var(--range-fill));
}

.range:disabled {
  cursor: not-allowed;
  opacity: 30%;
}

.range-primary {
  color: var(--color-primary);
  --range-thumb: var(--color-primary-content);
}

.range-secondary {
  color: var(--color-secondary);
  --range-thumb: var(--color-secondary-content);
}

.range-accent {
  color: var(--color-accent);
  --range-thumb: var(--color-accent-content);
}

.range-neutral {
  color: var(--color-neutral);
  --range-thumb: var(--color-neutral-content);
}

.range-success {
  color: var(--color-success);
  --range-thumb: var(--color-success-content);
}

.range-warning {
  color: var(--color-warning);
  --range-thumb: var(--color-warning-content);
}

.range-info {
  color: var(--color-info);
  --range-thumb: var(--color-info-content);
}

.range-error {
  color: var(--color-error);
  --range-thumb: var(--color-error-content);
}

.range-xs {
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 4);
}

.range-sm {
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 5);
}

.range-md {
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 6);
}

.range-lg {
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 7);
}

.range-xl {
  --range-thumb-size: calc(var(--size-selector, 0.25rem) * 8);
}

.navbar {
  display: flex;
  width: 100%;
  align-items: center;
  padding: 0.5rem;
  min-height: 4rem;
}

.navbar-start {
  display: inline-flex;
  align-items: center;
  width: 50%;
  justify-content: flex-start;
}

.navbar-center {
  display: inline-flex;
  align-items: center;
  flex-shrink: 0;
}

.navbar-end {
  display: inline-flex;
  align-items: center;
  width: 50%;
  justify-content: flex-end;
}

.countdown {
  display: inline-flex;
}

.countdown.countdown {
  line-height: 1em;
}

.countdown > * {
  display: inline-block;
  overflow-y: hidden;
  height: 1em;
}

.countdown > *:before {
  position: relative;
  content: "00\A 01\A 02\A 03\A 04\A 05\A 06\A 07\A 08\A 09\A 10\A 11\A 12\A 13\A 14\A 15\A 16\A 17\A 18\A 19\A 20\A 21\A 22\A 23\A 24\A 25\A 26\A 27\A 28\A 29\A 30\A 31\A 32\A 33\A 34\A 35\A 36\A 37\A 38\A 39\A 40\A 41\A 42\A 43\A 44\A 45\A 46\A 47\A 48\A 49\A 50\A 51\A 52\A 53\A 54\A 55\A 56\A 57\A 58\A 59\A 60\A 61\A 62\A 63\A 64\A 65\A 66\A 67\A 68\A 69\A 70\A 71\A 72\A 73\A 74\A 75\A 76\A 77\A 78\A 79\A 80\A 81\A 82\A 83\A 84\A 85\A 86\A 87\A 88\A 89\A 90\A 91\A 92\A 93\A 94\A 95\A 96\A 97\A 98\A 99\A";
  white-space: pre;
  top: calc(var(--value) * -1em);
  text-align: center;
  transition: all 1s cubic-bezier(1, 0, 0, 1);
}

.alert {
  display: grid;
  align-items: center;
  gap: calc(0.25rem * 4);
  border-radius: var(--radius-box);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 3);
  color: var(--color-base-content);
  background-color: var(--alert-color, var(--color-base-200));
  justify-content: start;
  justify-items: start;
  grid-auto-flow: column;
  grid-template-columns: auto;
  text-align: start;
  border: var(--border) solid var(--color-base-200);
  font-size: 0.875rem;
  line-height: 1.25rem;
  background-size: auto, calc(var(--noise) * 100%);
  background-image: none, var(--fx-noise);
  box-shadow: 0 3px 0 -2px oklch(100% 0 0 / calc(var(--depth) * 0.08)) inset, 0 1px color-mix( in oklab, color-mix(in oklab, #000 20%, var(--alert-color, var(--color-base-200))) calc(var(--depth) * 20%), #0000 ), 0 4px 3px -2px oklch(0% 0 0 / calc(var(--depth) * 0.08));
}

.alert:has(:nth-child(2)) {
  grid-template-columns: auto minmax(auto, 1fr);
}

.alert.alert-outline {
  background-color: transparent;
  color: var(--alert-color);
  box-shadow: none;
  background-image: none;
}

.alert.alert-dash {
  background-color: transparent;
  color: var(--alert-color);
  border-style: dashed;
  box-shadow: none;
  background-image: none;
}

.alert.alert-soft {
  color: var(--alert-color, var(--color-base-content));
  background: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 8%, var(--color-base-100) );
  border-color: color-mix( in oklab, var(--alert-color, var(--color-base-content)) 10%, var(--color-base-100) );
  box-shadow: none;
  background-image: none;
}

.alert-info {
  border-color: var(--color-info);
  color: var(--color-info-content);
  --alert-color: var(--color-info);
}

.alert-success {
  border-color: var(--color-success);
  color: var(--color-success-content);
  --alert-color: var(--color-success);
}

.alert-warning {
  border-color: var(--color-warning);
  color: var(--color-warning-content);
  --alert-color: var(--color-warning);
}

.alert-error {
  border-color: var(--color-error);
  color: var(--color-error-content);
  --alert-color: var(--color-error);
}

.alert-vertical {
  justify-content: center;
  justify-items: center;
  grid-auto-flow: row;
  grid-template-columns: auto;
  text-align: center;
}

.alert-vertical:has(:nth-child(2)) {
  grid-template-columns: auto;
}

.alert-horizontal {
  justify-content: start;
  justify-items: start;
  grid-auto-flow: column;
  grid-template-columns: auto;
  text-align: start;
}

.alert-horizontal:has(:nth-child(2)) {
  grid-template-columns: auto minmax(auto, 1fr);
}

.chat {
  display: grid;
  -moz-column-gap: calc(0.25rem * 3);
       column-gap: calc(0.25rem * 3);
  padding-block: calc(0.25rem * 1);
}

.chat-bubble {
  position: relative;
  display: block;
  width: -moz-fit-content;
  width: fit-content;
  border-radius: var(--radius-field);
  background-color: var(--color-base-300);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 2);
  color: var(--color-base-content);
  grid-row-end: 3;
  min-height: 2rem;
  min-width: 2.5rem;
  max-width: 90%;
}

.chat-bubble:before {
  position: absolute;
  bottom: calc(0.25rem * 0);
  height: calc(0.25rem * 3);
  width: calc(0.25rem * 3);
  background-color: inherit;
  content: "";
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-image: var(--mask-chat);
          mask-image: var(--mask-chat);
  -webkit-mask-position: 0px -1px;
          mask-position: 0px -1px;
  -webkit-mask-size: 13px;
          mask-size: 13px;
}

.chat-bubble-primary {
  background-color: var(--color-primary);
  color: var(--color-primary-content);
}

.chat-bubble-secondary {
  background-color: var(--color-secondary);
  color: var(--color-secondary-content);
}

.chat-bubble-accent {
  background-color: var(--color-accent);
  color: var(--color-accent-content);
}

.chat-bubble-neutral {
  background-color: var(--color-neutral);
  color: var(--color-neutral-content);
}

.chat-bubble-info {
  background-color: var(--color-info);
  color: var(--color-info-content);
}

.chat-bubble-success {
  background-color: var(--color-success);
  color: var(--color-success-content);
}

.chat-bubble-warning {
  background-color: var(--color-warning);
  color: var(--color-warning-content);
}

.chat-bubble-error {
  background-color: var(--color-error);
  color: var(--color-error-content);
}

.chat-image {
  grid-row: span 2 / span 2;
  align-self: flex-end;
}

.chat-header {
  grid-row-start: 1;
  display: flex;
  gap: calc(0.25rem * 1);
  font-size: 0.6875rem;
}

.chat-footer {
  grid-row-start: 3;
  display: flex;
  gap: calc(0.25rem * 1);
  font-size: 0.6875rem;
}

.chat-start {
  place-items: start;
  grid-template-columns: auto 1fr;
}

.chat-start .chat-header {
  grid-column-start: 2;
}

.chat-start .chat-footer {
  grid-column-start: 2;
}

.chat-start .chat-image {
  grid-column-start: 1;
}

.chat-start .chat-bubble {
  grid-column-start: 2;
  border-end-start-radius: 0;
}

.chat-start .chat-bubble:before {
  transform: rotateY(0deg);
  inset-inline-start: -0.75rem;
}

[dir="rtl"] .chat-start .chat-bubble:before {
  transform: rotateY(180deg);
}

.chat-end {
  place-items: end;
  grid-template-columns: 1fr auto;
}

.chat-end .chat-header {
  grid-column-start: 1;
}

.chat-end .chat-footer {
  grid-column-start: 1;
}

.chat-end .chat-image {
  grid-column-start: 2;
}

.chat-end .chat-bubble {
  grid-column-start: 1;
  border-end-end-radius: 0;
}

.chat-end .chat-bubble:before {
  transform: rotateY(180deg);
  inset-inline-start: 100%;
}

[dir="rtl"] .chat-end .chat-bubble:before {
  transform: rotateY(0deg);
}

.mask {
  display: inline-block;
  vertical-align: middle;
  -webkit-mask-size: contain;
          mask-size: contain;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: center;
          mask-position: center;
}

.mask-half-1 {
  -webkit-mask-size: 200%;
          mask-size: 200%;
  -webkit-mask-position: left;
          mask-position: left;
}

.mask-half-1:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  -webkit-mask-position: right;
          mask-position: right;
}

.mask-half-2 {
  -webkit-mask-size: 200%;
          mask-size: 200%;
  -webkit-mask-position: right;
          mask-position: right;
}

.mask-half-2:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
  -webkit-mask-position: left;
          mask-position: left;
}

.mask-squircle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 0C20 0 0 20 0 100s20 100 100 100 100-20 100-100S180 0 100 0Z'/%3e%3c/svg%3e");
}

.mask-decagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 58.779 19.098 36.327 50v61.804l-36.327 50L96 200l-58.779-19.098-36.327-50V69.098l36.327-50z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-diamond {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m100 0 100 100-100 100L0 100z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-heart {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='185' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M100 184.606a15.384 15.384 0 0 1-8.653-2.678C53.565 156.28 37.205 138.695 28.182 127.7 8.952 104.264-.254 80.202.005 54.146.308 24.287 24.264 0 53.406 0c21.192 0 35.869 11.937 44.416 21.879a2.884 2.884 0 0 0 4.356 0C110.725 11.927 125.402 0 146.594 0c29.142 0 53.098 24.287 53.4 54.151.26 26.061-8.956 50.122-28.176 73.554-9.023 10.994-25.383 28.58-63.165 54.228a15.384 15.384 0 0 1-8.653 2.673Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-hexagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='182' height='201' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M.3 65.486c0-9.196 6.687-20.063 14.211-25.078l61.86-35.946c8.36-5.016 20.899-5.016 29.258 0l61.86 35.946c8.36 5.015 14.211 15.882 14.211 25.078v71.055c0 9.196-6.687 20.063-14.211 25.079l-61.86 35.945c-8.36 4.18-20.899 4.18-29.258 0L14.51 161.62C6.151 157.44.3 145.737.3 136.54V65.486Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-hexagon-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='182' xmlns='http://www.w3.org/2000/svg'%3e%3cpath d='M64.786 181.4c-9.196 0-20.063-6.687-25.079-14.21L3.762 105.33c-5.016-8.36-5.016-20.9 0-29.259l35.945-61.86C44.723 5.851 55.59 0 64.786 0h71.055c9.196 0 20.063 6.688 25.079 14.211l35.945 61.86c4.18 8.36 4.18 20.899 0 29.258l-35.945 61.86c-4.18 8.36-15.883 14.211-25.079 14.211H64.786Z' fill='black' fill-rule='nonzero'/%3e%3c/svg%3e");
}

.mask-circle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='200' height='200' xmlns='http://www.w3.org/2000/svg'%3e%3ccircle fill='black' cx='100' cy='100' r='100' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-pentagon {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='181' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 0 95.106 69.098-36.327 111.804H37.22L.894 69.098z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-star {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 137.263-58.779 42.024 22.163-68.389L.894 68.481l72.476-.243L96 0l22.63 68.238 72.476.243-58.49 42.417 22.163 68.389z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-star-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='192' height='180' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m96 153.044-58.779 26.243 7.02-63.513L.894 68.481l63.117-13.01L96 0l31.989 55.472 63.117 13.01-43.347 47.292 7.02 63.513z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='174' height='149' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 148.476-86.603.185L43.86 74.423 87 0l43.14 74.423 43.463 74.238z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-2 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='174' height='150' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m87 .738 86.603-.184-43.463 74.238L87 149.214 43.86 74.792.397.554z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-3 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='m149.369 87.107.185 86.603-74.239-43.463L.893 87.107l74.422-43.14L149.554.505z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.mask-triangle-4 {
  -webkit-mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
          mask-image: url("data:image/svg+xml,%3csvg width='150' height='174' xmlns='http://www.w3.org/2000/svg'%3e%3cpath fill='black' d='M.631 87.107.446.505l74.239 43.462 74.422 43.14-74.422 43.14L.446 173.71z' fill-rule='evenodd'/%3e%3c/svg%3e");
}

.fieldset {
  display: grid;
  gap: calc(0.25rem * 1.5);
  padding-block: calc(0.25rem * 1);
  font-size: 0.75rem;
  grid-template-columns: 1fr;
  grid-auto-rows: max-content;
}

.fieldset-legend {
  margin-bottom: calc(0.25rem * -1);
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 2);
  color: var(--color-base-content);
  font-weight: 600;
}

.fieldset-label {
  display: flex;
  align-items: center;
  gap: calc(0.25rem * 1.5);
  color: color-mix(in oklab, var(--color-base-content) 60%, transparent);
}

.fieldset-label:has(input) {
  cursor: pointer;
}

.modal {
  pointer-events: none;
  visibility: hidden;
  position: fixed;
  inset: calc(0.25rem * 0);
  margin: calc(0.25rem * 0);
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  align-items: center;
  justify-items: center;
  background-color: transparent;
  padding: calc(0.25rem * 0);
  color: inherit;
  overflow-x: hidden;
  transition: transform 0.3s ease-out, visibility 0.3s allow-discrete, background-color 0.3s ease-out, opacity 0.1s ease-out;
  overflow-y: hidden;
  overscroll-behavior: contain;
  z-index: 999;
}

.modal::backdrop {
  display: none;
}

.modal.modal-open, .modal[open], .modal:target {
  background-color: oklch(0% 0 0/ 0.4);
  transition: transform 0.3s ease-out, background-color 0.3s ease-out, opacity 0.1s ease-out;
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
}

.modal.modal-open .modal-box, .modal[open] .modal-box, .modal:target .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}

@starting-style {
  .modal.modal-open, .modal[open], .modal:target {
    visibility: hidden;
    opacity: 0%;
  }
}

.modal-action {
  margin-top: calc(0.25rem * 6);
  display: flex;
  justify-content: flex-end;
  gap: calc(0.25rem * 2);
}

.modal-toggle {
  position: fixed;
  height: calc(0.25rem * 0);
  width: calc(0.25rem * 0);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  opacity: 0%;
}

.modal-toggle:checked + .modal {
  pointer-events: auto;
  visibility: visible;
  opacity: 100%;
  background-color: oklch(0% 0 0/ 0.4);
}

.modal-toggle:checked + .modal .modal-box {
  translate: 0 0;
  scale: 1;
  opacity: 1;
}

@starting-style {
  .modal-toggle:checked + .modal {
    visibility: hidden;
    opacity: 0%;
  }
}

.modal-backdrop {
  grid-column-start: 1;
  grid-row-start: 1;
  display: grid;
  align-self: stretch;
  justify-self: stretch;
  color: transparent;
  z-index: -1;
}

.modal-backdrop button {
  cursor: pointer;
}

.modal-box {
  grid-column-start: 1;
  grid-row-start: 1;
  max-height: 100vh;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  background-color: var(--color-base-100);
  padding: calc(0.25rem * 6);
  transition: translate 0.3s ease-out, scale 0.3s ease-out, opacity 0.2s ease-out 0.05s, box-shadow 0.3s ease-out;
  border-top-left-radius: var(--modal-tl, var(--radius-box));
  border-top-right-radius: var(--modal-tr, var(--radius-box));
  border-bottom-left-radius: var(--modal-bl, var(--radius-box));
  border-bottom-right-radius: var(--modal-br, var(--radius-box));
  scale: 95%;
  opacity: 0;
  box-shadow: oklch(0% 0 0/ 0.25) 0px 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
}

.modal-top {
  place-items: start;
}

.modal-top :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 -100%;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}

.modal-middle {
  place-items: center;
}

.modal-middle :where(.modal-box) {
  height: auto;
  width: calc(11/12 * 100%);
  max-width: 32rem;
  max-height: calc(100vh - 5em);
  translate: 0 2%;
  scale: 98%;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: var(--radius-box);
  --modal-br: var(--radius-box);
}

.modal-bottom {
  place-items: end;
}

.modal-bottom :where(.modal-box) {
  height: auto;
  width: 100%;
  max-width: none;
  max-height: calc(100vh - 5em);
  translate: 0 100%;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: 0;
}

.modal-start {
  place-items: start;
}

.modal-start :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: -100% 0;
  scale: 1;
  --modal-tl: 0;
  --modal-tr: var(--radius-box);
  --modal-bl: 0;
  --modal-br: var(--radius-box);
}

.modal-end {
  place-items: end;
}

.modal-end :where(.modal-box) {
  height: 100vh;
  max-height: none;
  width: auto;
  max-width: none;
  translate: 100% 0;
  scale: 1;
  --modal-tl: var(--radius-box);
  --modal-tr: 0;
  --modal-bl: var(--radius-box);
  --modal-br: 0;
}

.carousel {
  display: inline-flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  scroll-behavior: smooth;
  scrollbar-width: none;
}

.carousel::-webkit-scrollbar {
  display: none;
}

.carousel-vertical {
  flex-direction: column;
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
}

.carousel-horizontal {
  flex-direction: row;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
}

.carousel-item {
  box-sizing: content-box;
  display: flex;
  flex: none;
  scroll-snap-align: start;
}

.carousel-start .carousel-item {
  scroll-snap-align: start;
}

.carousel-center .carousel-item {
  scroll-snap-align: center;
}

.carousel-end .carousel-item {
  scroll-snap-align: end;
}

.tooltip {
  position: relative;
  display: inline-block;
  --tt-bg: var(--color-neutral);
  --tt-off: calc(100% + 0.5rem);
  --tt-tail: calc(100% + 1px + 0.25rem);
}

.tooltip > :where(.tooltip-content), .tooltip[data-tip]:before {
  position: absolute;
  max-width: 20rem;
  border-radius: var(--radius-field);
  padding-inline: calc(0.25rem * 2);
  padding-block: calc(0.25rem * 1);
  text-align: center;
  white-space: normal;
  color: var(--color-neutral-content);
  opacity: 0%;
  font-size: 0.875rem;
  line-height: 1.25em;
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
  background-color: var(--tt-bg);
  width: -moz-max-content;
  width: max-content;
  pointer-events: none;
  z-index: 1;
  --tw-content: attr(data-tip);
  content: var(--tw-content);
}

.tooltip:after {
  position: absolute;
  opacity: 0%;
  background-color: var(--tt-bg);
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 75ms;
  content: "";
  pointer-events: none;
  width: 0.625rem;
  height: 0.25rem;
  display: block;
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-position: -1px 0;
          mask-position: -1px 0;
  --mask-tooltip: url("data:image/svg+xml,%3Csvg width='10' height='4' viewBox='0 0 8 4' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M0.500009 1C3.5 1 3.00001 4 5.00001 4C7 4 6.5 1 9.5 1C10 1 10 0.499897 10 0H0C-1.99338e-08 0.5 0 1 0.500009 1Z' fill='black'/%3E%3C/svg%3E%0A");
  -webkit-mask-image: var(--mask-tooltip);
          mask-image: var(--mask-tooltip);
}

.tooltip.tooltip-open > .tooltip-content, .tooltip.tooltip-open[data-tip]:before, .tooltip.tooltip-open:after, .tooltip[data-tip]:hover > .tooltip-content, .tooltip[data-tip]:hover[data-tip]:before, .tooltip[data-tip]:hover:after, .tooltip:hover > .tooltip-content, .tooltip:hover[data-tip]:before, .tooltip:hover:after, .tooltip:has(:focus-visible) > .tooltip-content, .tooltip:has(:focus-visible)[data-tip]:before, .tooltip:has(:focus-visible):after {
  opacity: 100%;
  --tt-pos: 0rem;
  transition: opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0s, transform 0.2s cubic-bezier(0.4, 0, 0.2, 1) 0ms;
}

.tooltip > .tooltip-content, .tooltip[data-tip]:before, .tooltip-top > .tooltip-content, .tooltip-top[data-tip]:before {
  transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
  inset: auto auto var(--tt-off) 50%;
}

.tooltip:after, .tooltip-top:after {
  transform: translateX(-50%) translateY(var(--tt-pos, 0.25rem));
  inset: auto auto var(--tt-tail) 50%;
}

.tooltip-bottom > .tooltip-content, .tooltip-bottom[data-tip]:before {
  transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem));
  inset: var(--tt-off) auto auto 50%;
}

.tooltip-bottom:after {
  transform: translateX(-50%) translateY(var(--tt-pos, -0.25rem)) rotate(180deg);
  inset: var(--tt-tail) auto auto 50%;
}

.tooltip-left > .tooltip-content, .tooltip-left[data-tip]:before {
  transform: translateX(calc(var(--tt-pos, 0.25rem) - 0.25rem)) translateY(-50%);
  inset: 50% var(--tt-off) auto auto;
}

.tooltip-left:after {
  transform: translateX(var(--tt-pos, 0.25rem)) translateY(-50%) rotate(-90deg);
  inset: 50% calc(var(--tt-tail) + 1px) auto auto;
}

.tooltip-right > .tooltip-content, .tooltip-right[data-tip]:before {
  transform: translateX(calc(var(--tt-pos, -0.25rem) + 0.25rem)) translateY(-50%);
  inset: 50% auto auto var(--tt-off);
}

.tooltip-right:after {
  transform: translateX(var(--tt-pos, -0.25rem)) translateY(-50%) rotate(90deg);
  inset: 50% auto auto calc(var(--tt-tail) + 1px);
}

.tooltip-primary {
  --tt-bg: var(--color-primary);
}

.tooltip-primary > .tooltip-content, .tooltip-primary[data-tip]:before {
  color: var(--color-primary-content);
}

.tooltip-secondary {
  --tt-bg: var(--color-secondary);
}

.tooltip-secondary > .tooltip-content, .tooltip-secondary[data-tip]:before {
  color: var(--color-secondary-content);
}

.tooltip-accent {
  --tt-bg: var(--color-accent);
}

.tooltip-accent > .tooltip-content, .tooltip-accent[data-tip]:before {
  color: var(--color-accent-content);
}

.tooltip-info {
  --tt-bg: var(--color-info);
}

.tooltip-info > .tooltip-content, .tooltip-info[data-tip]:before {
  color: var(--color-info-content);
}

.tooltip-success {
  --tt-bg: var(--color-success);
}

.tooltip-success > .tooltip-content, .tooltip-success[data-tip]:before {
  color: var(--color-success-content);
}

.tooltip-warning {
  --tt-bg: var(--color-warning);
}

.tooltip-warning > .tooltip-content, .tooltip-warning[data-tip]:before {
  color: var(--color-warning-content);
}

.tooltip-error {
  --tt-bg: var(--color-error);
}

.tooltip-error > .tooltip-content, .tooltip-error[data-tip]:before {
  color: var(--color-error-content);
}

.timeline {
  position: relative;
  display: flex;
}

.timeline > li {
  position: relative;
  display: grid;
  flex-shrink: 0;
  align-items: center;
  grid-template-rows: var(--timeline-row-start, minmax(0, 1fr)) auto var( --timeline-row-end, minmax(0, 1fr) );
  grid-template-columns: var(--timeline-col-start, minmax(0, 1fr)) auto var( --timeline-col-end, minmax(0, 1fr) );
}

.timeline > li > hr {
  border: none;
  width: 100%;
}

.timeline > li > hr:first-child {
  grid-column-start: 1;
  grid-row-start: 2;
}

.timeline > li > hr:last-child {
  grid-column-start: 3;
  grid-column-end: none;
  grid-row-start: 2;
  grid-row-end: auto;
}

@media print {
  .timeline > li > hr {
    border: 0.1px solid var(--color-base-300);
  }
}

.timeline :where(hr) {
  height: calc(0.25rem * 1);
  background-color: var(--color-base-300);
}

.timeline:has(.timeline-middle hr):first-child {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  border-start-end-radius: var(--radius-selector);
  border-end-end-radius: var(--radius-selector);
}

.timeline:has(.timeline-middle hr):last-child {
  border-start-start-radius: var(--radius-selector);
  border-end-start-radius: var(--radius-selector);
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.timeline:not(:has(.timeline-middle)) :first-child hr:last-child {
  border-start-start-radius: var(--radius-selector);
  border-end-start-radius: var(--radius-selector);
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.timeline:not(:has(.timeline-middle)) :last-child hr:first-child {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  border-start-end-radius: var(--radius-selector);
  border-end-end-radius: var(--radius-selector);
}

.timeline-box {
  border: var(--border) solid;
  border-radius: var(--radius-box);
  border-color: var(--color-base-300);
  background-color: var(--color-base-100);
  padding-inline: calc(0.25rem * 4);
  padding-block: calc(0.25rem * 2);
  font-size: 0.75rem;
  box-shadow: 0 1px 2px 0 oklch(0% 0 0/0.05);
}

.timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 2;
  margin: calc(0.25rem * 1);
  align-self: flex-end;
  justify-self: center;
}

.timeline-middle {
  grid-column-start: 2;
  grid-row-start: 2;
}

.timeline-end {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  margin: calc(0.25rem * 1);
  align-self: flex-start;
  justify-self: center;
}

.timeline-compact {
  --timeline-row-start: 0;
}

.timeline-compact .timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  align-self: flex-start;
  justify-self: center;
}

.timeline-compact li:has(.timeline-start) .timeline-end {
  grid-column-start: none;
  grid-row-start: auto;
}

.timeline-compact.timeline-vertical > li {
  --timeline-col-start: 0;
}

.timeline-compact.timeline-vertical .timeline-start {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: flex-start;
}

.timeline-compact.timeline-vertical li:has(.timeline-start) .timeline-end {
  grid-column-start: auto;
  grid-row-start: none;
}

.timeline-snap-icon > li {
  --timeline-col-start: 0.5rem;
  --timeline-row-start: minmax(0, 1fr);
}

.timeline-vertical {
  flex-direction: column;
}

.timeline-vertical > li {
  justify-items: center;
  --timeline-row-start: minmax(0, 1fr);
  --timeline-row-end: minmax(0, 1fr);
}

.timeline-vertical > li > hr {
  height: 100%;
  width: calc(0.25rem * 1);
}

.timeline-vertical > li > hr:first-child {
  grid-column-start: 2;
  grid-row-start: 1;
}

.timeline-vertical > li > hr:last-child {
  grid-column-start: 2;
  grid-column-end: auto;
  grid-row-start: 3;
  grid-row-end: none;
}

.timeline-vertical .timeline-start {
  grid-column-start: 1;
  grid-column-end: 2;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: flex-end;
}

.timeline-vertical .timeline-end {
  grid-column-start: 3;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 4;
  align-self: center;
  justify-self: flex-start;
}

.timeline-vertical:has(.timeline-middle) > li > hr:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: var(--radius-selector);
  border-bottom-left-radius: var(--radius-selector);
}

.timeline-vertical:has(.timeline-middle) > li > hr:last-child {
  border-top-left-radius: var(--radius-selector);
  border-top-right-radius: var(--radius-selector);
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.timeline-vertical:not(:has(.timeline-middle)) :first-child > hr:last-child {
  border-top-left-radius: var(--radius-selector);
  border-top-right-radius: var(--radius-selector);
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
}

.timeline-vertical:not(:has(.timeline-middle)) :last-child > hr:first-child {
  border-top-left-radius: 0;
  border-top-right-radius: 0;
  border-bottom-right-radius: var(--radius-selector);
  border-bottom-left-radius: var(--radius-selector);
}

.timeline-vertical.timeline-snap-icon > li {
  --timeline-col-start: minmax(0, 1fr);
  --timeline-row-start: 0.5rem;
}

.timeline-horizontal {
  flex-direction: row;
}

.timeline-horizontal > li {
  align-items: center;
}

.timeline-horizontal > li > hr {
  height: calc(0.25rem * 1);
  width: 100%;
}

.timeline-horizontal > li > hr:first-child {
  grid-column-start: 1;
  grid-row-start: 2;
}

.timeline-horizontal > li > hr:last-child {
  grid-column-start: 3;
  grid-column-end: none;
  grid-row-start: 2;
  grid-row-end: auto;
}

.timeline-horizontal .timeline-start {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 1;
  grid-row-end: 2;
  align-self: flex-end;
  justify-self: center;
}

.timeline-horizontal .timeline-end {
  grid-column-start: 1;
  grid-column-end: 4;
  grid-row-start: 3;
  grid-row-end: 4;
  align-self: flex-start;
  justify-self: center;
}

.timeline-horizontal:has(.timeline-middle) > li > hr:first-child {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  border-start-end-radius: var(--radius-selector);
  border-end-end-radius: var(--radius-selector);
}

.timeline-horizontal:has(.timeline-middle) > li > hr:last-child {
  border-start-start-radius: var(--radius-selector);
  border-end-start-radius: var(--radius-selector);
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.timeline-horizontal:not(:has(.timeline-middle)) :first-child > hr:last-child {
  border-start-start-radius: var(--radius-selector);
  border-end-start-radius: var(--radius-selector);
  border-start-end-radius: 0;
  border-end-end-radius: 0;
}

.timeline-horizontal:not(:has(.timeline-middle)) :last-child > hr:first-child {
  border-start-start-radius: 0;
  border-end-start-radius: 0;
  border-start-end-radius: var(--radius-selector);
  border-end-end-radius: var(--radius-selector);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

.not-sr-only {
  position: static;
  width: auto;
  height: auto;
  padding: 0;
  margin: 0;
  overflow: visible;
  clip: auto;
  white-space: normal;
}

.pointer-events-none {
  pointer-events: none;
}

.pointer-events-auto {
  pointer-events: auto;
}

.\!visible {
  visibility: visible !important;
}

.visible {
  visibility: visible;
}

.invisible {
  visibility: hidden;
}

.collapse {
  visibility: collapse;
}

.static {
  position: static;
}

.fixed {
  position: fixed;
}

.absolute {
  position: absolute;
}

.relative {
  position: relative;
}

.sticky {
  position: sticky;
}

.-inset-1 {
  inset: -0.25rem;
}

.bottom-5 {
  bottom: 1.25rem;
}

.end-1 {
  inset-inline-end: 0.25rem;
}

.right-2 {
  right: 0.5rem;
}

.right-5 {
  right: 1.25rem;
}

.top-14 {
  top: 3.5rem;
}

.top-2 {
  top: 0.5rem;
}

.top-3 {
  top: 0.75rem;
}

.top-5 {
  top: 1.25rem;
}

.isolate {
  isolation: isolate;
}

.isolation-auto {
  isolation: auto;
}

.float-start {
  float: inline-start;
}

.float-end {
  float: inline-end;
}

.float-right {
  float: right;
}

.float-left {
  float: left;
}

.float-none {
  float: none;
}

.clear-start {
  clear: inline-start;
}

.clear-end {
  clear: inline-end;
}

.clear-left {
  clear: left;
}

.clear-right {
  clear: right;
}

.clear-both {
  clear: both;
}

.clear-none {
  clear: none;
}

.mx-auto {
  margin-left: auto;
  margin-right: auto;
}

.ml-\[1400px\] {
  margin-left: 1400px;
}

.ml-\[70px\] {
  margin-left: 70px;
}

.mt-2 {
  margin-top: 0.5rem;
}

.mt-\[48px\] {
  margin-top: 48px;
}

.box-border {
  box-sizing: border-box;
}

.box-content {
  box-sizing: content-box;
}

.line-clamp-none {
  overflow: visible;
  display: block;
  -webkit-box-orient: horizontal;
  -webkit-line-clamp: none;
}

.block {
  display: block;
}

.inline-block {
  display: inline-block;
}

.inline {
  display: inline;
}

.flex {
  display: flex;
}

.inline-flex {
  display: inline-flex;
}

.table {
  display: table;
}

.inline-table {
  display: inline-table;
}

.table-caption {
  display: table-caption;
}

.table-cell {
  display: table-cell;
}

.table-column {
  display: table-column;
}

.table-column-group {
  display: table-column-group;
}

.table-footer-group {
  display: table-footer-group;
}

.table-header-group {
  display: table-header-group;
}

.table-row-group {
  display: table-row-group;
}

.table-row {
  display: table-row;
}

.flow-root {
  display: flow-root;
}

.grid {
  display: grid;
}

.inline-grid {
  display: inline-grid;
}

.contents {
  display: contents;
}

.list-item {
  display: list-item;
}

.hidden {
  display: none;
}

.size-4 {
  width: 1rem;
  height: 1rem;
}

.min-h-screen {
  min-height: 100vh;
}

.w-\[this-is\\\\\] {
  width: this-is\\;
}

.w-\[this-is\] {
  width: this-is;
}

.w-\[weird-and-invalid\] {
  width: weird-and-invalid;
}

.w-full {
  width: 100%;
}

.max-w-\[476px\] {
  max-width: 476px;
}

.flex-shrink {
  flex-shrink: 1;
}

.shrink {
  flex-shrink: 1;
}

.flex-grow {
  flex-grow: 1;
}

.grow {
  flex-grow: 1;
}

.table-auto {
  table-layout: auto;
}

.table-fixed {
  table-layout: fixed;
}

.caption-top {
  caption-side: top;
}

.caption-bottom {
  caption-side: bottom;
}

.border-collapse {
  border-collapse: collapse;
}

.border-separate {
  border-collapse: separate;
}

.\!transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)) !important;
}

.transform {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-cpu {
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-gpu {
  transform: translate3d(var(--tw-translate-x), var(--tw-translate-y), 0) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.transform-none {
  transform: none;
}

.touch-auto {
  touch-action: auto;
}

.touch-none {
  touch-action: none;
}

.touch-pan-x {
  --tw-pan-x: pan-x;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-left {
  --tw-pan-x: pan-left;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-right {
  --tw-pan-x: pan-right;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-y {
  --tw-pan-y: pan-y;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-up {
  --tw-pan-y: pan-up;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pan-down {
  --tw-pan-y: pan-down;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-pinch-zoom {
  --tw-pinch-zoom: pinch-zoom;
  touch-action: var(--tw-pan-x) var(--tw-pan-y) var(--tw-pinch-zoom);
}

.touch-manipulation {
  touch-action: manipulation;
}

.select-none {
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}

.select-text {
  -webkit-user-select: text;
     -moz-user-select: text;
          user-select: text;
}

.select-all {
  -webkit-user-select: all;
     -moz-user-select: all;
          user-select: all;
}

.select-auto {
  -webkit-user-select: auto;
     -moz-user-select: auto;
          user-select: auto;
}

.resize-none {
  resize: none;
}

.resize-y {
  resize: vertical;
}

.resize-x {
  resize: horizontal;
}

.resize {
  resize: both;
}

.snap-none {
  scroll-snap-type: none;
}

.snap-x {
  scroll-snap-type: x var(--tw-scroll-snap-strictness);
}

.snap-y {
  scroll-snap-type: y var(--tw-scroll-snap-strictness);
}

.snap-both {
  scroll-snap-type: both var(--tw-scroll-snap-strictness);
}

.snap-mandatory {
  --tw-scroll-snap-strictness: mandatory;
}

.snap-proximity {
  --tw-scroll-snap-strictness: proximity;
}

.snap-start {
  scroll-snap-align: start;
}

.snap-end {
  scroll-snap-align: end;
}

.snap-center {
  scroll-snap-align: center;
}

.snap-align-none {
  scroll-snap-align: none;
}

.snap-normal {
  scroll-snap-stop: normal;
}

.snap-always {
  scroll-snap-stop: always;
}

.list-inside {
  list-style-position: inside;
}

.list-outside {
  list-style-position: outside;
}

.appearance-none {
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
}

.appearance-auto {
  -webkit-appearance: auto;
     -moz-appearance: auto;
          appearance: auto;
}

.break-before-auto {
  -moz-column-break-before: auto;
       break-before: auto;
}

.break-before-avoid {
  -moz-column-break-before: avoid;
       break-before: avoid;
}

.break-before-all {
  -moz-column-break-before: all;
       break-before: all;
}

.break-before-avoid-page {
  -moz-column-break-before: avoid;
       break-before: avoid-page;
}

.break-before-page {
  -moz-column-break-before: page;
       break-before: page;
}

.break-before-left {
  -moz-column-break-before: left;
       break-before: left;
}

.break-before-right {
  -moz-column-break-before: right;
       break-before: right;
}

.break-before-column {
  -moz-column-break-before: column;
       break-before: column;
}

.break-inside-auto {
  -moz-column-break-inside: auto;
       break-inside: auto;
}

.break-inside-avoid {
  -moz-column-break-inside: avoid;
       break-inside: avoid;
}

.break-inside-avoid-page {
  break-inside: avoid-page;
}

.break-inside-avoid-column {
  -moz-column-break-inside: avoid;
       break-inside: avoid-column;
}

.break-after-auto {
  -moz-column-break-after: auto;
       break-after: auto;
}

.break-after-avoid {
  -moz-column-break-after: avoid;
       break-after: avoid;
}

.break-after-all {
  -moz-column-break-after: all;
       break-after: all;
}

.break-after-avoid-page {
  -moz-column-break-after: avoid;
       break-after: avoid-page;
}

.break-after-page {
  -moz-column-break-after: page;
       break-after: page;
}

.break-after-left {
  -moz-column-break-after: left;
       break-after: left;
}

.break-after-right {
  -moz-column-break-after: right;
       break-after: right;
}

.break-after-column {
  -moz-column-break-after: column;
       break-after: column;
}

.grid-flow-row {
  grid-auto-flow: row;
}

.grid-flow-col {
  grid-auto-flow: column;
}

.grid-flow-dense {
  grid-auto-flow: dense;
}

.grid-flow-row-dense {
  grid-auto-flow: row dense;
}

.grid-flow-col-dense {
  grid-auto-flow: column dense;
}

.flex-row {
  flex-direction: row;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col {
  flex-direction: column;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.place-content-center {
  place-content: center;
}

.place-content-start {
  place-content: start;
}

.place-content-end {
  place-content: end;
}

.place-content-between {
  place-content: space-between;
}

.place-content-around {
  place-content: space-around;
}

.place-content-evenly {
  place-content: space-evenly;
}

.place-content-baseline {
  place-content: baseline;
}

.place-content-stretch {
  place-content: stretch;
}

.place-items-start {
  place-items: start;
}

.place-items-end {
  place-items: end;
}

.place-items-center {
  place-items: center;
}

.place-items-baseline {
  place-items: baseline;
}

.place-items-stretch {
  place-items: stretch;
}

.content-normal {
  align-content: normal;
}

.content-center {
  align-content: center;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-between {
  align-content: space-between;
}

.content-around {
  align-content: space-around;
}

.content-evenly {
  align-content: space-evenly;
}

.content-baseline {
  align-content: baseline;
}

.content-stretch {
  align-content: stretch;
}

.items-start {
  align-items: flex-start;
}

.items-end {
  align-items: flex-end;
}

.items-center {
  align-items: center;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.justify-normal {
  justify-content: normal;
}

.justify-start {
  justify-content: flex-start;
}

.justify-end {
  justify-content: flex-end;
}

.justify-center {
  justify-content: center;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.justify-stretch {
  justify-content: stretch;
}

.justify-items-start {
  justify-items: start;
}

.justify-items-end {
  justify-items: end;
}

.justify-items-center {
  justify-items: center;
}

.justify-items-stretch {
  justify-items: stretch;
}

.gap-2 {
  gap: 0.5rem;
}

.gap-4 {
  gap: 1rem;
}

.space-x-2 > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 0;
  margin-right: calc(0.5rem * var(--tw-space-x-reverse));
  margin-left: calc(0.5rem * calc(1 - var(--tw-space-x-reverse)));
}

.space-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-y-reverse: 1;
}

.space-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-space-x-reverse: 1;
}

.divide-x > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 0;
  border-right-width: calc(1px * var(--tw-divide-x-reverse));
  border-left-width: calc(1px * calc(1 - var(--tw-divide-x-reverse)));
}

.divide-y > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 0;
  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));
}

.divide-y-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-y-reverse: 1;
}

.divide-x-reverse > :not([hidden]) ~ :not([hidden]) {
  --tw-divide-x-reverse: 1;
}

.divide-solid > :not([hidden]) ~ :not([hidden]) {
  border-style: solid;
}

.divide-dashed > :not([hidden]) ~ :not([hidden]) {
  border-style: dashed;
}

.divide-dotted > :not([hidden]) ~ :not([hidden]) {
  border-style: dotted;
}

.divide-double > :not([hidden]) ~ :not([hidden]) {
  border-style: double;
}

.divide-none > :not([hidden]) ~ :not([hidden]) {
  border-style: none;
}

.place-self-auto {
  place-self: auto;
}

.place-self-start {
  place-self: start;
}

.place-self-end {
  place-self: end;
}

.place-self-center {
  place-self: center;
}

.place-self-stretch {
  place-self: stretch;
}

.self-auto {
  align-self: auto;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-center {
  align-self: center;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

.justify-self-auto {
  justify-self: auto;
}

.justify-self-start {
  justify-self: start;
}

.justify-self-end {
  justify-self: end;
}

.justify-self-center {
  justify-self: center;
}

.justify-self-stretch {
  justify-self: stretch;
}

.overflow-auto {
  overflow: auto;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-clip {
  overflow: clip;
}

.overflow-visible {
  overflow: visible;
}

.overflow-scroll {
  overflow: scroll;
}

.overflow-x-auto {
  overflow-x: auto;
}

.overflow-y-auto {
  overflow-y: auto;
}

.overflow-x-hidden {
  overflow-x: hidden;
}

.overflow-y-hidden {
  overflow-y: hidden;
}

.overflow-x-clip {
  overflow-x: clip;
}

.overflow-y-clip {
  overflow-y: clip;
}

.overflow-x-visible {
  overflow-x: visible;
}

.overflow-y-visible {
  overflow-y: visible;
}

.overflow-x-scroll {
  overflow-x: scroll;
}

.overflow-y-scroll {
  overflow-y: scroll;
}

.overscroll-auto {
  overscroll-behavior: auto;
}

.overscroll-contain {
  overscroll-behavior: contain;
}

.overscroll-none {
  overscroll-behavior: none;
}

.overscroll-y-auto {
  overscroll-behavior-y: auto;
}

.overscroll-y-contain {
  overscroll-behavior-y: contain;
}

.overscroll-y-none {
  overscroll-behavior-y: none;
}

.overscroll-x-auto {
  overscroll-behavior-x: auto;
}

.overscroll-x-contain {
  overscroll-behavior-x: contain;
}

.overscroll-x-none {
  overscroll-behavior-x: none;
}

.scroll-auto {
  scroll-behavior: auto;
}

.scroll-smooth {
  scroll-behavior: smooth;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.overflow-ellipsis {
  text-overflow: ellipsis;
}

.text-ellipsis {
  text-overflow: ellipsis;
}

.text-clip {
  text-overflow: clip;
}

.hyphens-none {
  -webkit-hyphens: none;
          hyphens: none;
}

.hyphens-manual {
  -webkit-hyphens: manual;
          hyphens: manual;
}

.hyphens-auto {
  -webkit-hyphens: auto;
          hyphens: auto;
}

.whitespace-normal {
  white-space: normal;
}

.whitespace-nowrap {
  white-space: nowrap;
}

.whitespace-pre {
  white-space: pre;
}

.whitespace-pre-line {
  white-space: pre-line;
}

.whitespace-pre-wrap {
  white-space: pre-wrap;
}

.whitespace-break-spaces {
  white-space: break-spaces;
}

.text-wrap {
  text-wrap: wrap;
}

.text-nowrap {
  text-wrap: nowrap;
}

.text-balance {
  text-wrap: balance;
}

.text-pretty {
  text-wrap: pretty;
}

.break-normal {
  overflow-wrap: normal;
  word-break: normal;
}

.break-words {
  overflow-wrap: break-word;
}

.break-all {
  word-break: break-all;
}

.break-keep {
  word-break: keep-all;
}

.rounded {
  border-radius: 0.25rem;
}

.rounded-box {
  border-radius: var(--radius-box);
}

.rounded-field {
  border-radius: var(--radius-field);
}

.rounded-selector {
  border-radius: var(--radius-selector);
}

.rounded-b {
  border-bottom-right-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-b-box {
  border-bottom-right-radius: var(--radius-box);
  border-bottom-left-radius: var(--radius-box);
}

.rounded-b-field {
  border-bottom-right-radius: var(--radius-field);
  border-bottom-left-radius: var(--radius-field);
}

.rounded-b-selector {
  border-bottom-right-radius: var(--radius-selector);
  border-bottom-left-radius: var(--radius-selector);
}

.rounded-e {
  border-start-end-radius: 0.25rem;
  border-end-end-radius: 0.25rem;
}

.rounded-l {
  border-top-left-radius: 0.25rem;
  border-bottom-left-radius: 0.25rem;
}

.rounded-l-box {
  border-top-left-radius: var(--radius-box);
  border-bottom-left-radius: var(--radius-box);
}

.rounded-l-field {
  border-top-left-radius: var(--radius-field);
  border-bottom-left-radius: var(--radius-field);
}

.rounded-l-selector {
  border-top-left-radius: var(--radius-selector);
  border-bottom-left-radius: var(--radius-selector);
}

.rounded-r {
  border-top-right-radius: 0.25rem;
  border-bottom-right-radius: 0.25rem;
}

.rounded-r-box {
  border-top-right-radius: var(--radius-box);
  border-bottom-right-radius: var(--radius-box);
}

.rounded-r-field {
  border-top-right-radius: var(--radius-field);
  border-bottom-right-radius: var(--radius-field);
}

.rounded-r-selector {
  border-top-right-radius: var(--radius-selector);
  border-bottom-right-radius: var(--radius-selector);
}

.rounded-s {
  border-start-start-radius: 0.25rem;
  border-end-start-radius: 0.25rem;
}

.rounded-t {
  border-top-left-radius: 0.25rem;
  border-top-right-radius: 0.25rem;
}

.rounded-t-box {
  border-top-left-radius: var(--radius-box);
  border-top-right-radius: var(--radius-box);
}

.rounded-t-field {
  border-top-left-radius: var(--radius-field);
  border-top-right-radius: var(--radius-field);
}

.rounded-t-selector {
  border-top-left-radius: var(--radius-selector);
  border-top-right-radius: var(--radius-selector);
}

.rounded-bl {
  border-bottom-left-radius: 0.25rem;
}

.rounded-bl-box {
  border-bottom-left-radius: var(--radius-box);
}

.rounded-bl-field {
  border-bottom-left-radius: var(--radius-field);
}

.rounded-bl-selector {
  border-bottom-left-radius: var(--radius-selector);
}

.rounded-br {
  border-bottom-right-radius: 0.25rem;
}

.rounded-br-box {
  border-bottom-right-radius: var(--radius-box);
}

.rounded-br-field {
  border-bottom-right-radius: var(--radius-field);
}

.rounded-br-selector {
  border-bottom-right-radius: var(--radius-selector);
}

.rounded-ee {
  border-end-end-radius: 0.25rem;
}

.rounded-es {
  border-end-start-radius: 0.25rem;
}

.rounded-se {
  border-start-end-radius: 0.25rem;
}

.rounded-ss {
  border-start-start-radius: 0.25rem;
}

.rounded-tl {
  border-top-left-radius: 0.25rem;
}

.rounded-tl-box {
  border-top-left-radius: var(--radius-box);
}

.rounded-tl-field {
  border-top-left-radius: var(--radius-field);
}

.rounded-tl-selector {
  border-top-left-radius: var(--radius-selector);
}

.rounded-tr {
  border-top-right-radius: 0.25rem;
}

.rounded-tr-box {
  border-top-right-radius: var(--radius-box);
}

.rounded-tr-field {
  border-top-right-radius: var(--radius-field);
}

.rounded-tr-selector {
  border-top-right-radius: var(--radius-selector);
}

.border {
  border-width: 1px;
}

.border-x {
  border-left-width: 1px;
  border-right-width: 1px;
}

.border-y {
  border-top-width: 1px;
  border-bottom-width: 1px;
}

.border-b {
  border-bottom-width: 1px;
}

.border-e {
  border-inline-end-width: 1px;
}

.border-l {
  border-left-width: 1px;
}

.border-r {
  border-right-width: 1px;
}

.border-s {
  border-inline-start-width: 1px;
}

.border-t {
  border-top-width: 1px;
}

.border-solid {
  border-style: solid;
}

.border-dashed {
  border-style: dashed;
}

.border-dotted {
  border-style: dotted;
}

.border-double {
  border-style: double;
}

.border-hidden {
  border-style: hidden;
}

.border-none {
  border-style: none;
}

.bg-\[\#131537\] {
  --tw-bg-opacity: 1;
  background-color: rgb(19 21 55 / var(--tw-bg-opacity, 1));
}

.bg-\[rgb\(255\2c 0\2c 0\)\] {
  --tw-bg-opacity: 1;
  background-color: rgb(255 0 0 / var(--tw-bg-opacity, 1));
}

.decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.box-decoration-slice {
  -webkit-box-decoration-break: slice;
          box-decoration-break: slice;
}

.box-decoration-clone {
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.bg-fixed {
  background-attachment: fixed;
}

.bg-local {
  background-attachment: local;
}

.bg-scroll {
  background-attachment: scroll;
}

.bg-clip-border {
  background-clip: border-box;
}

.bg-clip-padding {
  background-clip: padding-box;
}

.bg-clip-content {
  background-clip: content-box;
}

.bg-clip-text {
  -webkit-background-clip: text;
          background-clip: text;
}

.bg-center {
  background-position: center;
}

.bg-repeat {
  background-repeat: repeat;
}

.bg-no-repeat {
  background-repeat: no-repeat;
}

.bg-repeat-x {
  background-repeat: repeat-x;
}

.bg-repeat-y {
  background-repeat: repeat-y;
}

.bg-repeat-round {
  background-repeat: round;
}

.bg-repeat-space {
  background-repeat: space;
}

.bg-origin-border {
  background-origin: border-box;
}

.bg-origin-padding {
  background-origin: padding-box;
}

.bg-origin-content {
  background-origin: content-box;
}

.object-contain {
  -o-object-fit: contain;
     object-fit: contain;
}

.object-cover {
  -o-object-fit: cover;
     object-fit: cover;
}

.object-fill {
  -o-object-fit: fill;
     object-fit: fill;
}

.object-none {
  -o-object-fit: none;
     object-fit: none;
}

.object-scale-down {
  -o-object-fit: scale-down;
     object-fit: scale-down;
}

.px-1 {
  padding-left: 0.25rem;
  padding-right: 0.25rem;
}

.px-1\.5 {
  padding-left: 0.375rem;
  padding-right: 0.375rem;
}

.px-5 {
  padding-left: 1.25rem;
  padding-right: 1.25rem;
}

.pt-8 {
  padding-top: 2rem;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.text-start {
  text-align: start;
}

.text-end {
  text-align: end;
}

.align-baseline {
  vertical-align: baseline;
}

.align-top {
  vertical-align: top;
}

.align-middle {
  vertical-align: middle;
}

.align-bottom {
  vertical-align: bottom;
}

.align-text-top {
  vertical-align: text-top;
}

.align-text-bottom {
  vertical-align: text-bottom;
}

.align-sub {
  vertical-align: sub;
}

.align-super {
  vertical-align: super;
}

.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}

.font-bold {
  font-weight: 700;
}

.uppercase {
  text-transform: uppercase;
}

.lowercase {
  text-transform: lowercase;
}

.capitalize {
  text-transform: capitalize;
}

.normal-case {
  text-transform: none;
}

.italic {
  font-style: italic;
}

.not-italic {
  font-style: normal;
}

.normal-nums {
  font-variant-numeric: normal;
}

.ordinal {
  --tw-ordinal: ordinal;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.slashed-zero {
  --tw-slashed-zero: slashed-zero;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.lining-nums {
  --tw-numeric-figure: lining-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.oldstyle-nums {
  --tw-numeric-figure: oldstyle-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.proportional-nums {
  --tw-numeric-spacing: proportional-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.tabular-nums {
  --tw-numeric-spacing: tabular-nums;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.diagonal-fractions {
  --tw-numeric-fraction: diagonal-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.stacked-fractions {
  --tw-numeric-fraction: stacked-fractions;
  font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction);
}

.text-\[\#336699\]\/\[\.35\] {
  color: rgb(51 102 153 / .35);
}

.text-\[\#3B4262\] {
  --tw-text-opacity: 1;
  color: rgb(59 66 98 / var(--tw-text-opacity, 1));
}

.text-\[\#fff\] {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.text-blue-500 {
  --tw-text-opacity: 1;
  color: rgb(59 130 246 / var(--tw-text-opacity, 1));
}

.text-white {
  --tw-text-opacity: 1;
  color: rgb(255 255 255 / var(--tw-text-opacity, 1));
}

.underline {
  text-decoration-line: underline;
}

.overline {
  text-decoration-line: overline;
}

.line-through {
  text-decoration-line: line-through;
}

.no-underline {
  text-decoration-line: none;
}

.decoration-solid {
  text-decoration-style: solid;
}

.decoration-double {
  text-decoration-style: double;
}

.decoration-dotted {
  text-decoration-style: dotted;
}

.decoration-dashed {
  text-decoration-style: dashed;
}

.decoration-wavy {
  text-decoration-style: wavy;
}

.antialiased {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

.subpixel-antialiased {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}

.bg-blend-normal {
  background-blend-mode: normal;
}

.bg-blend-multiply {
  background-blend-mode: multiply;
}

.bg-blend-screen {
  background-blend-mode: screen;
}

.bg-blend-overlay {
  background-blend-mode: overlay;
}

.bg-blend-darken {
  background-blend-mode: darken;
}

.bg-blend-lighten {
  background-blend-mode: lighten;
}

.bg-blend-color-dodge {
  background-blend-mode: color-dodge;
}

.bg-blend-color-burn {
  background-blend-mode: color-burn;
}

.bg-blend-hard-light {
  background-blend-mode: hard-light;
}

.bg-blend-soft-light {
  background-blend-mode: soft-light;
}

.bg-blend-difference {
  background-blend-mode: difference;
}

.bg-blend-exclusion {
  background-blend-mode: exclusion;
}

.bg-blend-hue {
  background-blend-mode: hue;
}

.bg-blend-saturation {
  background-blend-mode: saturation;
}

.bg-blend-color {
  background-blend-mode: color;
}

.bg-blend-luminosity {
  background-blend-mode: luminosity;
}

.mix-blend-normal {
  mix-blend-mode: normal;
}

.mix-blend-multiply {
  mix-blend-mode: multiply;
}

.mix-blend-screen {
  mix-blend-mode: screen;
}

.mix-blend-overlay {
  mix-blend-mode: overlay;
}

.mix-blend-darken {
  mix-blend-mode: darken;
}

.mix-blend-lighten {
  mix-blend-mode: lighten;
}

.mix-blend-color-dodge {
  mix-blend-mode: color-dodge;
}

.mix-blend-color-burn {
  mix-blend-mode: color-burn;
}

.mix-blend-hard-light {
  mix-blend-mode: hard-light;
}

.mix-blend-soft-light {
  mix-blend-mode: soft-light;
}

.mix-blend-difference {
  mix-blend-mode: difference;
}

.mix-blend-exclusion {
  mix-blend-mode: exclusion;
}

.mix-blend-hue {
  mix-blend-mode: hue;
}

.mix-blend-saturation {
  mix-blend-mode: saturation;
}

.mix-blend-color {
  mix-blend-mode: color;
}

.mix-blend-luminosity {
  mix-blend-mode: luminosity;
}

.mix-blend-plus-darker {
  mix-blend-mode: plus-darker;
}

.mix-blend-plus-lighter {
  mix-blend-mode: plus-lighter;
}

.\!shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1) !important;
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color) !important;
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow) !important;
}

.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
  --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color), 0 1px 2px -1px var(--tw-shadow-color);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

.outline-none {
  outline: 2px solid transparent;
  outline-offset: 2px;
}

.outline {
  outline-style: solid;
}

.outline-dashed {
  outline-style: dashed;
}

.outline-dotted {
  outline-style: dotted;
}

.outline-double {
  outline-style: double;
}

.ring {
  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color);
  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);
}

.ring-inset {
  --tw-ring-inset: inset;
}

.blur {
  --tw-blur: blur(8px);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.drop-shadow {
  --tw-drop-shadow: drop-shadow(0 1px 2px rgb(0 0 0 / 0.1)) drop-shadow(0 1px 1px rgb(0 0 0 / 0.06));
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.grayscale {
  --tw-grayscale: grayscale(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.invert {
  --tw-invert: invert(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.sepia {
  --tw-sepia: sepia(100%);
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.\!filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow) !important;
}

.filter {
  filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);
}

.filter-none {
  filter: none;
}

.backdrop-blur {
  --tw-backdrop-blur: blur(8px);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-grayscale {
  --tw-backdrop-grayscale: grayscale(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-invert {
  --tw-backdrop-invert: invert(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-sepia {
  --tw-backdrop-sepia: sepia(100%);
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter {
  -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
  backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);
}

.backdrop-filter-none {
  -webkit-backdrop-filter: none;
  backdrop-filter: none;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.ease-in {
  transition-timing-function: cubic-bezier(0.4, 0, 1, 1);
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

.ease-out {
  transition-timing-function: cubic-bezier(0, 0, 0.2, 1);
}

.contain-none {
  contain: none;
}

.contain-content {
  contain: content;
}

.contain-strict {
  contain: strict;
}

.contain-size {
  --tw-contain-size: size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-inline-size {
  --tw-contain-size: inline-size;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-layout {
  --tw-contain-layout: layout;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-paint {
  --tw-contain-paint: paint;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.contain-style {
  --tw-contain-style: style;
  contain: var(--tw-contain-size) var(--tw-contain-layout) var(--tw-contain-paint) var(--tw-contain-style);
}

.content-\[\'this-is-also-valid\]-weirdly-enough\'\] {
  --tw-content: 'this-is-also-valid]-weirdly-enough';
  content: var(--tw-content);
}

.forced-color-adjust-auto {
  forced-color-adjust: auto;
}

.forced-color-adjust-none {
  forced-color-adjust: none;
}

.rounded-box {
  border-radius: var(--radius-box);
}

.rounded-field {
  border-radius: var(--radius-field);
}

.rounded-selector {
  border-radius: var(--radius-selector);
}

.rounded-t-box {
  border-top-left-radius: var(--radius-box);
  border-top-right-radius: var(--radius-box);
}

.rounded-b-box {
  border-bottom-left-radius: var(--radius-box);
  border-bottom-right-radius: var(--radius-box);
}

.rounded-l-box {
  border-top-left-radius: var(--radius-box);
  border-bottom-left-radius: var(--radius-box);
}

.rounded-r-box {
  border-top-right-radius: var(--radius-box);
  border-bottom-right-radius: var(--radius-box);
}

.rounded-tl-box {
  border-top-left-radius: var(--radius-box);
}

.rounded-tr-box {
  border-top-right-radius: var(--radius-box);
}

.rounded-br-box {
  border-bottom-right-radius: var(--radius-box);
}

.rounded-bl-box {
  border-bottom-left-radius: var(--radius-box);
}

.rounded-t-field {
  border-top-left-radius: var(--radius-field);
  border-top-right-radius: var(--radius-field);
}

.rounded-b-field {
  border-bottom-left-radius: var(--radius-field);
  border-bottom-right-radius: var(--radius-field);
}

.rounded-l-field {
  border-top-left-radius: var(--radius-field);
  border-bottom-left-radius: var(--radius-field);
}

.rounded-r-field {
  border-top-right-radius: var(--radius-field);
  border-bottom-right-radius: var(--radius-field);
}

.rounded-tl-field {
  border-top-left-radius: var(--radius-field);
}

.rounded-tr-field {
  border-top-right-radius: var(--radius-field);
}

.rounded-br-field {
  border-bottom-right-radius: var(--radius-field);
}

.rounded-bl-field {
  border-bottom-left-radius: var(--radius-field);
}

.rounded-t-selector {
  border-top-left-radius: var(--radius-selector);
  border-top-right-radius: var(--radius-selector);
}

.rounded-b-selector {
  border-bottom-left-radius: var(--radius-selector);
  border-bottom-right-radius: var(--radius-selector);
}

.rounded-l-selector {
  border-top-left-radius: var(--radius-selector);
  border-bottom-left-radius: var(--radius-selector);
}

.rounded-r-selector {
  border-top-right-radius: var(--radius-selector);
  border-bottom-right-radius: var(--radius-selector);
}

.rounded-tl-selector {
  border-top-left-radius: var(--radius-selector);
}

.rounded-tr-selector {
  border-top-right-radius: var(--radius-selector);
}

.rounded-br-selector {
  border-bottom-right-radius: var(--radius-selector);
}

.rounded-bl-selector {
  border-bottom-left-radius: var(--radius-selector);
}

.glass {
  border: none;
  -webkit-backdrop-filter: blur(var(--glass-blur, 40px));
          backdrop-filter: blur(var(--glass-blur, 40px));
  background-color: #0000;
  background-image: linear-gradient( 135deg, oklch(100% 0 0 / var(--glass-opacity, 30%)) 0%, oklch(0% 0 0 / 0%) 100% ), linear-gradient( var(--glass-reflect-degree, 100deg), oklch(100% 0 0 / var(--glass-reflect-opacity, 5%)) 25%, oklch(0% 0 0 / 0%) 25% );
  box-shadow: 0 0 0 1px oklch(100% 0 0 / var(--glass-border-opacity, 20%)) inset, 0 0 0 2px oklch(0% 0 0 / 5%);
  text-shadow: 0 1px oklch(0% 0 0 / var(--glass-text-shadow-opacity, 5%));
}

:root .prose {
  --tw-prose-body: color-mix(in oklab, var(--color-base-content) 80%, #0000);
  --tw-prose-headings: var(--color-base-content);
  --tw-prose-lead: var(--color-base-content);
  --tw-prose-links: var(--color-base-content);
  --tw-prose-bold: var(--color-base-content);
  --tw-prose-counters: var(--color-base-content);
  --tw-prose-bullets: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-hr: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-quotes: var(--color-base-content);
  --tw-prose-quote-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-captions: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-code: var(--color-base-content);
  --tw-prose-pre-code: var(--color-neutral-content);
  --tw-prose-pre-bg: var(--color-neutral);
  --tw-prose-th-borders: color-mix(in oklab, var(--color-base-content) 50%, #0000);
  --tw-prose-td-borders: color-mix(in oklab, var(--color-base-content) 20%, #0000);
  --tw-prose-kbd: color-mix(in oklab, var(--color-base-content) 80%, #0000);
}

:root .prose :where(code):not(pre > code) {
  background-color: var(--color-base-200);
  border-radius: var(--radius-selector);
  border: var(--border) solid var(--color-base-300);
  padding-inline: 0.5em;
  font-weight: inherit;
}

:root .prose :where(code):not(pre > code):before, :root .prose :where(code):not(pre > code):after {
  display: none;
}

.join {
  display: inline-flex;
  align-items: stretch;
  --join-ss: 0;
  --join-se: 0;
  --join-es: 0;
  --join-ee: 0;
}

.join :where(.join-item) {
  border-start-start-radius: var(--join-ss, 0);
  border-start-end-radius: var(--join-se, 0);
  border-end-start-radius: var(--join-es, 0);
  border-end-end-radius: var(--join-ee, 0);
}

.join :where(.join-item) * {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:first-child) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join :first-child:not(:last-child) :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join > .join-item:where(:last-child) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join :last-child:not(:first-child) :where(.join-item) {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join > .join-item:where(:only-child) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join :only-child :where(.join-item) {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-item:where(*:not(:first-child)) {
  margin-inline-start: calc(var(--border, 1px) * -1);
  margin-block-start: 0;
}

.join-vertical {
  flex-direction: column;
}

.join-vertical > .join-item:first-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: 0;
}

.join-vertical :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: 0;
}

.join-vertical > .join-item:last-child {
  --join-ss: 0;
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical > .join-item:only-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-vertical .join-item:where(*:not(:first-child)) {
  margin-inline-start: 0;
  margin-block-start: calc(var(--border, 1px) * -1);
}

.join-horizontal {
  flex-direction: row;
}

.join-horizontal > .join-item:first-child {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join-horizontal :first-child:not(:last-child) .join-item {
  --join-ss: var(--radius-field);
  --join-se: 0;
  --join-es: var(--radius-field);
  --join-ee: 0;
}

.join-horizontal > .join-item:last-child {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join-horizontal :last-child:not(:first-child) .join-item {
  --join-ss: 0;
  --join-se: var(--radius-field);
  --join-es: 0;
  --join-ee: var(--radius-field);
}

.join-horizontal > .join-item:only-child {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-horizontal :only-child .join-item {
  --join-ss: var(--radius-field);
  --join-se: var(--radius-field);
  --join-es: var(--radius-field);
  --join-ee: var(--radius-field);
}

.join-horizontal .join-item:where(*:not(:first-child)) {
  margin-inline-start: calc(var(--border, 1px) * -1);
  margin-block-start: 0;
}

div[data-mode="simple"] {
  background-image: url(../images/uchburchak.svg);
}

div[data-mode="advanced"] {
  background-image: url(../images/5burchak.svg);
}

div[data-mode="simple"] img {
  height: 203px;
  width: 198px;
}

div[data-mode="advanced"] img {
  height: 148px;
  width: 145px;
}

div[data-mode] > ul {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}

div[data-mode="simple"] > ul {
  row-gap: 1.5rem;
  -moz-column-gap: 5rem;
       column-gap: 5rem;
}

div[data-mode="advanced"] > ul {
  row-gap: 38px;
  -moz-column-gap: 52px;
       column-gap: 52px;
}

div[data-mode="advanced"] > ul > li:nth-child(1) {
  grid-column: 1 / 3;
  place-self: center;
  margin-bottom: -55;
}

div[data-mode="advanced"] > ul > li:nth-child(2) {
  place-self: start;
}

div[data-mode="advanced"] > ul > li:nth-child(3) {
  place-self: end;
}

div[data-mode="advanced"] > ul > li:nth-child(4) {
  place-self: end;
}

div[data-mode="advanced"] > ul > li:nth-child(5) {
  place-self: start;
}

div[data-mode="simple"] > ul > li:nth-child(3) {
  grid-column: 1 / 3;
  place-self: center;
}

div[data-mode="simple"] > ul > li:nth-child(4) {
  display: none;
}

div[data-mode="simple"] > ul > li:nth-child(5) {
  display: none;
}

@media (min-width: 640px) {
  .sm\:container {
    width: 100%;
  }

  @media (min-width: 640px) {
    .sm\:container {
      max-width: 640px;
    }
  }

  @media (min-width: 768px) {
    .sm\:container {
      max-width: 768px;
    }
  }

  @media (min-width: 1024px) {
    .sm\:container {
      max-width: 1024px;
    }
  }

  @media (min-width: 1280px) {
    .sm\:container {
      max-width: 1280px;
    }
  }

  @media (min-width: 1536px) {
    .sm\:container {
      max-width: 1536px;
    }
  }
}

.hover\:font-bold:hover {
  font-weight: 700;
}

.before\:hover\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.hover\:before\:text-center:hover::before {
  content: var(--tw-content);
  text-align: center;
}

.focus\:hover\:text-center:hover:focus {
  text-align: center;
}

.hover\:focus\:text-center:focus:hover {
  text-align: center;
}

@media (min-width: 640px) {
  .sm\:underline {
    text-decoration-line: underline;
  }
}

@media (prefers-color-scheme: dark) {
  @media (min-width: 1024px) {
    .dark\:lg\:hover\:\[paint-order\:markers\]:hover {
      paint-order: markers;
    }
  }
}  